"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var node_exports = {};
__export(node_exports, {
  Description: () => Description,
  DescriptionAndValidation: () => DescriptionAndValidation,
  ErrorMessage: () => ErrorMessage,
  INPUT_NAME: () => INPUT_NAME,
  InputRoot: () => InputRoot,
  Label: () => Label,
  PinInput: () => PinInput,
  Root: () => InputRoot,
  TextArea: () => TextArea,
  TextInput: () => TextInput,
  Validation: () => Validation,
  createInputScope: () => createInputScope,
  useInputContext: () => useInputContext
});
module.exports = __toCommonJS(node_exports);
var import_tracking = require("@preact-signals/safe-react/tracking");
var import_react_primitive = require("@radix-ui/react-primitive");
var import_react_slot = require("@radix-ui/react-slot");
var import_react = __toESM(require("react"));
var import_tracking2 = require("@preact-signals/safe-react/tracking");
var import_react_context = require("@radix-ui/react-context");
var import_react2 = __toESM(require("react"));
var import_react_hooks = require("@dxos/react-hooks");
var import_tracking3 = require("@preact-signals/safe-react/tracking");
var import_rci = require("rci");
var import_react3 = __toESM(require("react"));
var import_react_hooks2 = require("@dxos/react-hooks");
var import_tracking4 = require("@preact-signals/safe-react/tracking");
var import_react_primitive2 = require("@radix-ui/react-primitive");
var import_react4 = __toESM(require("react"));
var import_tracking5 = require("@preact-signals/safe-react/tracking");
var import_react5 = __toESM(require("react"));
var INPUT_NAME = "Input";
var [createInputContext, createInputScope] = (0, import_react_context.createContextScope)(INPUT_NAME, []);
var [InputProvider, useInputContext] = createInputContext(INPUT_NAME);
var InputRoot = ({ __inputScope, id: propsId, descriptionId: propsDescriptionId, errorMessageId: propsErrorMessageId, validationValence = "neutral", children }) => {
  var _effect = (0, import_tracking2.useSignals)();
  try {
    const id = (0, import_react_hooks.useId)("input", propsId);
    const descriptionId = (0, import_react_hooks.useId)("input__description", propsDescriptionId);
    const errorMessageId = (0, import_react_hooks.useId)("input__error-message", propsErrorMessageId);
    return /* @__PURE__ */ import_react2.default.createElement(InputProvider, {
      id,
      descriptionId,
      errorMessageId,
      validationValence,
      scope: __inputScope
    }, children);
  } finally {
    _effect.f();
  }
};
InputRoot.displayName = INPUT_NAME;
var Label = /* @__PURE__ */ (0, import_react.forwardRef)(({ __inputScope, asChild, children, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking.useSignals)();
  try {
    const { id } = useInputContext(INPUT_NAME, __inputScope);
    const Root = asChild ? import_react_slot.Slot : import_react_primitive.Primitive.label;
    return /* @__PURE__ */ import_react.default.createElement(Root, {
      ...props,
      htmlFor: id,
      ref: forwardedRef
    }, children);
  } finally {
    _effect.f();
  }
});
var Description = /* @__PURE__ */ (0, import_react.forwardRef)(({ __inputScope, asChild, children, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking.useSignals)();
  try {
    const { descriptionId, validationValence } = useInputContext(INPUT_NAME, __inputScope);
    const Root = asChild ? import_react_slot.Slot : import_react_primitive.Primitive.span;
    return /* @__PURE__ */ import_react.default.createElement(Root, {
      ...props,
      ...validationValence === "error" && {
        id: descriptionId
      },
      ref: forwardedRef
    }, children);
  } finally {
    _effect.f();
  }
});
var ErrorMessage = /* @__PURE__ */ (0, import_react.forwardRef)(({ __inputScope, asChild, children, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking.useSignals)();
  try {
    const { errorMessageId } = useInputContext(INPUT_NAME, __inputScope);
    const Root = asChild ? import_react_slot.Slot : import_react_primitive.Primitive.span;
    return /* @__PURE__ */ import_react.default.createElement(Root, {
      ...props,
      id: errorMessageId,
      ref: forwardedRef
    }, children);
  } finally {
    _effect.f();
  }
});
var Validation = /* @__PURE__ */ (0, import_react.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking.useSignals)();
  try {
    const { __inputScope, asChild, children, ...otherProps } = props;
    const { validationValence } = useInputContext(INPUT_NAME, __inputScope);
    if (validationValence === "error") {
      return /* @__PURE__ */ import_react.default.createElement(ErrorMessage, {
        ...props,
        ref: forwardedRef
      });
    } else {
      const Root = asChild ? import_react_slot.Slot : import_react_primitive.Primitive.span;
      return /* @__PURE__ */ import_react.default.createElement(Root, {
        ...otherProps,
        ref: forwardedRef
      }, children);
    }
  } finally {
    _effect.f();
  }
});
var DescriptionAndValidation = /* @__PURE__ */ (0, import_react.forwardRef)(({ __inputScope, asChild, children, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking.useSignals)();
  try {
    const { descriptionId, validationValence } = useInputContext(INPUT_NAME, __inputScope);
    const Root = asChild ? import_react_slot.Slot : import_react_primitive.Primitive.p;
    return /* @__PURE__ */ import_react.default.createElement(Root, {
      ...props,
      ...validationValence !== "error" && {
        id: descriptionId
      },
      ref: forwardedRef
    }, children);
  } finally {
    _effect.f();
  }
});
var PinInput = /* @__PURE__ */ (0, import_react3.forwardRef)(({ __inputScope, segmentClassName, inputClassName, segmentPadding = "8px", segmentHeight = "100%", ...props }, forwardedRef) => {
  var _effect = (0, import_tracking3.useSignals)();
  try {
    const { id, validationValence, descriptionId, errorMessageId } = useInputContext(INPUT_NAME, __inputScope);
    const width = (0, import_rci.getSegmentCssWidth)(segmentPadding);
    const inputRef = (0, import_react_hooks2.useForwardedRef)(forwardedRef);
    const inputFocused = (0, import_react_hooks2.useIsFocused)(inputRef);
    const renderSegment = (0, import_react3.useCallback)(({ state, index }) => /* @__PURE__ */ import_react3.default.createElement("div", {
      key: index,
      className: segmentClassName?.({
        focused: !!(inputFocused && state),
        validationValence
      }),
      "data-state": state,
      style: {
        width,
        height: segmentHeight
      }
    }), [
      segmentClassName,
      inputFocused,
      validationValence
    ]);
    return /* @__PURE__ */ import_react3.default.createElement(import_rci.CodeInput, {
      padding: "8px",
      spacing: "8px",
      fontFamily: "",
      spellCheck: false,
      length: 6,
      ...props,
      id,
      "aria-describedby": descriptionId,
      ...validationValence === "error" && {
        "aria-invalid": "true",
        "aria-errormessage": errorMessageId
      },
      inputRef,
      renderSegment,
      className: inputClassName
    });
  } finally {
    _effect.f();
  }
});
var TextInput = /* @__PURE__ */ (0, import_react4.forwardRef)(({ __inputScope, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking4.useSignals)();
  try {
    const { id, validationValence, descriptionId, errorMessageId } = useInputContext(INPUT_NAME, __inputScope);
    return /* @__PURE__ */ import_react4.default.createElement(import_react_primitive2.Primitive.input, {
      ...props,
      id,
      "aria-describedby": descriptionId,
      ...validationValence === "error" && {
        "aria-invalid": "true",
        "aria-errormessage": errorMessageId
      },
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var TextArea = /* @__PURE__ */ (0, import_react5.forwardRef)(({ __inputScope, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking5.useSignals)();
  try {
    const { id, validationValence, descriptionId, errorMessageId } = useInputContext(INPUT_NAME, __inputScope);
    return /* @__PURE__ */ import_react5.default.createElement("textarea", {
      ...props,
      id,
      "aria-describedby": descriptionId,
      ...validationValence === "error" && {
        "aria-invalid": "true",
        "aria-errormessage": errorMessageId
      },
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Description,
  DescriptionAndValidation,
  ErrorMessage,
  INPUT_NAME,
  InputRoot,
  Label,
  PinInput,
  Root,
  TextArea,
  TextInput,
  Validation,
  createInputScope,
  useInputContext
});
//# sourceMappingURL=index.cjs.map
