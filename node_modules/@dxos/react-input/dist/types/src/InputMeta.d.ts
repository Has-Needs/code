import { Primitive } from '@radix-ui/react-primitive';
import React, { type ComponentPropsWithRef } from 'react';
type LabelProps = ComponentPropsWithRef<typeof Primitive.label> & {
    asChild?: boolean;
};
declare const Label: React.ForwardRefExoticComponent<Omit<LabelProps, "ref"> & React.RefAttributes<HTMLLabelElement>>;
type DescriptionProps = Omit<ComponentPropsWithRef<typeof Primitive.span>, 'id'> & {
    asChild?: boolean;
};
declare const Description: React.ForwardRefExoticComponent<Omit<DescriptionProps, "ref"> & React.RefAttributes<HTMLSpanElement>>;
type ErrorMessageProps = Omit<ComponentPropsWithRef<typeof Primitive.span>, 'id'> & {
    asChild?: boolean;
};
declare const ErrorMessage: React.ForwardRefExoticComponent<Omit<ErrorMessageProps, "ref"> & React.RefAttributes<HTMLSpanElement>>;
type ValidationProps = Omit<ComponentPropsWithRef<typeof Primitive.span>, 'id'> & {
    asChild?: boolean;
};
declare const Validation: React.ForwardRefExoticComponent<Omit<ValidationProps, "ref"> & React.RefAttributes<HTMLSpanElement>>;
type DescriptionAndValidationProps = ComponentPropsWithRef<typeof Primitive.p> & {
    asChild?: boolean;
};
declare const DescriptionAndValidation: React.ForwardRefExoticComponent<Omit<DescriptionAndValidationProps, "ref"> & React.RefAttributes<HTMLParagraphElement>>;
export { Label, Validation, Description, DescriptionAndValidation, ErrorMessage };
export type { LabelProps, ValidationProps, DescriptionProps, DescriptionAndValidationProps, ErrorMessageProps };
//# sourceMappingURL=InputMeta.d.ts.map