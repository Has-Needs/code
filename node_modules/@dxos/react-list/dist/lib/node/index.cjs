"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var node_exports = {};
__export(node_exports, {
  LIST_ITEM_NAME: () => LIST_ITEM_NAME,
  LIST_NAME: () => LIST_NAME,
  List: () => List,
  ListItem: () => ListItem,
  ListItemCollapsibleContent: () => ListItemCollapsibleContent,
  ListItemHeading: () => ListItemHeading,
  ListItemOpenTrigger: () => ListItemOpenTrigger,
  createListItemScope: () => createListItemScope,
  createListScope: () => createListScope,
  useListContext: () => useListContext,
  useListItemContext: () => useListItemContext
});
module.exports = __toCommonJS(node_exports);
var import_tracking = require("@preact-signals/safe-react/tracking");
var import_react_context = require("@radix-ui/react-context");
var import_react_primitive = require("@radix-ui/react-primitive");
var import_react = __toESM(require("react"));
var import_tracking2 = require("@preact-signals/safe-react/tracking");
var Collapsible = __toESM(require("@radix-ui/react-collapsible"));
var import_react_context2 = require("@radix-ui/react-context");
var import_react_primitive2 = require("@radix-ui/react-primitive");
var import_react_slot = require("@radix-ui/react-slot");
var import_react_use_controllable_state = require("@radix-ui/react-use-controllable-state");
var import_react2 = __toESM(require("react"));
var import_react_hooks = require("@dxos/react-hooks");
var LIST_NAME = "List";
var [createListContext, createListScope] = (0, import_react_context.createContextScope)(LIST_NAME, []);
var [ListProvider, useListContext] = createListContext(LIST_NAME);
var List = /* @__PURE__ */ (0, import_react.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking.useSignals)();
  try {
    const { __listScope, variant = "ordered", selectable = false, itemSizes, children, ...rootProps } = props;
    const ListRoot = variant === "ordered" ? import_react_primitive.Primitive.ol : import_react_primitive.Primitive.ul;
    return /* @__PURE__ */ import_react.default.createElement(ListRoot, {
      ...selectable && {
        role: "listbox",
        "aria-multiselectable": true
      },
      ...rootProps,
      ref: forwardedRef
    }, /* @__PURE__ */ import_react.default.createElement(ListProvider, {
      scope: __listScope,
      variant,
      selectable,
      itemSizes
    }, children));
  } finally {
    _effect.f();
  }
});
List.displayName = LIST_NAME;
var LIST_ITEM_NAME = "ListItem";
var [createListItemContext, createListItemScope] = (0, import_react_context2.createContextScope)(LIST_ITEM_NAME, []);
var [ListItemProvider, useListItemContext] = createListItemContext(LIST_ITEM_NAME);
var ListItemHeading = /* @__PURE__ */ (0, import_react2.forwardRef)(({ children, asChild, __listItemScope, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking2.useSignals)();
  try {
    const { headingId } = useListItemContext(LIST_ITEM_NAME, __listItemScope);
    const Root2 = asChild ? import_react_slot.Slot : import_react_primitive2.Primitive.div;
    return /* @__PURE__ */ import_react2.default.createElement(Root2, {
      ...props,
      id: headingId,
      ref: forwardedRef
    }, children);
  } finally {
    _effect.f();
  }
});
var ListItemOpenTrigger = Collapsible.Trigger;
var ListItemCollapsibleContent = Collapsible.Content;
var ListItem = /* @__PURE__ */ (0, import_react2.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking2.useSignals)();
  try {
    const id = (0, import_react_hooks.useId)("listItem", props.id);
    const { __listScope, __listItemScope, children, selected: propsSelected, defaultSelected, onSelectedChange, open: propsOpen, defaultOpen, onOpenChange, collapsible, labelId, ...listItemProps } = props;
    const { selectable } = useListContext(LIST_NAME, __listScope);
    const [selected = false, setSelected] = (0, import_react_use_controllable_state.useControllableState)({
      prop: propsSelected,
      defaultProp: defaultSelected,
      onChange: onSelectedChange
    });
    const [open = false, setOpen] = (0, import_react_use_controllable_state.useControllableState)({
      prop: propsOpen,
      defaultProp: defaultOpen,
      onChange: onOpenChange
    });
    const headingId = (0, import_react_hooks.useId)("listItem__heading", labelId);
    const listItem = /* @__PURE__ */ import_react2.default.createElement(import_react_primitive2.Primitive.li, {
      ...listItemProps,
      id,
      ref: forwardedRef,
      "aria-labelledby": headingId,
      ...selectable && {
        role: "option",
        "aria-selected": !!selected
      },
      ...open && {
        "aria-expanded": true
      }
    }, children);
    return /* @__PURE__ */ import_react2.default.createElement(ListItemProvider, {
      scope: __listItemScope,
      headingId,
      open,
      selected,
      setSelected
    }, collapsible ? /* @__PURE__ */ import_react2.default.createElement(Collapsible.Root, {
      asChild: true,
      open,
      onOpenChange: setOpen
    }, listItem) : listItem);
  } finally {
    _effect.f();
  }
});
ListItem.displayName = LIST_ITEM_NAME;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  LIST_ITEM_NAME,
  LIST_NAME,
  List,
  ListItem,
  ListItemCollapsibleContent,
  ListItemHeading,
  ListItemOpenTrigger,
  createListItemScope,
  createListScope,
  useListContext,
  useListItemContext
});
//# sourceMappingURL=index.cjs.map
