/**
 * Bitfield encodes indices from MSB to LSB.
 * Index 0 is the MSB of the first byte.
 *
 *
 * #0       #1       #2       #3
 * 01010101 11110000 00001111 01010101
 * ^      ^
 * MSB    LSB
 */
export declare class BitField {
    static get(data: Uint8Array, idx: number): boolean;
    static set(data: Uint8Array, idx: number, value: boolean): void;
    /**
     * [start; end)
     */
    static count(data: Uint8Array, begin: number, end: number): number;
    static invert(data: Uint8Array): Uint8Array;
    static and(first: Uint8Array, second: Uint8Array): Uint8Array;
    static findIndexes(data: Uint8Array, opts?: {
        start?: number;
        end?: number;
        value?: boolean;
    }): number[];
    static ones(count: number): Uint8Array;
    static zeros(count: number): Uint8Array;
}
//# sourceMappingURL=bitfield.d.ts.map