import '@dxos-theme';
import React, { type PropsWithChildren } from 'react';
declare const _default: {
    title: string;
    component: {
        Root: React.ForwardRefExoticComponent<Omit<import("@radix-ui/react-scroll-area").ScrollAreaProps, "className"> & {
            classNames?: import("@dxos/react-ui-types").ClassNameValue;
        } & React.RefAttributes<HTMLDivElement>>;
        Viewport: React.ForwardRefExoticComponent<Omit<import("@radix-ui/react-scroll-area").ScrollAreaViewportProps, "className"> & {
            classNames?: import("@dxos/react-ui-types").ClassNameValue;
        } & React.RefAttributes<HTMLDivElement>>;
        Scrollbar: React.ForwardRefExoticComponent<Omit<import("@radix-ui/react-scroll-area").ScrollAreaScrollbarProps, "className"> & {
            classNames?: import("@dxos/react-ui-types").ClassNameValue;
        } & {
            variant?: "coarse" | "fine";
        } & React.RefAttributes<HTMLDivElement>>;
        Thumb: React.ForwardRefExoticComponent<Omit<import("@radix-ui/react-scroll-area").ScrollAreaThumbProps, "className"> & {
            classNames?: import("@dxos/react-ui-types").ClassNameValue;
        } & React.RefAttributes<HTMLDivElement>>;
        Corner: React.ForwardRefExoticComponent<Omit<import("@radix-ui/react-scroll-area").ScrollAreaCornerProps, "className"> & {
            classNames?: import("@dxos/react-ui-types").ClassNameValue;
        } & React.RefAttributes<HTMLDivElement>>;
    };
    render: ({ children }: PropsWithChildren<{}>) => React.JSX.Element;
    decorators: import("@storybook/react").Decorator[];
    parameters: {
        chromatic: {
            disableSnapshot: boolean;
        };
    };
};
export default _default;
export declare const Default: {
    args: {
        children: string;
    };
};
//# sourceMappingURL=ScrollArea.stories.d.ts.map