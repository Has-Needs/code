import { type ToggleGroupSingleProps, type ToggleGroupMultipleProps, type ToggleGroupItemProps as ToggleGroupItemPrimitiveProps } from '@radix-ui/react-toggle-group';
import React from 'react';
import { type ButtonProps } from './Button';
type ToggleGroupProps = Omit<ToggleGroupSingleProps, 'className'> | Omit<ToggleGroupMultipleProps, 'className'>;
declare const ToggleGroup: React.ForwardRefExoticComponent<(Omit<Omit<ToggleGroupSingleProps, "className"> & Omit<Omit<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & {
    ref?: ((instance: HTMLDivElement | null) => void | React.DO_NOT_USE_OR_YOU_WILL_BE_FIRED_CALLBACK_REF_RETURN_VALUES[keyof React.DO_NOT_USE_OR_YOU_WILL_BE_FIRED_CALLBACK_REF_RETURN_VALUES]) | React.RefObject<HTMLDivElement> | null | undefined;
} & {
    asChild?: boolean;
}, "className"> & {
    classNames?: import("@dxos/react-ui-types").ClassNameValue;
} & {
    elevation?: import("@dxos/react-ui-types").Elevation;
    asChild?: boolean;
}, "ref"> | Omit<Omit<ToggleGroupMultipleProps, "className"> & Omit<Omit<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & {
    ref?: ((instance: HTMLDivElement | null) => void | React.DO_NOT_USE_OR_YOU_WILL_BE_FIRED_CALLBACK_REF_RETURN_VALUES[keyof React.DO_NOT_USE_OR_YOU_WILL_BE_FIRED_CALLBACK_REF_RETURN_VALUES]) | React.RefObject<HTMLDivElement> | null | undefined;
} & {
    asChild?: boolean;
}, "className"> & {
    classNames?: import("@dxos/react-ui-types").ClassNameValue;
} & {
    elevation?: import("@dxos/react-ui-types").Elevation;
    asChild?: boolean;
}, "ref">) & React.RefAttributes<HTMLDivElement>>;
type ToggleGroupItemProps = Omit<ToggleGroupItemPrimitiveProps, 'className'> & ButtonProps;
declare const ToggleGroupItem: React.ForwardRefExoticComponent<Omit<ToggleGroupItemProps, "ref"> & React.RefAttributes<HTMLButtonElement>>;
export { ToggleGroup, ToggleGroupItem };
export type { ToggleGroupProps, ToggleGroupItemProps };
//# sourceMappingURL=ToggleGroup.d.ts.map