import { Primitive } from '@radix-ui/react-primitive';
import React, { type ComponentPropsWithoutRef, type ComponentPropsWithRef } from 'react';
import { type ThemedClassName } from '../../util';
import { type LinkProps } from '../Link';
type BreadcrumbRootProps = ThemedClassName<ComponentPropsWithRef<typeof Primitive.div>> & {
    'aria-label': string;
    asChild?: boolean;
};
type BreadcrumbListProps = ThemedClassName<ComponentPropsWithRef<typeof Primitive.ol>> & {
    asChild?: boolean;
};
type BreadcrumbListItemProps = ThemedClassName<ComponentPropsWithRef<typeof Primitive.li>> & {
    asChild?: boolean;
};
type BreadcrumbLinkProps = LinkProps;
type BreadcrumbCurrentProps = ThemedClassName<ComponentPropsWithRef<'h1'>> & {
    asChild?: boolean;
};
type BreadcrumbSeparatorProps = ThemedClassName<ComponentPropsWithoutRef<typeof Primitive.span>>;
export declare const Breadcrumb: {
    Root: React.ForwardRefExoticComponent<Omit<BreadcrumbRootProps, "ref"> & React.RefAttributes<HTMLDivElement>>;
    List: React.ForwardRefExoticComponent<Omit<BreadcrumbListProps, "ref"> & React.RefAttributes<HTMLOListElement>>;
    ListItem: React.ForwardRefExoticComponent<Omit<BreadcrumbListItemProps, "ref"> & React.RefAttributes<HTMLLIElement>>;
    Link: React.ForwardRefExoticComponent<Omit<LinkProps, "ref"> & React.RefAttributes<HTMLAnchorElement>>;
    Current: React.ForwardRefExoticComponent<Omit<BreadcrumbCurrentProps, "ref"> & React.RefAttributes<HTMLHeadingElement>>;
    Separator: ({ children, classNames, ...props }: BreadcrumbSeparatorProps) => React.JSX.Element;
};
export type { BreadcrumbRootProps, BreadcrumbListProps, BreadcrumbListItemProps, BreadcrumbLinkProps, BreadcrumbCurrentProps, BreadcrumbSeparatorProps, };
//# sourceMappingURL=Breadcrumb.d.ts.map