import '@dxos-theme';
import React from 'react';
declare const _default: {
    title: string;
    component: {
        Root: React.FC<import("@radix-ui/react-context-menu").ContextMenuProps>;
        Trigger: React.ForwardRefExoticComponent<import("@radix-ui/react-context-menu").ContextMenuTriggerProps & React.RefAttributes<HTMLSpanElement>>;
        Portal: React.FC<import("@radix-ui/react-context-menu").ContextMenuPortalProps>;
        Content: React.ForwardRefExoticComponent<Omit<import("@radix-ui/react-context-menu").ContextMenuContentProps, "className"> & {
            classNames?: import("@dxos/react-ui-types").ClassNameValue;
        } & {
            constrainBlockSize?: boolean;
        } & React.RefAttributes<HTMLDivElement>>;
        Viewport: React.ForwardRefExoticComponent<Omit<import("./ContextMenu").ContextMenuViewportProps, "ref"> & React.RefAttributes<HTMLDivElement>>;
        Arrow: React.ForwardRefExoticComponent<Omit<import("@radix-ui/react-context-menu").ContextMenuArrowProps, "className"> & {
            classNames?: import("@dxos/react-ui-types").ClassNameValue;
        } & React.RefAttributes<SVGSVGElement>>;
        Group: React.ForwardRefExoticComponent<import("@radix-ui/react-context-menu").ContextMenuGroupProps & React.RefAttributes<HTMLDivElement>>;
        Item: React.ForwardRefExoticComponent<Omit<import("@radix-ui/react-context-menu").ContextMenuItemProps, "className"> & {
            classNames?: import("@dxos/react-ui-types").ClassNameValue;
        } & React.RefAttributes<HTMLDivElement>>;
        CheckboxItem: React.ForwardRefExoticComponent<Omit<import("@radix-ui/react-context-menu").ContextMenuCheckboxItemProps, "className"> & {
            classNames?: import("@dxos/react-ui-types").ClassNameValue;
        } & React.RefAttributes<HTMLDivElement>>;
        ItemIndicator: React.ForwardRefExoticComponent<import("@radix-ui/react-context-menu").ContextMenuItemIndicatorProps & React.RefAttributes<HTMLSpanElement>>;
        Separator: React.ForwardRefExoticComponent<Omit<import("@radix-ui/react-context-menu").ContextMenuSeparatorProps, "className"> & {
            classNames?: import("@dxos/react-ui-types").ClassNameValue;
        } & React.RefAttributes<HTMLDivElement>>;
        GroupLabel: React.ForwardRefExoticComponent<Omit<import("@radix-ui/react-context-menu").ContextMenuLabelProps, "className"> & {
            classNames?: import("@dxos/react-ui-types").ClassNameValue;
        } & React.RefAttributes<HTMLDivElement>>;
    };
    render: () => React.JSX.Element;
    decorators: import("@storybook/react").Decorator[];
    parameters: {
        chromatic: {
            disableSnapshot: boolean;
        };
    };
};
export default _default;
export declare const Default: {
    args: {};
    parameters: {
        chromatic: {
            delay: number;
        };
    };
};
//# sourceMappingURL=ContextMenu.stories.d.ts.map