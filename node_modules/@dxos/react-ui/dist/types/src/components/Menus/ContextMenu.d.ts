import * as ContextMenuPrimitive from '@radix-ui/react-context-menu';
import { Primitive } from '@radix-ui/react-primitive';
import React, { type ComponentPropsWithRef } from 'react';
import { type ThemedClassName } from '../../util';
type ContextMenuRootProps = ContextMenuPrimitive.ContextMenuProps;
type ContextMenuTriggerProps = ContextMenuPrimitive.ContextMenuTriggerProps;
type ContextMenuPortalProps = ContextMenuPrimitive.ContextMenuPortalProps;
type ContextMenuContentProps = ThemedClassName<ContextMenuPrimitive.ContextMenuContentProps> & {
    constrainBlockSize?: boolean;
};
type ContextMenuViewportProps = ThemedClassName<ComponentPropsWithRef<typeof Primitive.div>> & {
    asChild?: boolean;
};
type ContextMenuArrowProps = ThemedClassName<ContextMenuPrimitive.ContextMenuArrowProps>;
type ContextMenuGroupProps = ContextMenuPrimitive.ContextMenuGroupProps;
type ContextMenuItemIndicatorProps = ContextMenuPrimitive.ContextMenuItemIndicatorProps;
type ContextMenuItemProps = ThemedClassName<ContextMenuPrimitive.ContextMenuItemProps>;
type ContextMenuCheckboxItemProps = ThemedClassName<ContextMenuPrimitive.ContextMenuCheckboxItemProps>;
type ContextMenuSeparatorProps = ThemedClassName<ContextMenuPrimitive.ContextMenuSeparatorProps>;
type ContextMenuGroupLabelProps = ThemedClassName<ContextMenuPrimitive.ContextMenuLabelProps>;
export declare const ContextMenu: {
    Root: React.FC<ContextMenuPrimitive.ContextMenuProps>;
    Trigger: React.ForwardRefExoticComponent<ContextMenuPrimitive.ContextMenuTriggerProps & React.RefAttributes<HTMLSpanElement>>;
    Portal: React.FC<ContextMenuPrimitive.ContextMenuPortalProps>;
    Content: React.ForwardRefExoticComponent<Omit<ContextMenuPrimitive.ContextMenuContentProps, "className"> & {
        classNames?: import("@dxos/react-ui-types").ClassNameValue;
    } & {
        constrainBlockSize?: boolean;
    } & React.RefAttributes<HTMLDivElement>>;
    Viewport: React.ForwardRefExoticComponent<Omit<ContextMenuViewportProps, "ref"> & React.RefAttributes<HTMLDivElement>>;
    Arrow: React.ForwardRefExoticComponent<Omit<ContextMenuPrimitive.ContextMenuArrowProps, "className"> & {
        classNames?: import("@dxos/react-ui-types").ClassNameValue;
    } & React.RefAttributes<SVGSVGElement>>;
    Group: React.ForwardRefExoticComponent<ContextMenuPrimitive.ContextMenuGroupProps & React.RefAttributes<HTMLDivElement>>;
    Item: React.ForwardRefExoticComponent<Omit<ContextMenuPrimitive.ContextMenuItemProps, "className"> & {
        classNames?: import("@dxos/react-ui-types").ClassNameValue;
    } & React.RefAttributes<HTMLDivElement>>;
    CheckboxItem: React.ForwardRefExoticComponent<Omit<ContextMenuPrimitive.ContextMenuCheckboxItemProps, "className"> & {
        classNames?: import("@dxos/react-ui-types").ClassNameValue;
    } & React.RefAttributes<HTMLDivElement>>;
    ItemIndicator: React.ForwardRefExoticComponent<ContextMenuPrimitive.ContextMenuItemIndicatorProps & React.RefAttributes<HTMLSpanElement>>;
    Separator: React.ForwardRefExoticComponent<Omit<ContextMenuPrimitive.ContextMenuSeparatorProps, "className"> & {
        classNames?: import("@dxos/react-ui-types").ClassNameValue;
    } & React.RefAttributes<HTMLDivElement>>;
    GroupLabel: React.ForwardRefExoticComponent<Omit<ContextMenuPrimitive.ContextMenuLabelProps, "className"> & {
        classNames?: import("@dxos/react-ui-types").ClassNameValue;
    } & React.RefAttributes<HTMLDivElement>>;
};
export type { ContextMenuRootProps, ContextMenuTriggerProps, ContextMenuPortalProps, ContextMenuContentProps, ContextMenuViewportProps, ContextMenuArrowProps, ContextMenuGroupProps, ContextMenuItemProps, ContextMenuCheckboxItemProps, ContextMenuItemIndicatorProps, ContextMenuSeparatorProps, ContextMenuGroupLabelProps, };
//# sourceMappingURL=ContextMenu.d.ts.map