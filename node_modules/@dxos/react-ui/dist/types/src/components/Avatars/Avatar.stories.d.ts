import '@dxos-theme';
import React, { type PropsWithChildren } from 'react';
import { type HuePalette } from '@dxos/react-ui-theme';
import { type Size } from '@dxos/react-ui-types';
import { type AvatarVariant, type AvatarStatus, type AvatarAnimation } from './Avatar';
type StoryProps = {
    id?: string;
    imgSrc?: string;
    fallbackText?: string;
    label?: string;
    description?: string;
    status?: AvatarStatus;
    variant?: AvatarVariant;
    animation?: AvatarAnimation;
    size?: Size;
    hue?: HuePalette;
};
declare const _default: {
    title: string;
    component: {
        Root: ({ children, labelId: propsLabelId, descriptionId: propsDescriptionId }: import("./Avatar").AvatarRootProps) => React.JSX.Element;
        Content: React.ForwardRefExoticComponent<Omit<import("./Avatar").AvatarContentProps, "ref"> & React.RefAttributes<import("@dxos/lit-ui").DxAvatar>>;
        Label: React.ForwardRefExoticComponent<Omit<import("./Avatar").AvatarLabelProps, "ref"> & React.RefAttributes<HTMLSpanElement>>;
        Description: React.ForwardRefExoticComponent<Omit<import("./Avatar").AvatarDescriptionProps, "ref"> & React.RefAttributes<HTMLSpanElement>>;
    };
    render: (props: PropsWithChildren<StoryProps>) => React.JSX.Element;
    decorators: import("@storybook/react").Decorator[];
    parameters: {
        chromatic: {
            disableSnapshot: boolean;
        };
    };
};
export default _default;
export declare const Default: () => React.JSX.Element;
export declare const Image: () => React.JSX.Element;
export declare const Square: () => React.JSX.Element;
export declare const DefaultEmoji: () => React.JSX.Element;
export declare const SquareEmoji: () => React.JSX.Element;
export declare const DefaultText: () => React.JSX.Element;
export declare const Error: () => React.JSX.Element;
export declare const Pulse: () => React.JSX.Element;
//# sourceMappingURL=Avatar.stories.d.ts.map