import React, { type PropsWithChildren } from 'react';
import { type Density, type Elevation, type ThemeFunction } from '@dxos/react-ui-types';
import { type TranslationsProviderProps } from './TranslationsProvider';
import { type SafeAreaPadding } from '../../hooks';
export type ThemeMode = 'light' | 'dark';
export type ThemeContextValue = {
    tx: ThemeFunction<any>;
    themeMode: ThemeMode;
    hasIosKeyboard: boolean;
    safeAreaPadding?: SafeAreaPadding;
    noCache?: boolean;
};
export type ThemeProviderProps = Omit<TranslationsProviderProps, 'children'> & Partial<Omit<ThemeContextValue, 'safeAreaPadding'>> & PropsWithChildren<{
    rootDensity?: Density;
    rootElevation?: Elevation;
}>;
export declare const ThemeProvider: ({ children, fallback, resourceExtensions, appNs, tx, themeMode, rootDensity, ...rest }: ThemeProviderProps) => React.JSX.Element;
//# sourceMappingURL=ThemeProvider.d.ts.map