import * as SelectPrimitive from '@radix-ui/react-select';
import React from 'react';
import { type ThemedClassName } from '../../util';
import { type ButtonProps } from '../Buttons';
type SelectRootProps = SelectPrimitive.SelectProps;
type SelectTriggerProps = SelectPrimitive.SelectTriggerProps;
type SelectValueProps = SelectPrimitive.SelectValueProps;
type SelectIconProps = SelectPrimitive.SelectIconProps;
type SelectPortalProps = SelectPrimitive.SelectPortalProps;
type SelectTriggerButtonProps = Omit<ButtonProps, 'children'> & Pick<SelectValueProps, 'placeholder' | 'children'>;
type SelectContentProps = ThemedClassName<SelectPrimitive.SelectContentProps>;
type SelectScrollUpButtonProps = ThemedClassName<SelectPrimitive.SelectScrollUpButtonProps>;
type SelectScrollDownButtonProps = ThemedClassName<SelectPrimitive.SelectScrollDownButtonProps>;
type SelectViewportProps = ThemedClassName<SelectPrimitive.SelectViewportProps>;
type SelectItemProps = ThemedClassName<SelectPrimitive.SelectItemProps>;
type SelectItemTextProps = SelectPrimitive.SelectItemTextProps;
type SelectItemIndicatorProps = ThemedClassName<SelectPrimitive.SelectItemIndicatorProps>;
type SelectOptionProps = SelectItemProps;
type SelectGroupProps = SelectPrimitive.SelectGroupProps;
type SelectLabelProps = SelectPrimitive.SelectLabelProps;
type SelectSeparatorProps = ThemedClassName<SelectPrimitive.SelectSeparatorProps>;
type SelectArrowProps = ThemedClassName<SelectPrimitive.SelectArrowProps>;
export declare const Select: {
    Root: React.FC<SelectPrimitive.SelectProps>;
    Trigger: React.ForwardRefExoticComponent<SelectPrimitive.SelectTriggerProps & React.RefAttributes<HTMLButtonElement>>;
    TriggerButton: React.ForwardRefExoticComponent<Omit<SelectTriggerButtonProps, "ref"> & React.RefAttributes<HTMLButtonElement>>;
    Value: React.ForwardRefExoticComponent<SelectPrimitive.SelectValueProps & React.RefAttributes<HTMLSpanElement>>;
    Icon: React.ForwardRefExoticComponent<SelectPrimitive.SelectIconProps & React.RefAttributes<HTMLSpanElement>>;
    Portal: React.FC<SelectPrimitive.SelectPortalProps>;
    Content: React.ForwardRefExoticComponent<Omit<SelectPrimitive.SelectContentProps, "className"> & {
        classNames?: import("@dxos/react-ui-types").ClassNameValue;
    } & React.RefAttributes<HTMLDivElement>>;
    ScrollUpButton: React.ForwardRefExoticComponent<Omit<SelectPrimitive.SelectScrollUpButtonProps, "className"> & {
        classNames?: import("@dxos/react-ui-types").ClassNameValue;
    } & React.RefAttributes<HTMLDivElement>>;
    ScrollDownButton: React.ForwardRefExoticComponent<Omit<SelectPrimitive.SelectScrollDownButtonProps, "className"> & {
        classNames?: import("@dxos/react-ui-types").ClassNameValue;
    } & React.RefAttributes<HTMLDivElement>>;
    Viewport: React.ForwardRefExoticComponent<Omit<SelectPrimitive.SelectViewportProps, "className"> & {
        classNames?: import("@dxos/react-ui-types").ClassNameValue;
    } & React.RefAttributes<HTMLDivElement>>;
    Item: React.ForwardRefExoticComponent<Omit<SelectPrimitive.SelectItemProps, "className"> & {
        classNames?: import("@dxos/react-ui-types").ClassNameValue;
    } & React.RefAttributes<HTMLDivElement>>;
    ItemText: React.ForwardRefExoticComponent<SelectPrimitive.SelectItemTextProps & React.RefAttributes<HTMLSpanElement>>;
    ItemIndicator: React.ForwardRefExoticComponent<Omit<SelectPrimitive.SelectItemIndicatorProps, "className"> & {
        classNames?: import("@dxos/react-ui-types").ClassNameValue;
    } & React.RefAttributes<HTMLDivElement>>;
    Option: React.ForwardRefExoticComponent<Omit<SelectPrimitive.SelectItemProps, "className"> & {
        classNames?: import("@dxos/react-ui-types").ClassNameValue;
    } & React.RefAttributes<HTMLDivElement>>;
    Group: React.ForwardRefExoticComponent<SelectPrimitive.SelectGroupProps & React.RefAttributes<HTMLDivElement>>;
    Label: React.ForwardRefExoticComponent<SelectPrimitive.SelectLabelProps & React.RefAttributes<HTMLDivElement>>;
    Separator: React.ForwardRefExoticComponent<Omit<SelectPrimitive.SelectSeparatorProps, "className"> & {
        classNames?: import("@dxos/react-ui-types").ClassNameValue;
    } & React.RefAttributes<HTMLDivElement>>;
    Arrow: React.ForwardRefExoticComponent<Omit<SelectPrimitive.SelectArrowProps, "className"> & {
        classNames?: import("@dxos/react-ui-types").ClassNameValue;
    } & React.RefAttributes<SVGSVGElement>>;
};
export type { SelectRootProps, SelectTriggerProps, SelectTriggerButtonProps, SelectValueProps, SelectIconProps, SelectPortalProps, SelectContentProps, SelectScrollUpButtonProps, SelectScrollDownButtonProps, SelectViewportProps, SelectItemProps, SelectItemTextProps, SelectItemIndicatorProps, SelectOptionProps, SelectGroupProps, SelectLabelProps, SelectSeparatorProps, SelectArrowProps, };
//# sourceMappingURL=Select.d.ts.map