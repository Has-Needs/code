"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var chunk_3E3QKWX4_exports = {};
__export(chunk_3E3QKWX4_exports, {
  AlertDialog: () => AlertDialog,
  AnchoredOverflow: () => AnchoredOverflow,
  Avatar: () => Avatar,
  BUTTON_GROUP_NAME: () => BUTTON_GROUP_NAME,
  Breadcrumb: () => Breadcrumb,
  Button: () => Button,
  ButtonGroup: () => ButtonGroup,
  Callout: () => Callout,
  Clipboard: () => Clipboard,
  ContextMenu: () => ContextMenu2,
  DensityContext: () => DensityContext,
  DensityProvider: () => DensityProvider,
  Dialog: () => Dialog,
  DropdownMenu: () => DropdownMenu,
  ElevationContext: () => ElevationContext,
  ElevationProvider: () => ElevationProvider,
  Icon: () => Icon,
  IconButton: () => IconButton,
  Input: () => Input,
  LIST_ITEM_NAME: () => import_react_list.LIST_ITEM_NAME,
  LIST_NAME: () => import_react_list.LIST_NAME,
  Link: () => Link,
  List: () => List,
  ListItem: () => ListItem,
  Main: () => Main,
  Message: () => Message,
  Popover: () => Popover,
  ScrollArea: () => ScrollArea,
  Select: () => Select,
  Separator: () => Separator4,
  Status: () => Status,
  Tag: () => Tag,
  ThemeContext: () => ThemeContext,
  ThemeProvider: () => ThemeProvider,
  Toast: () => Toast,
  Toggle: () => Toggle,
  ToggleGroup: () => ToggleGroup,
  ToggleGroupItem: () => ToggleGroupItem,
  Toolbar: () => Toolbar,
  Tooltip: () => Tooltip,
  Tree: () => Tree,
  TreeItem: () => TreeItem,
  Treegrid: () => Treegrid,
  createDropdownMenuScope: () => createDropdownMenuScope,
  createPopoverScope: () => createPopoverScope,
  createTooltipScope: () => createTooltipScope,
  hasIosKeyboard: () => hasIosKeyboard,
  initialSafeArea: () => initialSafeArea,
  isLabel: () => isLabel,
  messageIcons: () => messageIcons,
  toLocalizedString: () => toLocalizedString,
  useAvatarContext: () => useAvatarContext,
  useButtonGroupContext: () => useButtonGroupContext,
  useClipboard: () => useClipboard,
  useDensityContext: () => useDensityContext,
  useDropdownMenuContext: () => useDropdownMenuContext,
  useDropdownMenuMenuScope: () => useDropdownMenuMenuScope,
  useElevationContext: () => useElevationContext,
  useIconHref: () => useIconHref,
  useLandmarkMover: () => useLandmarkMover,
  useListContext: () => import_react_list.useListContext,
  useListItemContext: () => import_react_list.useListItemContext,
  useMainContext: () => useMainContext,
  useSafeArea: () => useSafeArea,
  useSidebars: () => useSidebars,
  useThemeContext: () => useThemeContext,
  useTooltipContext: () => useTooltipContext,
  useTranslation: () => useTranslation,
  useTranslationsContext: () => useTranslationsContext,
  useVisualViewport: () => useVisualViewport
});
module.exports = __toCommonJS(chunk_3E3QKWX4_exports);
var import_react = require("react");
var import_tracking = require("@preact-signals/safe-react/tracking");
var import_react_primitive = require("@radix-ui/react-primitive");
var import_react_slot = require("@radix-ui/react-slot");
var import_react2 = __toESM(require("react"));
var import_react3 = require("react");
var import_react4 = require("react");
var import_debug = require("@dxos/debug");
var import_react5 = require("react");
var import_react_hooks = require("@dxos/react-hooks");
var import_react6 = require("react");
var import_tracking2 = require("@preact-signals/safe-react/tracking");
var import_locale = require("date-fns/locale");
var import_i18next = __toESM(require("i18next"));
var import_react7 = __toESM(require("react"));
var import_react_i18next = require("react-i18next");
var import_react8 = require("react");
var import_react_hooks2 = require("@dxos/react-hooks");
var import_tracking3 = require("@preact-signals/safe-react/tracking");
var import_dx_avatar = require("@dxos/lit-ui/dx-avatar.pcss");
var import_react_context = require("@radix-ui/react-context");
var import_react_primitive2 = require("@radix-ui/react-primitive");
var import_react_slot2 = require("@radix-ui/react-slot");
var import_react9 = __toESM(require("react"));
var import_react10 = require("@dxos/lit-ui/react");
var import_react_hooks3 = require("@dxos/react-hooks");
var import_react_ui_theme = require("@dxos/react-ui-theme");
var import_tracking4 = require("@preact-signals/safe-react/tracking");
var import_react11 = require("@phosphor-icons/react");
var import_react_primitive3 = require("@radix-ui/react-primitive");
var import_react_slot3 = require("@radix-ui/react-slot");
var import_react12 = __toESM(require("react"));
var import_tracking5 = require("@preact-signals/safe-react/tracking");
var import_react_primitive4 = require("@radix-ui/react-primitive");
var import_react_slot4 = require("@radix-ui/react-slot");
var import_react13 = __toESM(require("react"));
var import_tracking6 = require("@preact-signals/safe-react/tracking");
var import_react_context2 = require("@radix-ui/react-context");
var import_react_primitive5 = require("@radix-ui/react-primitive");
var import_react_slot5 = require("@radix-ui/react-slot");
var import_react14 = __toESM(require("react"));
var import_tracking7 = require("@preact-signals/safe-react/tracking");
var import_react15 = __toESM(require("react"));
var import_tracking8 = require("@preact-signals/safe-react/tracking");
var import_react16 = __toESM(require("react"));
var import_tracking9 = require("@preact-signals/safe-react/tracking");
var import_primitive = require("@radix-ui/primitive");
var import_react_compose_refs = require("@radix-ui/react-compose-refs");
var import_react_context3 = require("@radix-ui/react-context");
var import_react_dismissable_layer = require("@radix-ui/react-dismissable-layer");
var import_react_id = require("@radix-ui/react-id");
var PopperPrimitive = __toESM(require("@radix-ui/react-popper"));
var import_react_popper = require("@radix-ui/react-popper");
var import_react_portal = require("@radix-ui/react-portal");
var import_react_presence = require("@radix-ui/react-presence");
var import_react_primitive6 = require("@radix-ui/react-primitive");
var import_react_slot6 = require("@radix-ui/react-slot");
var import_react_use_controllable_state = require("@radix-ui/react-use-controllable-state");
var VisuallyHiddenPrimitive = __toESM(require("@radix-ui/react-visually-hidden"));
var import_react17 = __toESM(require("react"));
var import_tracking10 = require("@preact-signals/safe-react/tracking");
var import_react_toggle = require("@radix-ui/react-toggle");
var import_react18 = __toESM(require("react"));
var import_tracking11 = require("@preact-signals/safe-react/tracking");
var import_react_toggle_group = require("@radix-ui/react-toggle-group");
var import_react19 = __toESM(require("react"));
var import_tracking12 = require("@preact-signals/safe-react/tracking");
var import_react20 = __toESM(require("react"));
var import_tracking13 = require("@preact-signals/safe-react/tracking");
var import_react21 = __toESM(require("react"));
var import_react_ui_theme2 = require("@dxos/react-ui-theme");
var import_tracking14 = require("@preact-signals/safe-react/tracking");
var import_keyborg = require("keyborg");
var import_react22 = __toESM(require("react"));
var import_tracking15 = require("@preact-signals/safe-react/tracking");
var import_react23 = __toESM(require("react"));
var import_tracking16 = require("@preact-signals/safe-react/tracking");
var import_react24 = __toESM(require("react"));
var import_tracking17 = require("@preact-signals/safe-react/tracking");
var import_react_context4 = require("@radix-ui/react-context");
var import_react_dialog = require("@radix-ui/react-dialog");
var import_react25 = __toESM(require("react"));
var import_tracking18 = require("@preact-signals/safe-react/tracking");
var import_react_alert_dialog = require("@radix-ui/react-alert-dialog");
var import_react_context5 = require("@radix-ui/react-context");
var import_react26 = __toESM(require("react"));
var import_tracking19 = require("@preact-signals/safe-react/tracking");
var import_react_checkbox = require("@radix-ui/react-checkbox");
var import_react_use_controllable_state2 = require("@radix-ui/react-use-controllable-state");
var import_react27 = __toESM(require("react"));
var import_react_input = require("@dxos/react-input");
var import_react_ui_theme3 = require("@dxos/react-ui-theme");
var import_tracking20 = require("@preact-signals/safe-react/tracking");
var import_react28 = require("@phosphor-icons/react");
var import_react_slot7 = require("@radix-ui/react-slot");
var import_react29 = __toESM(require("react"));
var import_react_list = require("@dxos/react-list");
var import_tracking21 = require("@preact-signals/safe-react/tracking");
var import_react30 = __toESM(require("react"));
var import_tracking22 = require("@preact-signals/safe-react/tracking");
var import_react31 = __toESM(require("react"));
var import_tracking23 = require("@preact-signals/safe-react/tracking");
var import_react32 = __toESM(require("react"));
var import_tracking24 = require("@preact-signals/safe-react/tracking");
var import_react_tabster = require("@fluentui/react-tabster");
var import_react_context6 = require("@radix-ui/react-context");
var import_react_primitive7 = require("@radix-ui/react-primitive");
var import_react_slot8 = require("@radix-ui/react-slot");
var import_react_use_controllable_state3 = require("@radix-ui/react-use-controllable-state");
var import_react33 = __toESM(require("react"));
var import_tracking25 = require("@preact-signals/safe-react/tracking");
var import_react_context7 = require("@radix-ui/react-context");
var import_react_dialog2 = require("@radix-ui/react-dialog");
var import_react_primitive8 = require("@radix-ui/react-primitive");
var import_react_slot9 = require("@radix-ui/react-slot");
var import_react_use_controllable_state4 = require("@radix-ui/react-use-controllable-state");
var import_react34 = __toESM(require("react"));
var import_log = require("@dxos/log");
var import_react_hooks4 = require("@dxos/react-hooks");
var import_react35 = require("react");
var import_tracking26 = require("@preact-signals/safe-react/tracking");
var ContextMenuPrimitive = __toESM(require("@radix-ui/react-context-menu"));
var import_react_primitive9 = require("@radix-ui/react-primitive");
var import_react_slot10 = require("@radix-ui/react-slot");
var import_react36 = __toESM(require("react"));
var import_react37 = require("react");
var import_tracking27 = require("@preact-signals/safe-react/tracking");
var import_primitive2 = require("@radix-ui/primitive");
var import_react_compose_refs2 = require("@radix-ui/react-compose-refs");
var import_react_context8 = require("@radix-ui/react-context");
var import_react_id2 = require("@radix-ui/react-id");
var MenuPrimitive = __toESM(require("@radix-ui/react-menu"));
var import_react_menu = require("@radix-ui/react-menu");
var import_react_primitive10 = require("@radix-ui/react-primitive");
var import_react_slot11 = require("@radix-ui/react-slot");
var import_react_use_controllable_state5 = require("@radix-ui/react-use-controllable-state");
var import_react38 = __toESM(require("react"));
var import_tracking28 = require("@preact-signals/safe-react/tracking");
var import_react_context9 = require("@radix-ui/react-context");
var import_react_primitive11 = require("@radix-ui/react-primitive");
var import_react_slot12 = require("@radix-ui/react-slot");
var import_react39 = __toESM(require("react"));
var import_react_hooks5 = require("@dxos/react-hooks");
var import_tracking29 = require("@preact-signals/safe-react/tracking");
var import_primitive3 = require("@radix-ui/primitive");
var import_react_compose_refs3 = require("@radix-ui/react-compose-refs");
var import_react_context10 = require("@radix-ui/react-context");
var import_react_dismissable_layer2 = require("@radix-ui/react-dismissable-layer");
var import_react_focus_guards = require("@radix-ui/react-focus-guards");
var import_react_focus_scope = require("@radix-ui/react-focus-scope");
var import_react_id3 = require("@radix-ui/react-id");
var PopperPrimitive2 = __toESM(require("@radix-ui/react-popper"));
var import_react_popper2 = require("@radix-ui/react-popper");
var import_react_portal2 = require("@radix-ui/react-portal");
var import_react_presence2 = require("@radix-ui/react-presence");
var import_react_primitive12 = require("@radix-ui/react-primitive");
var import_react_slot13 = require("@radix-ui/react-slot");
var import_react_use_controllable_state6 = require("@radix-ui/react-use-controllable-state");
var import_aria_hidden = require("aria-hidden");
var import_react40 = __toESM(require("react"));
var import_react_remove_scroll = require("react-remove-scroll");
var import_tracking30 = require("@preact-signals/safe-react/tracking");
var import_react41 = __toESM(require("react"));
var import_tracking31 = require("@preact-signals/safe-react/tracking");
var import_react_scroll_area = require("@radix-ui/react-scroll-area");
var import_react42 = __toESM(require("react"));
var import_tracking32 = require("@preact-signals/safe-react/tracking");
var import_react43 = require("@phosphor-icons/react");
var SelectPrimitive = __toESM(require("@radix-ui/react-select"));
var import_react44 = __toESM(require("react"));
var import_tracking33 = require("@preact-signals/safe-react/tracking");
var import_react_separator = require("@radix-ui/react-separator");
var import_react45 = __toESM(require("react"));
var import_tracking34 = require("@preact-signals/safe-react/tracking");
var import_react_primitive13 = require("@radix-ui/react-primitive");
var import_react_slot14 = require("@radix-ui/react-slot");
var import_react46 = __toESM(require("react"));
var import_tracking35 = require("@preact-signals/safe-react/tracking");
var import_react_primitive14 = require("@radix-ui/react-primitive");
var import_react_slot15 = require("@radix-ui/react-slot");
var import_react_toast = require("@radix-ui/react-toast");
var import_react47 = __toESM(require("react"));
var import_tracking36 = require("@preact-signals/safe-react/tracking");
var ToolbarPrimitive = __toESM(require("@radix-ui/react-toolbar"));
var import_react48 = __toESM(require("react"));
var useElevationContext = (propsElevation) => {
  const { elevation } = (0, import_react3.useContext)(ElevationContext);
  return propsElevation ?? elevation;
};
var useThemeContext = () => (0, import_react4.useContext)(ThemeContext) ?? (0, import_debug.raise)(new Error("Missing ThemeContext"));
var ICONS_URL = "/icons.svg";
var useIconHref = (icon) => {
  const { noCache } = useThemeContext();
  const url = noCache ? `${ICONS_URL}?nocache=${(/* @__PURE__ */ new Date()).getMinutes()}` : ICONS_URL;
  return icon ? `${url}#${icon}` : void 0;
};
var initialSafeArea = {
  top: NaN,
  right: NaN,
  bottom: NaN,
  left: NaN
};
var useSafeArea = () => {
  const [padding, setPadding] = (0, import_react5.useState)(initialSafeArea);
  const handleResize = (0, import_react5.useCallback)(() => {
    setPadding({
      top: parseFloat(getComputedStyle(document.documentElement).getPropertyValue("--safe-area-top")),
      right: parseFloat(getComputedStyle(document.documentElement).getPropertyValue("--safe-area-right")),
      bottom: parseFloat(getComputedStyle(document.documentElement).getPropertyValue("--safe-area-bottom")),
      left: parseFloat(getComputedStyle(document.documentElement).getPropertyValue("--safe-area-left"))
    });
  }, []);
  (0, import_react_hooks.useResize)(handleResize);
  return padding;
};
var initialLng = "en-US";
var initialNs = "dxos-common";
var initialDtLocale = import_locale.enUS;
var isLabel = (o) => typeof o === "string" || Array.isArray(o) && o.length === 2 && typeof o[0] === "string" && !!o[1] && typeof o[1] === "object" && "ns" in o[1] && typeof o[1].ns === "string";
var toLocalizedString = (label, t) => Array.isArray(label) ? t(...label) : label;
var resources = {
  [initialLng]: {
    [initialNs]: {
      "loading translations": "Loading translations\u2026"
    }
  }
};
void import_i18next.default.use(import_react_i18next.initReactI18next).init({
  resources,
  lng: initialLng,
  defaultNS: initialNs,
  interpolation: {
    escapeValue: false
  }
});
var TranslationsContext = /* @__PURE__ */ (0, import_react7.createContext)({
  appNs: initialNs,
  dtLocale: initialDtLocale
});
var useTranslation = (...args) => {
  const result = (0, import_react_i18next.useTranslation)(...args);
  const { dtLocale } = (0, import_react7.useContext)(TranslationsContext);
  return {
    ...result,
    dtLocale
  };
};
var TranslationsProvider = ({ fallback, resourceExtensions, children, appNs, dtLocale }) => {
  var _effect = (0, import_tracking2.useSignals)();
  try {
    const [loaded, setLoaded] = (0, import_react7.useState)(false);
    (0, import_react7.useEffect)(() => {
      setLoaded(false);
      if (resourceExtensions && resourceExtensions.length) {
        resourceExtensions.forEach((resource) => {
          Object.keys(resource).forEach((language) => {
            Object.keys(resource[language]).forEach((ns) => {
              import_i18next.default.addResourceBundle(language, ns, resource[language][ns]);
            });
          });
        });
      }
      setLoaded(true);
    }, [
      resourceExtensions
    ]);
    return /* @__PURE__ */ import_react7.default.createElement(TranslationsContext.Provider, {
      value: {
        appNs: appNs ?? initialNs,
        dtLocale: dtLocale ?? initialDtLocale
      }
    }, /* @__PURE__ */ import_react7.default.createElement(import_react7.Suspense, {
      fallback
    }, loaded ? children : fallback));
  } finally {
    _effect.f();
  }
};
var useTranslationsContext = () => (0, import_react6.useContext)(TranslationsContext);
var useVisualViewport = (deps) => {
  const [width, setWidth] = (0, import_react8.useState)(null);
  const [height, setHeight] = (0, import_react8.useState)(null);
  const handleResize = (0, import_react8.useCallback)(() => {
    if (window.visualViewport) {
      setWidth(window.visualViewport.width);
      setHeight(window.visualViewport.height);
    }
  }, []);
  (0, import_react_hooks2.useResize)(handleResize);
  return {
    width,
    height
  };
};
var AnchoredOverflowRoot = /* @__PURE__ */ (0, import_react2.forwardRef)(({ asChild, classNames, children, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking.useSignals)();
  try {
    const { tx } = useThemeContext();
    const Root7 = asChild ? import_react_slot.Slot : import_react_primitive.Primitive.div;
    return /* @__PURE__ */ import_react2.default.createElement(Root7, {
      role: "none",
      ...props,
      className: tx("anchoredOverflow.root", "overflow-anchored", {}, classNames),
      ref: forwardedRef
    }, children);
  } finally {
    _effect.f();
  }
});
var AnchoredOverflowAnchor = /* @__PURE__ */ (0, import_react2.forwardRef)(({ asChild, classNames, children, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking.useSignals)();
  try {
    const { tx } = useThemeContext();
    const Root7 = asChild ? import_react_slot.Slot : import_react_primitive.Primitive.div;
    return /* @__PURE__ */ import_react2.default.createElement(Root7, {
      role: "none",
      ...props,
      className: tx("anchoredOverflow.anchor", "overflow-anchor", {}, classNames),
      ref: forwardedRef
    }, children);
  } finally {
    _effect.f();
  }
});
var AnchoredOverflow = {
  Root: AnchoredOverflowRoot,
  Anchor: AnchoredOverflowAnchor
};
var AVATAR_NAME = "Avatar";
var [AvatarProvider, useAvatarContext] = (0, import_react_context.createContext)(AVATAR_NAME);
var AvatarRoot = ({ children, labelId: propsLabelId, descriptionId: propsDescriptionId }) => {
  var _effect = (0, import_tracking3.useSignals)();
  try {
    const labelId = (0, import_react_hooks3.useId)("avatar__label", propsLabelId);
    const descriptionId = (0, import_react_hooks3.useId)("avatar__description", propsDescriptionId);
    return /* @__PURE__ */ import_react9.default.createElement(AvatarProvider, {
      labelId,
      descriptionId
    }, children);
  } finally {
    _effect.f();
  }
};
var AvatarContent = /* @__PURE__ */ (0, import_react9.forwardRef)(({ icon, classNames, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking3.useSignals)();
  try {
    const href = useIconHref(icon);
    const { labelId, descriptionId } = useAvatarContext("AvatarContent");
    return /* @__PURE__ */ import_react9.default.createElement(import_react10.DxAvatar, {
      ...props,
      icon: href,
      "aria-labelledby": labelId,
      "aria-describedby": descriptionId,
      rootClassName: (0, import_react_ui_theme.mx)(classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var AvatarLabel = /* @__PURE__ */ (0, import_react9.forwardRef)(({ asChild, srOnly, classNames, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking3.useSignals)();
  try {
    const Root7 = asChild ? import_react_slot2.Slot : import_react_primitive2.Primitive.span;
    const { tx } = useThemeContext();
    const { labelId } = useAvatarContext("AvatarLabel");
    return /* @__PURE__ */ import_react9.default.createElement(Root7, {
      ...props,
      id: labelId,
      ref: forwardedRef,
      className: tx("avatar.label", "avatar__label", {
        srOnly
      }, classNames)
    });
  } finally {
    _effect.f();
  }
});
var AvatarDescription = /* @__PURE__ */ (0, import_react9.forwardRef)(({ asChild, srOnly, classNames, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking3.useSignals)();
  try {
    const Root7 = asChild ? import_react_slot2.Slot : import_react_primitive2.Primitive.span;
    const { tx } = useThemeContext();
    const { descriptionId } = useAvatarContext("AvatarDescription");
    return /* @__PURE__ */ import_react9.default.createElement(Root7, {
      ...props,
      id: descriptionId,
      ref: forwardedRef,
      className: tx("avatar.description", "avatar__description", {
        srOnly
      }, classNames)
    });
  } finally {
    _effect.f();
  }
});
var Avatar = {
  Root: AvatarRoot,
  Content: AvatarContent,
  Label: AvatarLabel,
  Description: AvatarDescription
};
var Link = /* @__PURE__ */ (0, import_react13.forwardRef)(({ asChild, variant, classNames, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking5.useSignals)();
  try {
    const { tx } = useThemeContext();
    const Root7 = asChild ? import_react_slot4.Slot : import_react_primitive4.Primitive.a;
    return /* @__PURE__ */ import_react13.default.createElement(Root7, {
      ...props,
      className: tx("link.root", "link", {
        variant
      }, classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var BreadcrumbRoot = /* @__PURE__ */ (0, import_react12.forwardRef)(({ asChild, classNames, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking4.useSignals)();
  try {
    const { tx } = useThemeContext();
    const Root7 = asChild ? import_react_slot3.Slot : import_react_primitive3.Primitive.div;
    return /* @__PURE__ */ import_react12.default.createElement(Root7, {
      role: "navigation",
      ...props,
      className: tx("breadcrumb.root", "breadcrumb", {}, classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var BreadcrumbList = /* @__PURE__ */ (0, import_react12.forwardRef)(({ asChild, classNames, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking4.useSignals)();
  try {
    const { tx } = useThemeContext();
    const Root7 = asChild ? import_react_slot3.Slot : import_react_primitive3.Primitive.ol;
    return /* @__PURE__ */ import_react12.default.createElement(Root7, {
      role: "list",
      ...props,
      className: tx("breadcrumb.list", "breadcrumb__list", {}, classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var BreadcrumbListItem = /* @__PURE__ */ (0, import_react12.forwardRef)(({ asChild, classNames, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking4.useSignals)();
  try {
    const { tx } = useThemeContext();
    const Root7 = asChild ? import_react_slot3.Slot : import_react_primitive3.Primitive.li;
    return /* @__PURE__ */ import_react12.default.createElement(Root7, {
      role: "listitem",
      ...props,
      className: tx("breadcrumb.listItem", "breadcrumb__list__item", {}, classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var BreadcrumbLink = /* @__PURE__ */ (0, import_react12.forwardRef)(({ asChild, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking4.useSignals)();
  try {
    const Root7 = asChild ? import_react_slot3.Slot : Link;
    return /* @__PURE__ */ import_react12.default.createElement(Root7, {
      ...props,
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var BreadcrumbCurrent = /* @__PURE__ */ (0, import_react12.forwardRef)(({ asChild, classNames, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking4.useSignals)();
  try {
    const { tx } = useThemeContext();
    const Root7 = asChild ? import_react_slot3.Slot : "h1";
    return /* @__PURE__ */ import_react12.default.createElement(Root7, {
      ...props,
      "aria-current": "page",
      className: tx("breadcrumb.current", "breadcrumb__item__heading--current", {}, classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var BreadcrumbSeparator = ({ children, classNames, ...props }) => {
  var _effect = (0, import_tracking4.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react12.default.createElement(import_react_primitive3.Primitive.span, {
      role: "separator",
      "aria-hidden": "true",
      ...props,
      className: tx("breadcrumb.separator", "breadcrumb__separator", {}, classNames)
    }, children ?? /* @__PURE__ */ import_react12.default.createElement(import_react11.Dot, {
      weight: "bold"
    }));
  } finally {
    _effect.f();
  }
};
var Breadcrumb = {
  Root: BreadcrumbRoot,
  List: BreadcrumbList,
  ListItem: BreadcrumbListItem,
  Link: BreadcrumbLink,
  Current: BreadcrumbCurrent,
  Separator: BreadcrumbSeparator
};
var BUTTON_GROUP_NAME = "ButtonGroup";
var BUTTON_NAME = "Button";
var [ButtonGroupProvider, useButtonGroupContext] = (0, import_react_context2.createContext)(BUTTON_GROUP_NAME, {
  inGroup: false
});
var Button = /* @__PURE__ */ (0, import_react14.memo)(/* @__PURE__ */ (0, import_react14.forwardRef)(({ classNames, children, density: propsDensity, elevation: propsElevation, variant = "default", asChild, ...props }, ref) => {
  var _effect = (0, import_tracking6.useSignals)();
  try {
    const { inGroup } = useButtonGroupContext(BUTTON_NAME);
    const { tx } = useThemeContext();
    const elevation = useElevationContext(propsElevation);
    const density = useDensityContext(propsDensity);
    const Root7 = asChild ? import_react_slot5.Slot : import_react_primitive5.Primitive.button;
    return /* @__PURE__ */ import_react14.default.createElement(Root7, {
      ref,
      ...props,
      "data-variant": variant,
      "data-density": density,
      "data-props": inGroup ? "grouped" : "",
      className: tx("button.root", "button", {
        variant,
        inGroup,
        disabled: props.disabled,
        density,
        elevation
      }, classNames),
      ...props.disabled && {
        disabled: true
      }
    }, children);
  } finally {
    _effect.f();
  }
}));
Button.displayName = BUTTON_NAME;
var ButtonGroup = /* @__PURE__ */ (0, import_react14.forwardRef)(({ children, elevation: propsElevation, classNames, asChild, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking6.useSignals)();
  try {
    const { tx } = useThemeContext();
    const elevation = useElevationContext(propsElevation);
    const Root7 = asChild ? import_react_slot5.Slot : import_react_primitive5.Primitive.div;
    return /* @__PURE__ */ import_react14.default.createElement(Root7, {
      role: "none",
      ...props,
      className: tx("button.group", "button-group", {
        elevation
      }, classNames),
      ref: forwardedRef
    }, /* @__PURE__ */ import_react14.default.createElement(ButtonGroupProvider, {
      inGroup: true
    }, children));
  } finally {
    _effect.f();
  }
});
ButtonGroup.displayName = BUTTON_GROUP_NAME;
var Icon = /* @__PURE__ */ (0, import_react16.memo)(/* @__PURE__ */ (0, import_react16.forwardRef)(({ icon, classNames, size, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking8.useSignals)();
  try {
    const { tx } = useThemeContext();
    const href = useIconHref(icon);
    return /* @__PURE__ */ import_react16.default.createElement("svg", {
      ...props,
      className: tx("icon.root", "icon", {
        size
      }, classNames),
      ref: forwardedRef
    }, /* @__PURE__ */ import_react16.default.createElement("use", {
      href
    }));
  } finally {
    _effect.f();
  }
}));
var [createTooltipContext, createTooltipScope] = (0, import_react_context3.createContextScope)("Tooltip", [
  import_react_popper.createPopperScope
]);
var usePopperScope = (0, import_react_popper.createPopperScope)();
var DEFAULT_DELAY_DURATION = 700;
var TOOLTIP_OPEN = "tooltip.open";
var TOOLTIP_NAME = "Tooltip";
var [TooltipContextProvider, useTooltipContext] = createTooltipContext(TOOLTIP_NAME);
var TooltipProvider = (props) => {
  var _effect = (0, import_tracking9.useSignals)();
  try {
    const { __scopeTooltip, children, open: openProp, defaultOpen = false, onOpenChange, disableHoverableContent = false, delayDuration = DEFAULT_DELAY_DURATION, skipDelayDuration = 300 } = props;
    const isOpenDelayedRef = (0, import_react17.useRef)(true);
    const isPointerInTransitRef = (0, import_react17.useRef)(false);
    const skipDelayTimerRef = (0, import_react17.useRef)(0);
    (0, import_react17.useEffect)(() => {
      const skipDelayTimer = skipDelayTimerRef.current;
      return () => window.clearTimeout(skipDelayTimer);
    }, []);
    const popperScope = usePopperScope(__scopeTooltip);
    const [trigger, setTrigger] = (0, import_react17.useState)(null);
    const [content, setContent] = (0, import_react17.useState)("");
    const [side, setSide] = (0, import_react17.useState)(void 0);
    const triggerRef = (0, import_react17.useRef)(trigger);
    const handleTriggerChange = (0, import_react17.useCallback)((nextTrigger) => {
      setTrigger(nextTrigger);
      triggerRef.current = nextTrigger;
      setContent(nextTrigger?.getAttribute("data-tooltip-content") ?? "");
      setSide(nextTrigger?.getAttribute("data-tooltip-side") ?? void 0);
    }, []);
    const contentId = (0, import_react_id.useId)();
    const openTimerRef = (0, import_react17.useRef)(0);
    const wasOpenDelayedRef = (0, import_react17.useRef)(false);
    const handleOpenChange = (0, import_react17.useCallback)((open2) => {
      if (open2) {
        window.clearTimeout(skipDelayTimerRef.current);
        isOpenDelayedRef.current = false;
        document.dispatchEvent(new CustomEvent(TOOLTIP_OPEN));
      } else {
        window.clearTimeout(skipDelayTimerRef.current);
        skipDelayTimerRef.current = window.setTimeout(() => isOpenDelayedRef.current = true, skipDelayDuration);
      }
      onOpenChange?.(open2);
    }, [
      skipDelayDuration,
      onOpenChange
    ]);
    const [open = false, setOpen] = (0, import_react_use_controllable_state.useControllableState)({
      prop: openProp,
      defaultProp: defaultOpen,
      onChange: handleOpenChange
    });
    const stateAttribute = (0, import_react17.useMemo)(() => {
      return open ? wasOpenDelayedRef.current ? "delayed-open" : "instant-open" : "closed";
    }, [
      open
    ]);
    const handleOpen = (0, import_react17.useCallback)(() => {
      window.clearTimeout(openTimerRef.current);
      openTimerRef.current = 0;
      wasOpenDelayedRef.current = false;
      setOpen(true);
    }, [
      setOpen
    ]);
    const handleClose = (0, import_react17.useCallback)(() => {
      window.clearTimeout(openTimerRef.current);
      openTimerRef.current = 0;
      setOpen(false);
    }, [
      setOpen
    ]);
    const handleDelayedOpen = (0, import_react17.useCallback)(() => {
      window.clearTimeout(openTimerRef.current);
      openTimerRef.current = window.setTimeout(() => {
        wasOpenDelayedRef.current = true;
        setOpen(true);
        openTimerRef.current = 0;
      }, delayDuration);
    }, [
      delayDuration,
      setOpen
    ]);
    (0, import_react17.useEffect)(() => {
      return () => {
        if (openTimerRef.current) {
          window.clearTimeout(openTimerRef.current);
          openTimerRef.current = 0;
        }
      };
    }, []);
    const { tx } = useThemeContext();
    const elevation = useElevationContext();
    return /* @__PURE__ */ import_react17.default.createElement(PopperPrimitive.Root, popperScope, /* @__PURE__ */ import_react17.default.createElement(TooltipContextProvider, {
      scope: __scopeTooltip,
      contentId,
      open,
      stateAttribute,
      trigger,
      onTriggerChange: handleTriggerChange,
      onTriggerEnter: (0, import_react17.useCallback)(() => {
        if (isOpenDelayedRef.current) {
          handleDelayedOpen();
        } else {
          handleOpen();
        }
      }, [
        isOpenDelayedRef,
        handleDelayedOpen,
        handleOpen
      ]),
      onTriggerLeave: (0, import_react17.useCallback)(() => {
        if (disableHoverableContent) {
          handleClose();
        } else {
          window.clearTimeout(openTimerRef.current);
          openTimerRef.current = 0;
        }
      }, [
        handleClose,
        disableHoverableContent
      ]),
      onOpen: handleOpen,
      onClose: handleClose,
      disableHoverableContent,
      isPointerInTransitRef,
      onPointerInTransitChange: (0, import_react17.useCallback)((inTransit) => {
        isPointerInTransitRef.current = inTransit;
      }, [])
    }, /* @__PURE__ */ import_react17.default.createElement(TooltipContent, {
      side,
      className: tx("tooltip.content", "tooltip", {
        elevation
      })
    }, content, /* @__PURE__ */ import_react17.default.createElement(TooltipArrow, {
      className: tx("tooltip.arrow", "tooltip__arrow")
    })), /* @__PURE__ */ import_react17.default.createElement(TooltipVirtualTrigger, {
      virtualRef: triggerRef
    }), children));
  } finally {
    _effect.f();
  }
};
TooltipProvider.displayName = TOOLTIP_NAME;
var TooltipVirtualTrigger = ({ virtualRef, __scopeTooltip }) => {
  var _effect = (0, import_tracking9.useSignals)();
  try {
    const popperScope = usePopperScope(__scopeTooltip);
    return /* @__PURE__ */ import_react17.default.createElement(PopperPrimitive.Anchor, {
      asChild: true,
      ...popperScope,
      virtualRef
    });
  } finally {
    _effect.f();
  }
};
var TRIGGER_NAME = "TooltipTrigger";
var TooltipTrigger = /* @__PURE__ */ (0, import_react17.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking9.useSignals)();
  try {
    const {
      __scopeTooltip,
      onInteract,
      // TODO(thure): Pass `delayDuration` into the context.
      delayDuration: _delayDuration,
      side,
      content,
      ...triggerProps
    } = props;
    const context = useTooltipContext(TRIGGER_NAME, __scopeTooltip);
    const ref = (0, import_react17.useRef)(null);
    const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, ref);
    const isPointerDownRef = (0, import_react17.useRef)(false);
    const hasPointerMoveOpenedRef = (0, import_react17.useRef)(false);
    const handlePointerUp = (0, import_react17.useCallback)(() => isPointerDownRef.current = false, []);
    (0, import_react17.useEffect)(() => {
      return () => document.removeEventListener("pointerup", handlePointerUp);
    }, [
      handlePointerUp
    ]);
    return /* @__PURE__ */ import_react17.default.createElement(import_react_primitive6.Primitive.button, {
      // We purposefully avoid adding `type=button` here because tooltip triggers are also
      // commonly anchors and the anchor `type` attribute signifies MIME type.
      "aria-describedby": context.open ? context.contentId : void 0,
      "data-state": context.stateAttribute,
      "data-tooltip-content": content,
      "data-tooltip-side": side,
      ...triggerProps,
      ref: composedRefs,
      onPointerMove: (0, import_primitive.composeEventHandlers)(props.onPointerMove, (event) => {
        if (event.pointerType === "touch") {
          return;
        }
        if (!hasPointerMoveOpenedRef.current && !context.isPointerInTransitRef.current) {
          onInteract?.(event);
          if (event.defaultPrevented) {
            return;
          }
          context.onTriggerChange(ref.current);
          context.onTriggerEnter();
          hasPointerMoveOpenedRef.current = true;
        }
      }),
      onPointerLeave: (0, import_primitive.composeEventHandlers)(props.onPointerLeave, () => {
        context.onTriggerLeave();
        hasPointerMoveOpenedRef.current = false;
      }),
      onPointerDown: (0, import_primitive.composeEventHandlers)(props.onPointerDown, () => {
        if (context.open) {
          context.onClose();
        }
        isPointerDownRef.current = true;
        document.addEventListener("pointerup", handlePointerUp, {
          once: true
        });
      }),
      onFocus: props.onFocus,
      onBlur: (0, import_primitive.composeEventHandlers)(props.onBlur, context.onClose),
      onClick: (0, import_primitive.composeEventHandlers)(props.onClick, context.onClose)
    });
  } finally {
    _effect.f();
  }
});
TooltipTrigger.displayName = TRIGGER_NAME;
var PORTAL_NAME = "TooltipPortal";
var [PortalProvider, usePortalContext] = createTooltipContext(PORTAL_NAME, {
  forceMount: void 0
});
var TooltipPortal = (props) => {
  var _effect = (0, import_tracking9.useSignals)();
  try {
    const { __scopeTooltip, forceMount, children, container } = props;
    const context = useTooltipContext(PORTAL_NAME, __scopeTooltip);
    return /* @__PURE__ */ import_react17.default.createElement(PortalProvider, {
      scope: __scopeTooltip,
      forceMount
    }, /* @__PURE__ */ import_react17.default.createElement(import_react_presence.Presence, {
      present: forceMount || context.open
    }, /* @__PURE__ */ import_react17.default.createElement(import_react_portal.Portal, {
      asChild: true,
      container
    }, children)));
  } finally {
    _effect.f();
  }
};
TooltipPortal.displayName = PORTAL_NAME;
var CONTENT_NAME = "TooltipContent";
var TooltipContent = /* @__PURE__ */ (0, import_react17.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking9.useSignals)();
  try {
    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeTooltip);
    const { forceMount = portalContext.forceMount, side = "top", ...contentProps } = props;
    const context = useTooltipContext(CONTENT_NAME, props.__scopeTooltip);
    return /* @__PURE__ */ import_react17.default.createElement(import_react_presence.Presence, {
      present: forceMount || context.open
    }, context.disableHoverableContent ? /* @__PURE__ */ import_react17.default.createElement(TooltipContentImpl, {
      side,
      ...contentProps,
      ref: forwardedRef
    }) : /* @__PURE__ */ import_react17.default.createElement(TooltipContentHoverable, {
      side,
      ...contentProps,
      ref: forwardedRef
    }));
  } finally {
    _effect.f();
  }
});
var TooltipContentHoverable = /* @__PURE__ */ (0, import_react17.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking9.useSignals)();
  try {
    const context = useTooltipContext(CONTENT_NAME, props.__scopeTooltip);
    const ref = (0, import_react17.useRef)(null);
    const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, ref);
    const [pointerGraceArea, setPointerGraceArea] = (0, import_react17.useState)(null);
    const { trigger, onClose } = context;
    const content = ref.current;
    const { onPointerInTransitChange } = context;
    const handleRemoveGraceArea = (0, import_react17.useCallback)(() => {
      setPointerGraceArea(null);
      onPointerInTransitChange(false);
    }, [
      onPointerInTransitChange
    ]);
    const handleCreateGraceArea = (0, import_react17.useCallback)((event, hoverTarget) => {
      const currentTarget = event.currentTarget;
      const exitPoint = {
        x: event.clientX,
        y: event.clientY
      };
      const exitSide = getExitSideFromRect(exitPoint, currentTarget.getBoundingClientRect());
      const paddedExitPoints = getPaddedExitPoints(exitPoint, exitSide);
      const hoverTargetPoints = getPointsFromRect(hoverTarget.getBoundingClientRect());
      const graceArea = getHull([
        ...paddedExitPoints,
        ...hoverTargetPoints
      ]);
      setPointerGraceArea(graceArea);
      onPointerInTransitChange(true);
    }, [
      onPointerInTransitChange
    ]);
    (0, import_react17.useEffect)(() => {
      return () => handleRemoveGraceArea();
    }, [
      handleRemoveGraceArea
    ]);
    (0, import_react17.useEffect)(() => {
      if (trigger && content) {
        const handleTriggerLeave = (event) => handleCreateGraceArea(event, content);
        const handleContentLeave = (event) => handleCreateGraceArea(event, trigger);
        trigger.addEventListener("pointerleave", handleTriggerLeave);
        content.addEventListener("pointerleave", handleContentLeave);
        return () => {
          trigger.removeEventListener("pointerleave", handleTriggerLeave);
          content.removeEventListener("pointerleave", handleContentLeave);
        };
      }
    }, [
      trigger,
      content,
      handleCreateGraceArea,
      handleRemoveGraceArea
    ]);
    (0, import_react17.useEffect)(() => {
      if (pointerGraceArea) {
        const handleTrackPointerGrace = (event) => {
          const target = event.target;
          const pointerPosition = {
            x: event.clientX,
            y: event.clientY
          };
          const hasEnteredTarget = trigger?.contains(target) || content?.contains(target);
          const isPointerOutsideGraceArea = !isPointInPolygon(pointerPosition, pointerGraceArea);
          if (hasEnteredTarget) {
            handleRemoveGraceArea();
          } else if (isPointerOutsideGraceArea) {
            handleRemoveGraceArea();
            onClose();
          }
        };
        document.addEventListener("pointermove", handleTrackPointerGrace);
        return () => document.removeEventListener("pointermove", handleTrackPointerGrace);
      }
    }, [
      trigger,
      content,
      pointerGraceArea,
      onClose,
      handleRemoveGraceArea
    ]);
    return /* @__PURE__ */ import_react17.default.createElement(TooltipContentImpl, {
      ...props,
      ref: composedRefs
    });
  } finally {
    _effect.f();
  }
});
var [VisuallyHiddenContentContextProvider, useVisuallyHiddenContentContext] = createTooltipContext(TOOLTIP_NAME, {
  isInside: false
});
var TooltipContentImpl = /* @__PURE__ */ (0, import_react17.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking9.useSignals)();
  try {
    const { __scopeTooltip, children, "aria-label": ariaLabel, onEscapeKeyDown, onPointerDownOutside, ...contentProps } = props;
    const context = useTooltipContext(CONTENT_NAME, __scopeTooltip);
    const popperScope = usePopperScope(__scopeTooltip);
    const { onClose } = context;
    (0, import_react17.useEffect)(() => {
      document.addEventListener(TOOLTIP_OPEN, onClose);
      return () => document.removeEventListener(TOOLTIP_OPEN, onClose);
    }, [
      onClose
    ]);
    (0, import_react17.useEffect)(() => {
      if (context.trigger) {
        const handleScroll = (event) => {
          const target = event.target;
          if (target?.contains(context.trigger)) {
            onClose();
          }
        };
        window.addEventListener("scroll", handleScroll, {
          capture: true
        });
        return () => window.removeEventListener("scroll", handleScroll, {
          capture: true
        });
      }
    }, [
      context.trigger,
      onClose
    ]);
    return /* @__PURE__ */ import_react17.default.createElement(import_react_dismissable_layer.DismissableLayer, {
      asChild: true,
      disableOutsidePointerEvents: false,
      onEscapeKeyDown,
      onPointerDownOutside,
      onFocusOutside: (event) => event.preventDefault(),
      onDismiss: onClose
    }, /* @__PURE__ */ import_react17.default.createElement(PopperPrimitive.Content, {
      "data-state": context.stateAttribute,
      ...popperScope,
      ...contentProps,
      ref: forwardedRef,
      style: {
        ...contentProps.style,
        // re-namespace exposed content custom properties
        ...{
          "--radix-tooltip-content-transform-origin": "var(--radix-popper-transform-origin)",
          "--radix-tooltip-content-available-width": "var(--radix-popper-available-width)",
          "--radix-tooltip-content-available-height": "var(--radix-popper-available-height)",
          "--radix-tooltip-trigger-width": "var(--radix-popper-anchor-width)",
          "--radix-tooltip-trigger-height": "var(--radix-popper-anchor-height)"
        }
      }
    }, /* @__PURE__ */ import_react17.default.createElement(import_react_slot6.Slottable, null, children), /* @__PURE__ */ import_react17.default.createElement(VisuallyHiddenContentContextProvider, {
      scope: __scopeTooltip,
      isInside: true
    }, /* @__PURE__ */ import_react17.default.createElement(VisuallyHiddenPrimitive.Root, {
      id: context.contentId,
      role: "tooltip"
    }, ariaLabel || children))));
  } finally {
    _effect.f();
  }
});
TooltipContent.displayName = CONTENT_NAME;
var ARROW_NAME = "TooltipArrow";
var TooltipArrow = /* @__PURE__ */ (0, import_react17.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking9.useSignals)();
  try {
    const { __scopeTooltip, ...arrowProps } = props;
    const popperScope = usePopperScope(__scopeTooltip);
    const visuallyHiddenContentContext = useVisuallyHiddenContentContext(ARROW_NAME, __scopeTooltip);
    return visuallyHiddenContentContext.isInside ? null : /* @__PURE__ */ import_react17.default.createElement(PopperPrimitive.Arrow, {
      ...popperScope,
      ...arrowProps,
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
TooltipArrow.displayName = ARROW_NAME;
var getExitSideFromRect = (point, rect) => {
  const top = Math.abs(rect.top - point.y);
  const bottom = Math.abs(rect.bottom - point.y);
  const right = Math.abs(rect.right - point.x);
  const left = Math.abs(rect.left - point.x);
  switch (Math.min(top, bottom, right, left)) {
    case left:
      return "left";
    case right:
      return "right";
    case top:
      return "top";
    case bottom:
      return "bottom";
    default:
      throw new Error("unreachable");
  }
};
var getPaddedExitPoints = (exitPoint, exitSide, padding = 5) => {
  const paddedExitPoints = [];
  switch (exitSide) {
    case "top":
      paddedExitPoints.push({
        x: exitPoint.x - padding,
        y: exitPoint.y + padding
      }, {
        x: exitPoint.x + padding,
        y: exitPoint.y + padding
      });
      break;
    case "bottom":
      paddedExitPoints.push({
        x: exitPoint.x - padding,
        y: exitPoint.y - padding
      }, {
        x: exitPoint.x + padding,
        y: exitPoint.y - padding
      });
      break;
    case "left":
      paddedExitPoints.push({
        x: exitPoint.x + padding,
        y: exitPoint.y - padding
      }, {
        x: exitPoint.x + padding,
        y: exitPoint.y + padding
      });
      break;
    case "right":
      paddedExitPoints.push({
        x: exitPoint.x - padding,
        y: exitPoint.y - padding
      }, {
        x: exitPoint.x - padding,
        y: exitPoint.y + padding
      });
      break;
  }
  return paddedExitPoints;
};
var getPointsFromRect = (rect) => {
  const { top, right, bottom, left } = rect;
  return [
    {
      x: left,
      y: top
    },
    {
      x: right,
      y: top
    },
    {
      x: right,
      y: bottom
    },
    {
      x: left,
      y: bottom
    }
  ];
};
var isPointInPolygon = (point, polygon) => {
  const { x, y } = point;
  let inside = false;
  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {
    const xi = polygon[i].x;
    const yi = polygon[i].y;
    const xj = polygon[j].x;
    const yj = polygon[j].y;
    const intersect = yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;
    if (intersect) {
      inside = !inside;
    }
  }
  return inside;
};
var getHull = (points) => {
  const newPoints = points.slice();
  newPoints.sort((a, b) => {
    if (a.x < b.x) {
      return -1;
    } else if (a.x > b.x) {
      return 1;
    } else if (a.y < b.y) {
      return -1;
    } else if (a.y > b.y) {
      return 1;
    } else {
      return 0;
    }
  });
  return getHullPresorted(newPoints);
};
var getHullPresorted = (points) => {
  if (points.length <= 1) {
    return points.slice();
  }
  const upperHull = [];
  for (let i = 0; i < points.length; i++) {
    const p = points[i];
    while (upperHull.length >= 2) {
      const q = upperHull[upperHull.length - 1];
      const r = upperHull[upperHull.length - 2];
      if ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x)) {
        upperHull.pop();
      } else {
        break;
      }
    }
    upperHull.push(p);
  }
  upperHull.pop();
  const lowerHull = [];
  for (let i = points.length - 1; i >= 0; i--) {
    const p = points[i];
    while (lowerHull.length >= 2) {
      const q = lowerHull[lowerHull.length - 1];
      const r = lowerHull[lowerHull.length - 2];
      if ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x)) {
        lowerHull.pop();
      } else {
        break;
      }
    }
    lowerHull.push(p);
  }
  lowerHull.pop();
  if (upperHull.length === 1 && lowerHull.length === 1 && upperHull[0].x === lowerHull[0].x && upperHull[0].y === lowerHull[0].y) {
    return upperHull;
  } else {
    return upperHull.concat(lowerHull);
  }
};
var Tooltip = {
  Provider: TooltipProvider,
  Trigger: TooltipTrigger
};
var IconOnlyButton = /* @__PURE__ */ (0, import_react15.forwardRef)(({ noTooltip, tooltipPortal = true, tooltipSide, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking7.useSignals)();
  try {
    if (noTooltip) {
      return /* @__PURE__ */ import_react15.default.createElement(LabelledIconButton, {
        ...props,
        ref: forwardedRef
      });
    }
    return /* @__PURE__ */ import_react15.default.createElement(Tooltip.Trigger, {
      asChild: true,
      content: props.label,
      side: tooltipSide
    }, /* @__PURE__ */ import_react15.default.createElement(LabelledIconButton, {
      ...props,
      ref: forwardedRef
    }));
  } finally {
    _effect.f();
  }
});
var LabelledIconButton = /* @__PURE__ */ (0, import_react15.forwardRef)(({ icon, size, iconOnly, label, classNames, iconClassNames, caretDown, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking7.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react15.default.createElement(Button, {
      ...props,
      classNames: tx("iconButton.root", "iconButton", {}, classNames),
      ref: forwardedRef
    }, /* @__PURE__ */ import_react15.default.createElement(Icon, {
      icon,
      size,
      classNames: iconClassNames
    }), /* @__PURE__ */ import_react15.default.createElement("span", {
      className: iconOnly ? "sr-only" : void 0
    }, label), caretDown && /* @__PURE__ */ import_react15.default.createElement(Icon, {
      size: 3,
      icon: "ph--caret-down--bold"
    }));
  } finally {
    _effect.f();
  }
});
var IconButton = /* @__PURE__ */ (0, import_react15.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking7.useSignals)();
  try {
    return props.iconOnly ? /* @__PURE__ */ import_react15.default.createElement(IconOnlyButton, {
      ...props,
      ref: forwardedRef
    }) : /* @__PURE__ */ import_react15.default.createElement(LabelledIconButton, {
      ...props,
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var Toggle = /* @__PURE__ */ (0, import_react18.forwardRef)(({ defaultPressed, pressed, onPressedChange, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking10.useSignals)();
  try {
    return /* @__PURE__ */ import_react18.default.createElement(import_react_toggle.Toggle, {
      defaultPressed,
      pressed,
      onPressedChange,
      asChild: true
    }, /* @__PURE__ */ import_react18.default.createElement(Button, {
      ...props,
      ref: forwardedRef
    }));
  } finally {
    _effect.f();
  }
});
var ToggleGroup = /* @__PURE__ */ (0, import_react19.forwardRef)(({ classNames, children, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking11.useSignals)();
  try {
    return /* @__PURE__ */ import_react19.default.createElement(import_react_toggle_group.ToggleGroup, {
      ...props,
      asChild: true
    }, /* @__PURE__ */ import_react19.default.createElement(ButtonGroup, {
      classNames,
      children,
      ref: forwardedRef
    }));
  } finally {
    _effect.f();
  }
});
var ToggleGroupItem = /* @__PURE__ */ (0, import_react19.forwardRef)(({ variant, elevation, density, classNames, children, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking11.useSignals)();
  try {
    return /* @__PURE__ */ import_react19.default.createElement(import_react_toggle_group.ToggleGroupItem, {
      ...props,
      asChild: true
    }, /* @__PURE__ */ import_react19.default.createElement(Button, {
      variant,
      elevation,
      density,
      classNames,
      children,
      ref: forwardedRef
    }));
  } finally {
    _effect.f();
  }
});
var ClipboardContext = /* @__PURE__ */ (0, import_react20.createContext)({
  textValue: "",
  setTextValue: async (_) => {
  }
});
var useClipboard = () => (0, import_react20.useContext)(ClipboardContext);
var ClipboardProvider = ({ children }) => {
  var _effect = (0, import_tracking12.useSignals)();
  try {
    const [textValue, setInternalTextValue] = (0, import_react20.useState)("");
    const setTextValue = (0, import_react20.useCallback)(async (nextValue) => {
      await navigator.clipboard.writeText(nextValue);
      return setInternalTextValue(nextValue);
    }, []);
    return /* @__PURE__ */ import_react20.default.createElement(ClipboardContext.Provider, {
      value: {
        textValue,
        setTextValue
      }
    }, children);
  } finally {
    _effect.f();
  }
};
var hasIosKeyboard = () => {
  return !!navigator.userAgent.match(/iP(ad|od|hone).+Safari/);
};
var DensityContext = /* @__PURE__ */ (0, import_react23.createContext)({
  density: "fine"
});
var DensityProvider = ({ density, children }) => {
  var _effect = (0, import_tracking15.useSignals)();
  try {
    return /* @__PURE__ */ import_react23.default.createElement(DensityContext.Provider, {
      value: {
        density
      }
    }, children);
  } finally {
    _effect.f();
  }
};
var ElevationContext = /* @__PURE__ */ (0, import_react24.createContext)({
  elevation: "base"
});
var ElevationProvider = ({ elevation, children }) => {
  var _effect = (0, import_tracking16.useSignals)();
  try {
    return /* @__PURE__ */ import_react24.default.createElement(ElevationContext.Provider, {
      value: {
        elevation
      }
    }, children);
  } finally {
    _effect.f();
  }
};
var ThemeContext = /* @__PURE__ */ (0, import_react22.createContext)(void 0);
var ThemeProvider = ({ children, fallback = null, resourceExtensions, appNs, tx = (_path, defaultClassName, _styleProps, ..._options) => defaultClassName, themeMode = "dark", rootDensity = "fine", ...rest }) => {
  var _effect = (0, import_tracking14.useSignals)();
  try {
    (0, import_react22.useEffect)(() => {
      if (document.defaultView) {
        const kb = (0, import_keyborg.createKeyborg)(document.defaultView);
        kb.subscribe(handleInputModalityChange);
        return () => kb.unsubscribe(handleInputModalityChange);
      }
    }, []);
    const safeAreaPadding = useSafeArea();
    const contextValue = (0, import_react22.useMemo)(() => ({
      tx,
      themeMode,
      hasIosKeyboard: hasIosKeyboard(),
      safeAreaPadding,
      ...rest
    }), [
      tx,
      themeMode,
      safeAreaPadding,
      rest
    ]);
    return /* @__PURE__ */ import_react22.default.createElement(ThemeContext.Provider, {
      value: contextValue
    }, /* @__PURE__ */ import_react22.default.createElement(TranslationsProvider, {
      fallback,
      resourceExtensions,
      appNs
    }, /* @__PURE__ */ import_react22.default.createElement(ElevationProvider, {
      elevation: "base"
    }, /* @__PURE__ */ import_react22.default.createElement(DensityProvider, {
      density: rootDensity
    }, children))));
  } finally {
    _effect.f();
  }
};
var handleInputModalityChange = (isUsingKeyboard) => {
  if (isUsingKeyboard) {
    document.body.setAttribute("data-is-keyboard", "true");
  } else {
    document.body.removeAttribute("data-is-keyboard");
  }
};
var inactiveLabelStyles = "invisible bs-px -mbe-px overflow-hidden";
var CopyButton = ({ value, classNames, iconProps, ...props }) => {
  var _effect = (0, import_tracking13.useSignals)();
  try {
    const { t } = useTranslation("os");
    const { textValue, setTextValue } = useClipboard();
    const isCopied = textValue === value;
    return /* @__PURE__ */ import_react21.default.createElement(Button, {
      ...props,
      classNames: [
        "inline-flex flex-col justify-center",
        classNames
      ],
      onClick: () => setTextValue(value),
      "data-testid": "copy-invitation"
    }, /* @__PURE__ */ import_react21.default.createElement("div", {
      role: "none",
      className: (0, import_react_ui_theme2.mx)("flex gap-1 items-center", isCopied && inactiveLabelStyles)
    }, /* @__PURE__ */ import_react21.default.createElement("span", {
      className: "pli-1"
    }, t("copy label")), /* @__PURE__ */ import_react21.default.createElement(Icon, {
      icon: "ph--copy--regular",
      size: 5,
      ...iconProps
    })), /* @__PURE__ */ import_react21.default.createElement("div", {
      role: "none",
      className: (0, import_react_ui_theme2.mx)("flex gap-1 items-center", !isCopied && inactiveLabelStyles)
    }, /* @__PURE__ */ import_react21.default.createElement("span", {
      className: "pli-1"
    }, t("copy success label")), /* @__PURE__ */ import_react21.default.createElement(Icon, {
      icon: "ph--check--regular",
      size: 5,
      ...iconProps
    })));
  } finally {
    _effect.f();
  }
};
var CopyButtonIconOnly = ({ __scopeTooltip, value, classNames, iconProps, variant, ...props }) => {
  var _effect = (0, import_tracking13.useSignals)();
  try {
    const { t } = useTranslation("os");
    const { textValue, setTextValue } = useClipboard();
    const isCopied = textValue === value;
    const label = isCopied ? t("copy success label") : props.label ?? t("copy label");
    const { onOpen } = useTooltipContext("CopyButton", __scopeTooltip);
    return /* @__PURE__ */ import_react21.default.createElement(IconButton, {
      iconOnly: true,
      label,
      icon: "ph--copy--regular",
      size: 5,
      variant,
      classNames: [
        "inline-flex flex-col justify-center",
        classNames
      ],
      onClick: () => setTextValue(value).then(onOpen),
      "data-testid": "copy-invitation"
    });
  } finally {
    _effect.f();
  }
};
var Clipboard = {
  Button: CopyButton,
  IconButton: CopyButtonIconOnly,
  Provider: ClipboardProvider
};
var DialogRoot = (props) => {
  var _effect = (0, import_tracking17.useSignals)();
  try {
    return /* @__PURE__ */ import_react25.default.createElement(ElevationProvider, {
      elevation: "dialog"
    }, /* @__PURE__ */ import_react25.default.createElement(import_react_dialog.Root, props));
  } finally {
    _effect.f();
  }
};
var DialogTrigger = import_react_dialog.DialogTrigger;
var DialogPortal = import_react_dialog.DialogPortal;
var DialogTitle = /* @__PURE__ */ (0, import_react25.forwardRef)(({ classNames, srOnly, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking17.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react25.default.createElement(import_react_dialog.DialogTitle, {
      ...props,
      className: tx("dialog.title", "dialog__title", {
        srOnly
      }, classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var DialogDescription = /* @__PURE__ */ (0, import_react25.forwardRef)(({ classNames, srOnly, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking17.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react25.default.createElement(import_react_dialog.DialogDescription, {
      ...props,
      className: tx("dialog.description", "dialog__description", {
        srOnly
      }, classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var DialogClose = import_react_dialog.DialogClose;
var DIALOG_OVERLAY_NAME = "DialogOverlay";
var DIALOG_CONTENT_NAME = "DialogContent";
var [OverlayLayoutProvider, useOverlayLayoutContext] = (0, import_react_context4.createContext)(DIALOG_OVERLAY_NAME, {});
var DialogOverlay = /* @__PURE__ */ (0, import_react25.forwardRef)(({ classNames, children, blockAlign, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking17.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react25.default.createElement(import_react_dialog.DialogOverlay, {
      ...props,
      className: tx("dialog.overlay", "dialog__overlay", {}, classNames),
      ref: forwardedRef,
      "data-block-align": blockAlign
    }, /* @__PURE__ */ import_react25.default.createElement(OverlayLayoutProvider, {
      inOverlayLayout: true
    }, children));
  } finally {
    _effect.f();
  }
});
DialogOverlay.displayName = DIALOG_OVERLAY_NAME;
var DialogContent = /* @__PURE__ */ (0, import_react25.forwardRef)(({ classNames, children, inOverlayLayout: propsInOverlayLayout, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking17.useSignals)();
  try {
    const { tx } = useThemeContext();
    const { inOverlayLayout } = useOverlayLayoutContext(DIALOG_CONTENT_NAME);
    return /* @__PURE__ */ import_react25.default.createElement(import_react_dialog.DialogContent, {
      // NOTE: Radix warning unless set to undefined.
      // https://www.radix-ui.com/primitives/docs/components/dialog#description
      "aria-describedby": void 0,
      ...props,
      className: tx("dialog.content", "dialog", {
        inOverlayLayout: propsInOverlayLayout || inOverlayLayout
      }, classNames),
      ref: forwardedRef
    }, children);
  } finally {
    _effect.f();
  }
});
DialogContent.displayName = DIALOG_CONTENT_NAME;
var Dialog = {
  Root: DialogRoot,
  Trigger: DialogTrigger,
  Portal: DialogPortal,
  Overlay: DialogOverlay,
  Content: DialogContent,
  Title: DialogTitle,
  Description: DialogDescription,
  Close: DialogClose
};
var AlertDialogRoot = (props) => {
  var _effect = (0, import_tracking18.useSignals)();
  try {
    return /* @__PURE__ */ import_react26.default.createElement(ElevationProvider, {
      elevation: "dialog"
    }, /* @__PURE__ */ import_react26.default.createElement(import_react_alert_dialog.Root, props));
  } finally {
    _effect.f();
  }
};
var AlertDialogTrigger = import_react_alert_dialog.AlertDialogTrigger;
var AlertDialogPortal = import_react_alert_dialog.AlertDialogPortal;
var AlertDialogCancel = import_react_alert_dialog.AlertDialogCancel;
var AlertDialogAction = import_react_alert_dialog.AlertDialogAction;
var AlertDialogTitle = /* @__PURE__ */ (0, import_react26.forwardRef)(({ classNames, srOnly, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking18.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react26.default.createElement(import_react_alert_dialog.AlertDialogTitle, {
      ...props,
      className: tx("dialog.title", "dialog--alert__title", {
        srOnly
      }, classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var AlertDialogDescription = /* @__PURE__ */ (0, import_react26.forwardRef)(({ classNames, srOnly, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking18.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react26.default.createElement(import_react_alert_dialog.AlertDialogDescription, {
      ...props,
      className: tx("dialog.description", "dialog--alert__description", {
        srOnly
      }, classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var ALERT_DIALOG_OVERLAY_NAME = "AlertDialogOverlay";
var ALERT_DIALOG_CONTENT_NAME = "AlertDialogContent";
var [OverlayLayoutProvider2, useOverlayLayoutContext2] = (0, import_react_context5.createContext)(ALERT_DIALOG_OVERLAY_NAME, {
  inOverlayLayout: false
});
var AlertDialogOverlay = /* @__PURE__ */ (0, import_react26.forwardRef)(({ classNames, children, blockAlign, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking18.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react26.default.createElement(import_react_alert_dialog.AlertDialogOverlay, {
      ...props,
      className: tx("dialog.overlay", "dialog--alert__overlay", {}, classNames, "data-[block-align=start]:justify-center", "data-[block-align=start]:items-start", "data-[block-align=center]:place-content-center"),
      ref: forwardedRef,
      "data-block-align": blockAlign
    }, /* @__PURE__ */ import_react26.default.createElement(OverlayLayoutProvider2, {
      inOverlayLayout: true
    }, children));
  } finally {
    _effect.f();
  }
});
AlertDialogOverlay.displayName = ALERT_DIALOG_OVERLAY_NAME;
var AlertDialogContent = /* @__PURE__ */ (0, import_react26.forwardRef)(({ classNames, children, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking18.useSignals)();
  try {
    const { tx } = useThemeContext();
    const { inOverlayLayout } = useOverlayLayoutContext2(ALERT_DIALOG_CONTENT_NAME);
    return /* @__PURE__ */ import_react26.default.createElement(import_react_alert_dialog.AlertDialogContent, {
      ...props,
      className: tx("dialog.content", "dialog--alert", {
        inOverlayLayout
      }, classNames),
      ref: forwardedRef
    }, children);
  } finally {
    _effect.f();
  }
});
AlertDialogContent.displayName = ALERT_DIALOG_CONTENT_NAME;
var AlertDialog = {
  Root: AlertDialogRoot,
  Trigger: AlertDialogTrigger,
  Portal: AlertDialogPortal,
  Overlay: AlertDialogOverlay,
  Content: AlertDialogContent,
  Title: AlertDialogTitle,
  Description: AlertDialogDescription,
  Cancel: AlertDialogCancel,
  Action: AlertDialogAction
};
var Label = /* @__PURE__ */ (0, import_react27.forwardRef)(({ srOnly, classNames, children, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking19.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react27.default.createElement(import_react_input.Label, {
      ...props,
      className: tx("input.label", "input__label", {
        srOnly
      }, classNames),
      ref: forwardedRef
    }, children);
  } finally {
    _effect.f();
  }
});
var Description = /* @__PURE__ */ (0, import_react27.forwardRef)(({ srOnly, classNames, children, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking19.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react27.default.createElement(import_react_input.Description, {
      ...props,
      className: tx("input.description", "input__description", {
        srOnly
      }, classNames),
      ref: forwardedRef
    }, children);
  } finally {
    _effect.f();
  }
});
var Validation = /* @__PURE__ */ (0, import_react27.forwardRef)(({ __inputScope, srOnly, classNames, children, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking19.useSignals)();
  try {
    const { tx } = useThemeContext();
    const { validationValence } = (0, import_react_input.useInputContext)(import_react_input.INPUT_NAME, __inputScope);
    return /* @__PURE__ */ import_react27.default.createElement(import_react_input.Validation, {
      ...props,
      className: tx("input.validation", `input__validation-message input__validation-message--${validationValence}`, {
        srOnly,
        validationValence
      }, classNames),
      ref: forwardedRef
    }, children);
  } finally {
    _effect.f();
  }
});
var DescriptionAndValidation = /* @__PURE__ */ (0, import_react27.forwardRef)(({ srOnly, classNames, children, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking19.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react27.default.createElement(import_react_input.DescriptionAndValidation, {
      ...props,
      className: tx("input.descriptionAndValidation", "input__description-and-validation", {
        srOnly
      }, classNames),
      ref: forwardedRef
    }, children);
  } finally {
    _effect.f();
  }
});
var PinInput = /* @__PURE__ */ (0, import_react27.forwardRef)(({ density: propsDensity, elevation: propsElevation, segmentClassName: propsSegmentClassName, inputClassName, variant, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking19.useSignals)();
  try {
    const { hasIosKeyboard: hasIosKeyboard2 } = useThemeContext();
    const { tx } = useThemeContext();
    const density = useDensityContext(propsDensity);
    const elevation = useElevationContext(propsElevation);
    const segmentClassName = (0, import_react27.useCallback)(({ focused, validationValence }) => tx("input.input", "input--pin-segment", {
      variant: "static",
      focused,
      disabled: props.disabled,
      density,
      elevation,
      validationValence
    }, propsSegmentClassName), [
      tx,
      props.disabled,
      elevation,
      propsElevation,
      density
    ]);
    return /* @__PURE__ */ import_react27.default.createElement(import_react_input.PinInput, {
      ...props,
      segmentClassName,
      ...props.autoFocus && !hasIosKeyboard2 && {
        autoFocus: true
      },
      inputClassName: tx("input.inputWithSegments", "input input--pin", {
        disabled: props.disabled
      }, inputClassName),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var TextInput = /* @__PURE__ */ (0, import_react27.forwardRef)(({ __inputScope, classNames, density: propsDensity, elevation: propsElevation, variant, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking19.useSignals)();
  try {
    const { hasIosKeyboard: hasIosKeyboard2 } = useThemeContext();
    const themeContextValue = useThemeContext();
    const density = useDensityContext(propsDensity);
    const elevation = useElevationContext(propsElevation);
    const { validationValence } = (0, import_react_input.useInputContext)(import_react_input.INPUT_NAME, __inputScope);
    const { tx } = themeContextValue;
    return /* @__PURE__ */ import_react27.default.createElement(import_react_input.TextInput, {
      ...props,
      className: tx("input.input", "input", {
        variant,
        disabled: props.disabled,
        density,
        elevation,
        validationValence
      }, classNames),
      ...props.autoFocus && !hasIosKeyboard2 && {
        autoFocus: true
      },
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var TextArea = /* @__PURE__ */ (0, import_react27.forwardRef)(({ __inputScope, classNames, density: propsDensity, elevation: propsElevation, variant, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking19.useSignals)();
  try {
    const { hasIosKeyboard: hasIosKeyboard2 } = useThemeContext();
    const { tx } = useThemeContext();
    const density = useDensityContext(propsDensity);
    const elevation = useElevationContext(propsElevation);
    const { validationValence } = (0, import_react_input.useInputContext)(import_react_input.INPUT_NAME, __inputScope);
    return /* @__PURE__ */ import_react27.default.createElement(import_react_input.TextArea, {
      ...props,
      className: tx("input.input", "input--text-area", {
        variant,
        disabled: props.disabled,
        density,
        elevation,
        validationValence
      }, "-mbe-labelSpacingBlock", classNames),
      ...props.autoFocus && !hasIosKeyboard2 && {
        autoFocus: true
      },
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var Checkbox = /* @__PURE__ */ (0, import_react27.forwardRef)(({ __inputScope, checked: propsChecked, defaultChecked: propsDefaultChecked, onCheckedChange: propsOnCheckedChange, size, weight = "bold", classNames, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking19.useSignals)();
  try {
    const [checked, onCheckedChange] = (0, import_react_use_controllable_state2.useControllableState)({
      prop: propsChecked,
      defaultProp: propsDefaultChecked,
      onChange: propsOnCheckedChange
    });
    const { id, validationValence, descriptionId, errorMessageId } = (0, import_react_input.useInputContext)(import_react_input.INPUT_NAME, __inputScope);
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react27.default.createElement(import_react_checkbox.Root, {
      ...props,
      checked,
      onCheckedChange,
      id,
      "aria-describedby": descriptionId,
      ...validationValence === "error" && {
        "aria-invalid": "true",
        "aria-errormessage": errorMessageId
      },
      className: tx("input.checkbox", "input--checkbox", {
        size
      }, "shrink-0", classNames),
      ref: forwardedRef
    }, /* @__PURE__ */ import_react27.default.createElement(Icon, {
      icon: checked === "indeterminate" ? "ph--minus--regular" : "ph--check--regular",
      classNames: tx("input.checkboxIndicator", "input--checkbox__indicator", {
        size,
        checked
      })
    }));
  } finally {
    _effect.f();
  }
});
var Switch = /* @__PURE__ */ (0, import_react27.forwardRef)(({ __inputScope, checked: propsChecked, defaultChecked: propsDefaultChecked, onCheckedChange: propsOnCheckedChange, classNames, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking19.useSignals)();
  try {
    const [checked, onCheckedChange] = (0, import_react_use_controllable_state2.useControllableState)({
      prop: propsChecked,
      defaultProp: propsDefaultChecked ?? false,
      onChange: propsOnCheckedChange
    });
    const { id, validationValence, descriptionId, errorMessageId } = (0, import_react_input.useInputContext)(import_react_input.INPUT_NAME, __inputScope);
    return /* @__PURE__ */ import_react27.default.createElement("input", {
      type: "checkbox",
      className: (0, import_react_ui_theme3.mx)("dx-checkbox--switch dx-focus-ring", classNames),
      checked,
      onChange: (event) => {
        onCheckedChange(event.target.checked);
      },
      id,
      "aria-describedby": descriptionId,
      ...props,
      ...validationValence === "error" && {
        "aria-invalid": "true",
        "aria-errormessage": errorMessageId
      },
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var Input = {
  Root: import_react_input.InputRoot,
  PinInput,
  TextInput,
  TextArea,
  Checkbox,
  Switch,
  Label,
  Description,
  Validation,
  DescriptionAndValidation
};
var edgeToOrientationMap = {
  top: "horizontal",
  bottom: "horizontal",
  left: "vertical",
  right: "vertical"
};
var orientationStyles = {
  horizontal: "h-[--line-thickness] left-[calc(var(--line-inset)+var(--terminal-radius))] right-[--line-inset] before:left-[--terminal-inset]",
  vertical: "w-[--line-thickness] top-[calc(var(--line-inset)+var(--terminal-radius))] bottom-[--line-inset] before:top-[--terminal-inset]"
};
var edgeStyles = {
  top: "top-[--line-offset] before:top-[--offset-terminal]",
  right: "right-[--line-offset] before:right-[--offset-terminal]",
  bottom: "bottom-[--line-offset] before:bottom-[--offset-terminal]",
  left: "left-[--line-offset] before:left-[--offset-terminal]"
};
var strokeSize = 2;
var terminalSize = 8;
var offsetToAlignTerminalWithLine = (strokeSize - terminalSize) / 2;
var ListDropIndicator = ({ edge, gap = 0, lineInset = 0, terminalInset = lineInset - terminalSize }) => {
  var _effect = (0, import_tracking21.useSignals)();
  try {
    const orientation = edgeToOrientationMap[edge];
    return /* @__PURE__ */ import_react30.default.createElement("div", {
      role: "none",
      style: {
        "--line-thickness": `${strokeSize}px`,
        "--line-offset": `calc(-0.5 * (${gap}px + ${strokeSize}px))`,
        "--line-inset": `${lineInset}px`,
        "--terminal-size": `${terminalSize}px`,
        "--terminal-radius": `${terminalSize / 2}px`,
        "--terminal-inset": `${terminalInset}px`,
        "--offset-terminal": `${offsetToAlignTerminalWithLine}px`
      },
      className: `absolute z-10 pointer-events-none bg-accentSurface before:content-[''] before:w-[--terminal-size] before:h-[--terminal-size] box-border before:absolute before:border-[length:--line-thickness] before:border-solid before:border-accentSurface before:rounded-full ${orientationStyles[orientation]} ${edgeStyles[edge]}`
    });
  } finally {
    _effect.f();
  }
};
var List = /* @__PURE__ */ (0, import_react29.forwardRef)(({ classNames, children, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking20.useSignals)();
  try {
    const { tx } = useThemeContext();
    const density = useDensityContext(props.density);
    return /* @__PURE__ */ import_react29.default.createElement(DensityProvider, {
      density
    }, /* @__PURE__ */ import_react29.default.createElement(import_react_list.List, {
      ...props,
      className: tx("list.root", "list", {}, classNames),
      ref: forwardedRef
    }, children));
  } finally {
    _effect.f();
  }
});
var ListItemEndcap = /* @__PURE__ */ (0, import_react29.forwardRef)(({ children, classNames, asChild, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking20.useSignals)();
  try {
    const Root7 = asChild ? import_react_slot7.Slot : "div";
    const density = useDensityContext();
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react29.default.createElement(Root7, {
      ...!asChild && {
        role: "none"
      },
      ...props,
      className: tx("list.item.endcap", "list__listItem__endcap", {
        density
      }, classNames),
      ref: forwardedRef
    }, children);
  } finally {
    _effect.f();
  }
});
var MockListItemOpenTrigger = ({ classNames, ...props }) => {
  var _effect = (0, import_tracking20.useSignals)();
  try {
    const density = useDensityContext();
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react29.default.createElement("div", {
      role: "none",
      ...props,
      className: tx("list.item.openTrigger", "list__listItem__openTrigger--mock", {
        density
      }, classNames)
    });
  } finally {
    _effect.f();
  }
};
var ListItemHeading = /* @__PURE__ */ (0, import_react29.forwardRef)(({ children, classNames, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking20.useSignals)();
  try {
    const { tx } = useThemeContext();
    const density = useDensityContext();
    return /* @__PURE__ */ import_react29.default.createElement(import_react_list.ListItemHeading, {
      ...props,
      className: tx("list.item.heading", "list__listItem__heading", {
        density
      }, classNames),
      ref: forwardedRef
    }, children);
  } finally {
    _effect.f();
  }
});
var ListItemOpenTrigger = /* @__PURE__ */ (0, import_react29.forwardRef)(({ __listItemScope, classNames, children, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking20.useSignals)();
  try {
    const { tx } = useThemeContext();
    const density = useDensityContext();
    const { open } = (0, import_react_list.useListItemContext)(import_react_list.LIST_ITEM_NAME, __listItemScope);
    const Icon3 = open ? import_react28.CaretDown : import_react28.CaretRight;
    return /* @__PURE__ */ import_react29.default.createElement(import_react_list.ListItemOpenTrigger, {
      ...props,
      className: tx("list.item.openTrigger", "list__listItem__openTrigger", {
        density
      }, classNames),
      ref: forwardedRef
    }, children || /* @__PURE__ */ import_react29.default.createElement(Icon3, {
      weight: "bold",
      className: tx("list.item.openTriggerIcon", "list__listItem__openTrigger__icon", {})
    }));
  } finally {
    _effect.f();
  }
});
var ListItemRoot = /* @__PURE__ */ (0, import_react29.forwardRef)(({ classNames, children, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking20.useSignals)();
  try {
    const { tx } = useThemeContext();
    const density = useDensityContext();
    return /* @__PURE__ */ import_react29.default.createElement(import_react_list.ListItem, {
      ...props,
      className: tx("list.item.root", "list__listItem", {
        density,
        collapsible: props.collapsible
      }, classNames),
      ref: forwardedRef
    }, children);
  } finally {
    _effect.f();
  }
});
var ListItem = {
  Root: ListItemRoot,
  Endcap: ListItemEndcap,
  Heading: ListItemHeading,
  OpenTrigger: ListItemOpenTrigger,
  CollapsibleContent: import_react_list.ListItemCollapsibleContent,
  MockOpenTrigger: MockListItemOpenTrigger,
  DropIndicator: ListDropIndicator
};
var edgeToOrientationMap2 = {
  "reorder-above": "sibling",
  "reorder-below": "sibling",
  "make-child": "child",
  reparent: "child"
};
var orientationStyles2 = {
  // TODO(wittjosiah): Stop using left/right here.
  sibling: "bs-[--line-thickness] left-[--horizontal-indent] right-0 bg-accentSurface before:left-[--negative-terminal-size]",
  child: "is-full block-start-0 block-end-0 border-[length:--line-thickness] before:invisible"
};
var instructionStyles = {
  "reorder-above": "block-start-[--line-offset] before:block-start-[--offset-terminal]",
  "reorder-below": "block-end-[--line-offset] before:block-end-[--offset-terminal]",
  "make-child": "border-accentSurface",
  // TODO(wittjosiah): This is not occurring in the current implementation.
  reparent: ""
};
var strokeSize2 = 2;
var terminalSize2 = 8;
var offsetToAlignTerminalWithLine2 = (strokeSize2 - terminalSize2) / 2;
var TreeDropIndicator = ({ instruction, gap = 0 }) => {
  var _effect = (0, import_tracking23.useSignals)();
  try {
    const lineOffset = `calc(-0.5 * (${gap}px + ${strokeSize2}px))`;
    const isBlocked = instruction.type === "instruction-blocked";
    const desiredInstruction = isBlocked ? instruction.desired : instruction;
    const orientation = edgeToOrientationMap2[desiredInstruction.type];
    if (isBlocked) {
      return null;
    }
    return /* @__PURE__ */ import_react32.default.createElement("div", {
      style: {
        "--line-thickness": `${strokeSize2}px`,
        "--line-offset": `${lineOffset}`,
        "--terminal-size": `${terminalSize2}px`,
        "--terminal-radius": `${terminalSize2 / 2}px`,
        "--negative-terminal-size": `-${terminalSize2}px`,
        "--offset-terminal": `${offsetToAlignTerminalWithLine2}px`,
        "--horizontal-indent": `${desiredInstruction.currentLevel * desiredInstruction.indentPerLevel + 4}px`
      },
      className: `absolute z-10 pointer-events-none before:is-[--terminal-size] before:bs-[--terminal-size] box-border before:absolute before:border-[length:--line-thickness] before:border-solid before:border-accentSurface before:rounded-full ${orientationStyles2[orientation]} ${instructionStyles[desiredInstruction.type]}`
    });
  } finally {
    _effect.f();
  }
};
var TreeRoot = /* @__PURE__ */ (0, import_react31.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking22.useSignals)();
  try {
    return /* @__PURE__ */ import_react31.default.createElement(List, {
      ...props,
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var TreeBranch = /* @__PURE__ */ (0, import_react31.forwardRef)(({ __listScope, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking22.useSignals)();
  try {
    const { headingId } = (0, import_react_list.useListItemContext)(import_react_list.LIST_ITEM_NAME, __listScope);
    return /* @__PURE__ */ import_react31.default.createElement(List, {
      ...props,
      "aria-labelledby": headingId,
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var TreeItemRoot = /* @__PURE__ */ (0, import_react31.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking22.useSignals)();
  try {
    return /* @__PURE__ */ import_react31.default.createElement(ListItem.Root, {
      role: "treeitem",
      ...props,
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var TreeItemHeading = ListItem.Heading;
var TreeItemOpenTrigger = ListItem.OpenTrigger;
var MockTreeItemOpenTrigger = ListItem.MockOpenTrigger;
var TreeItemBody = ListItem.CollapsibleContent;
var Tree = {
  Root: TreeRoot,
  Branch: TreeBranch
};
var TreeItem = {
  Root: TreeItemRoot,
  Heading: TreeItemHeading,
  Body: TreeItemBody,
  OpenTrigger: TreeItemOpenTrigger,
  MockOpenTrigger: MockTreeItemOpenTrigger,
  DropIndicator: TreeDropIndicator
};
var TREEGRID_ROW_NAME = "TreegridRow";
var [createTreegridRowContext, createTreegridRowScope] = (0, import_react_context6.createContextScope)(TREEGRID_ROW_NAME, []);
var [TreegridRowProvider, useTreegridRowContext] = createTreegridRowContext(TREEGRID_ROW_NAME);
var PATH_SEPARATOR = "~";
var PARENT_OF_SEPARATOR = " ";
var TreegridRoot = /* @__PURE__ */ (0, import_react33.forwardRef)(({ asChild, classNames, children, style, gridTemplateColumns, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking24.useSignals)();
  try {
    const { tx } = useThemeContext();
    const Root7 = asChild ? import_react_slot8.Slot : import_react_primitive7.Primitive.div;
    const arrowNavigationAttrs = (0, import_react_tabster.useArrowNavigationGroup)({
      axis: "vertical",
      tabbable: false,
      circular: true
    });
    return /* @__PURE__ */ import_react33.default.createElement(Root7, {
      role: "treegrid",
      ...arrowNavigationAttrs,
      ...props,
      className: tx("treegrid.root", "treegrid", {}, classNames),
      style: {
        ...style,
        gridTemplateColumns
      },
      ref: forwardedRef
    }, children);
  } finally {
    _effect.f();
  }
});
var TreegridRow = /* @__PURE__ */ (0, import_react33.forwardRef)(({ __treegridRowScope, asChild, classNames, children, id, parentOf, open: propsOpen, defaultOpen, onOpenChange: propsOnOpenChange, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking24.useSignals)();
  try {
    const { tx } = useThemeContext();
    const Root7 = asChild ? import_react_slot8.Slot : import_react_primitive7.Primitive.div;
    const pathParts = id.split(PATH_SEPARATOR);
    const level = pathParts.length - 1;
    const [open, onOpenChange] = (0, import_react_use_controllable_state3.useControllableState)({
      prop: propsOpen,
      onChange: propsOnOpenChange,
      defaultProp: defaultOpen
    });
    const focusableGroupAttrs = (0, import_react_tabster.useFocusableGroup)({
      tabBehavior: "limited"
    });
    const arrowGroupAttrs = (0, import_react_tabster.useArrowNavigationGroup)({
      axis: "horizontal",
      tabbable: false,
      circular: false,
      memorizeCurrent: false
    });
    return /* @__PURE__ */ import_react33.default.createElement(TreegridRowProvider, {
      open,
      onOpenChange,
      scope: __treegridRowScope
    }, /* @__PURE__ */ import_react33.default.createElement(Root7, {
      role: "row",
      "aria-level": level,
      className: tx("treegrid.row", "treegrid__row", {
        level
      }, classNames),
      ...parentOf && {
        "aria-expanded": open,
        "aria-owns": parentOf
      },
      tabIndex: 0,
      ...focusableGroupAttrs,
      ...props,
      id,
      ref: forwardedRef
    }, /* @__PURE__ */ import_react33.default.createElement("div", {
      role: "none",
      className: "contents",
      ...arrowGroupAttrs
    }, children)));
  } finally {
    _effect.f();
  }
});
var TreegridCell = /* @__PURE__ */ (0, import_react33.forwardRef)(({ classNames, children, indent, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking24.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react33.default.createElement("div", {
      role: "gridcell",
      className: tx("treegrid.cell", "treegrid__cell", {
        indent
      }, classNames),
      ...props,
      ref: forwardedRef
    }, children);
  } finally {
    _effect.f();
  }
});
var Treegrid = {
  Root: TreegridRoot,
  Row: TreegridRow,
  Cell: TreegridCell,
  PARENT_OF_SEPARATOR,
  PATH_SEPARATOR,
  createTreegridRowScope,
  useTreegridRowContext
};
var useSwipeToDismiss = (ref, {
  onDismiss,
  dismissThreshold = 64,
  debounceThreshold = 8,
  offset = 0
  /* side = 'inline-start' */
}) => {
  const $root = ref.current;
  const [motionState, setMotionState] = (0, import_react35.useState)(0);
  const [gestureStartX, setGestureStartX] = (0, import_react35.useState)(0);
  const setIdle = (0, import_react35.useCallback)(() => {
    setMotionState(0);
    $root?.style.removeProperty("inset-inline-start");
    $root?.style.setProperty("transition-duration", "200ms");
  }, [
    $root
  ]);
  const setFollowing = (0, import_react35.useCallback)(() => {
    setMotionState(2);
    $root?.style.setProperty("transition-duration", "0ms");
  }, [
    $root
  ]);
  const handlePointerDown = (0, import_react35.useCallback)(({ screenX }) => {
    if (motionState === 0) {
      setMotionState(1);
      setGestureStartX(screenX);
    }
  }, [
    motionState
  ]);
  const handlePointerMove = (0, import_react35.useCallback)(({ screenX }) => {
    if ($root) {
      const delta = Math.min(screenX - gestureStartX, 0);
      switch (motionState) {
        case 2:
          if (Math.abs(delta) > dismissThreshold) {
            setIdle();
            onDismiss?.();
          } else {
            $root.style.setProperty("inset-inline-start", `${offset + delta}px`);
          }
          break;
        case 1:
          if (Math.abs(delta) > debounceThreshold) {
            setFollowing();
          }
          break;
      }
    }
  }, [
    $root,
    motionState,
    gestureStartX
  ]);
  const handlePointerUp = (0, import_react35.useCallback)(() => {
    setIdle();
  }, [
    setIdle
  ]);
  (0, import_react35.useEffect)(() => {
    $root?.addEventListener("pointerdown", handlePointerDown);
    return () => {
      $root?.removeEventListener("pointerdown", handlePointerDown);
    };
  }, [
    $root,
    handlePointerDown
  ]);
  (0, import_react35.useEffect)(() => {
    $root && document.documentElement.addEventListener("pointermove", handlePointerMove);
    return () => {
      document.documentElement.removeEventListener("pointermove", handlePointerMove);
    };
  }, [
    $root,
    handlePointerMove
  ]);
  (0, import_react35.useEffect)(() => {
    $root && document.documentElement.addEventListener("pointerup", handlePointerUp);
    return () => {
      document.documentElement.removeEventListener("pointerup", handlePointerUp);
    };
  }, [
    $root,
    handlePointerUp
  ]);
};
var __dxlog_file = "/home/runner/work/dxos/dxos/packages/ui/react-ui/src/components/Main/Main.tsx";
var MAIN_ROOT_NAME = "MainRoot";
var NAVIGATION_SIDEBAR_NAME = "NavigationSidebar";
var COMPLEMENTARY_SIDEBAR_NAME = "ComplementarySidebar";
var MAIN_NAME = "Main";
var GENERIC_CONSUMER_NAME = "GenericConsumer";
var landmarkAttr = "data-main-landmark";
var useLandmarkMover = (propsOnKeyDown, landmark) => {
  const handleKeyDown = (0, import_react34.useCallback)((event) => {
    const target = event.target;
    if (event.target === event.currentTarget && event.key === "Tab" && target.hasAttribute(landmarkAttr)) {
      event.preventDefault();
      const landmarks = Array.from(document.querySelectorAll(`[${landmarkAttr}]:not([inert])`)).map((el) => el.hasAttribute(landmarkAttr) ? parseInt(el.getAttribute(landmarkAttr)) : NaN).sort();
      const l = landmarks.length;
      const cursor = landmarks.indexOf(parseInt(target.getAttribute(landmarkAttr)));
      const nextLandmark = landmarks[(cursor + l + (event.getModifierState("Shift") ? -1 : 1)) % l];
      document.querySelector(`[${landmarkAttr}="${nextLandmark}"]`)?.focus();
    }
    propsOnKeyDown?.(event);
  }, [
    propsOnKeyDown
  ]);
  const focusableGroupAttrs = window ? {} : {
    tabBehavior: "limited",
    ignoreDefaultKeydown: {
      Tab: true
    }
  };
  return {
    onKeyDown: handleKeyDown,
    [landmarkAttr]: landmark,
    tabIndex: 0,
    ...focusableGroupAttrs
  };
};
var [MainProvider, useMainContext] = (0, import_react_context7.createContext)(MAIN_NAME, {
  resizing: false,
  navigationSidebarState: "closed",
  setNavigationSidebarState: (nextState) => {
    import_log.log.warn("Attempt to set sidebar state without initializing `MainRoot`", void 0, {
      F: __dxlog_file,
      L: 82,
      S: void 0,
      C: (f, a) => f(...a)
    });
  },
  complementarySidebarState: "closed",
  setComplementarySidebarState: (nextState) => {
    import_log.log.warn("Attempt to set sidebar state without initializing `MainRoot`", void 0, {
      F: __dxlog_file,
      L: 87,
      S: void 0,
      C: (f, a) => f(...a)
    });
  }
});
var useSidebars = (consumerName = GENERIC_CONSUMER_NAME) => {
  const { setNavigationSidebarState, navigationSidebarState, setComplementarySidebarState, complementarySidebarState } = useMainContext(consumerName);
  return {
    navigationSidebarState,
    setNavigationSidebarState,
    toggleNavigationSidebar: (0, import_react34.useCallback)(() => setNavigationSidebarState(navigationSidebarState === "expanded" ? "closed" : "expanded"), [
      navigationSidebarState,
      setNavigationSidebarState
    ]),
    openNavigationSidebar: (0, import_react34.useCallback)(() => setNavigationSidebarState("expanded"), []),
    collapseNavigationSidebar: (0, import_react34.useCallback)(() => setNavigationSidebarState("collapsed"), []),
    closeNavigationSidebar: (0, import_react34.useCallback)(() => setNavigationSidebarState("closed"), []),
    complementarySidebarState,
    setComplementarySidebarState,
    toggleComplementarySidebar: (0, import_react34.useCallback)(() => setComplementarySidebarState(complementarySidebarState === "expanded" ? "closed" : "expanded"), [
      complementarySidebarState,
      setComplementarySidebarState
    ]),
    openComplementarySidebar: (0, import_react34.useCallback)(() => setComplementarySidebarState("expanded"), []),
    collapseComplementarySidebar: (0, import_react34.useCallback)(() => setComplementarySidebarState("collapsed"), []),
    closeComplementarySidebar: (0, import_react34.useCallback)(() => setComplementarySidebarState("closed"), [])
  };
};
var resizeDebounce = 3e3;
var MainRoot = ({ navigationSidebarState: propsNavigationSidebarState, defaultNavigationSidebarState, onNavigationSidebarStateChange, complementarySidebarState: propsComplementarySidebarState, defaultComplementarySidebarState, onComplementarySidebarStateChange, children, ...props }) => {
  var _effect = (0, import_tracking25.useSignals)();
  try {
    const [isLg] = (0, import_react_hooks4.useMediaQuery)("lg", {
      ssr: false
    });
    const [navigationSidebarState = isLg ? "expanded" : "collapsed", setNavigationSidebarState] = (0, import_react_use_controllable_state4.useControllableState)({
      prop: propsNavigationSidebarState,
      defaultProp: defaultNavigationSidebarState,
      onChange: onNavigationSidebarStateChange
    });
    const [complementarySidebarState = isLg ? "expanded" : "collapsed", setComplementarySidebarState] = (0, import_react_use_controllable_state4.useControllableState)({
      prop: propsComplementarySidebarState,
      defaultProp: defaultComplementarySidebarState,
      onChange: onComplementarySidebarStateChange
    });
    const [resizing, setResizing] = (0, import_react34.useState)(false);
    const resizeInterval = (0, import_react34.useRef)(null);
    const handleResize = (0, import_react34.useCallback)(() => {
      setResizing(true);
      if (resizeInterval.current) {
        clearTimeout(resizeInterval.current);
      }
      resizeInterval.current = setTimeout(() => {
        setResizing(false);
        resizeInterval.current = null;
      }, resizeDebounce);
    }, []);
    (0, import_react34.useEffect)(() => {
      window.addEventListener("resize", handleResize);
      return () => window.removeEventListener("resize", handleResize);
    }, [
      handleResize
    ]);
    return /* @__PURE__ */ import_react34.default.createElement(MainProvider, {
      ...props,
      navigationSidebarState,
      setNavigationSidebarState,
      complementarySidebarState,
      setComplementarySidebarState,
      resizing
    }, children);
  } finally {
    _effect.f();
  }
};
MainRoot.displayName = MAIN_ROOT_NAME;
var handleOpenAutoFocus = (event) => {
  !document.body.hasAttribute("data-is-keyboard") && event.preventDefault();
};
var MainSidebar = /* @__PURE__ */ (0, import_react34.forwardRef)(({ classNames, children, swipeToDismiss, onOpenAutoFocus, state, resizing, onStateChange, side, label, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking25.useSignals)();
  try {
    const [isLg] = (0, import_react_hooks4.useMediaQuery)("lg", {
      ssr: false
    });
    const { tx } = useThemeContext();
    const { t } = useTranslation();
    const ref = (0, import_react_hooks4.useForwardedRef)(forwardedRef);
    const noopRef = (0, import_react34.useRef)(null);
    useSwipeToDismiss(swipeToDismiss ? ref : noopRef, {
      onDismiss: () => onStateChange?.("closed")
    });
    const handleKeyDown = (0, import_react34.useCallback)((event) => {
      if (event.key === "Escape") {
        event.target.closest("[data-tabster]")?.focus();
      }
      props.onKeyDown?.(event);
    }, [
      props.onKeyDown
    ]);
    const Root7 = isLg ? import_react_primitive8.Primitive.div : import_react_dialog2.DialogContent;
    return /* @__PURE__ */ import_react34.default.createElement(import_react_dialog2.Root, {
      open: state !== "closed",
      "aria-label": toLocalizedString(label, t),
      modal: false
    }, !isLg && /* @__PURE__ */ import_react34.default.createElement(import_react_dialog2.DialogTitle, {
      className: "sr-only"
    }, toLocalizedString(label, t)), /* @__PURE__ */ import_react34.default.createElement(Root7, {
      ...!isLg && {
        forceMount: true,
        tabIndex: -1,
        onOpenAutoFocus: onOpenAutoFocus ?? handleOpenAutoFocus
      },
      ...props,
      "data-side": side === "inline-end" ? "ie" : "is",
      "data-state": state,
      "data-resizing": resizing ? "true" : "false",
      className: tx("main.sidebar", "main__sidebar", {}, classNames),
      onKeyDown: handleKeyDown,
      ...state === "closed" && {
        inert: "true"
      },
      ref
    }, children));
  } finally {
    _effect.f();
  }
});
var MainNavigationSidebar = /* @__PURE__ */ (0, import_react34.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking25.useSignals)();
  try {
    const { navigationSidebarState, setNavigationSidebarState, resizing } = useMainContext(NAVIGATION_SIDEBAR_NAME);
    const mover = useLandmarkMover(props.onKeyDown, "0");
    return /* @__PURE__ */ import_react34.default.createElement(MainSidebar, {
      ...mover,
      ...props,
      state: navigationSidebarState,
      onStateChange: setNavigationSidebarState,
      resizing,
      side: "inline-start",
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
MainNavigationSidebar.displayName = NAVIGATION_SIDEBAR_NAME;
var MainComplementarySidebar = /* @__PURE__ */ (0, import_react34.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking25.useSignals)();
  try {
    const { complementarySidebarState, setComplementarySidebarState, resizing } = useMainContext(COMPLEMENTARY_SIDEBAR_NAME);
    const mover = useLandmarkMover(props.onKeyDown, "2");
    return /* @__PURE__ */ import_react34.default.createElement(MainSidebar, {
      ...mover,
      ...props,
      state: complementarySidebarState,
      onStateChange: setComplementarySidebarState,
      resizing,
      side: "inline-end",
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
MainNavigationSidebar.displayName = NAVIGATION_SIDEBAR_NAME;
var MainContent = /* @__PURE__ */ (0, import_react34.forwardRef)(({ asChild, classNames, bounce, handlesFocus, children, role, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking25.useSignals)();
  try {
    const { navigationSidebarState, complementarySidebarState } = useMainContext(MAIN_NAME);
    const { tx } = useThemeContext();
    const Root7 = asChild ? import_react_slot9.Slot : role ? "div" : "main";
    const mover = useLandmarkMover(props.onKeyDown, "1");
    return /* @__PURE__ */ import_react34.default.createElement(Root7, {
      role,
      ...handlesFocus && {
        ...mover
      },
      ...props,
      "data-sidebar-inline-start-state": navigationSidebarState,
      "data-sidebar-inline-end-state": complementarySidebarState,
      "data-handles-focus": handlesFocus,
      className: tx("main.content", "main", {
        bounce,
        handlesFocus
      }, classNames),
      ref: forwardedRef
    }, children);
  } finally {
    _effect.f();
  }
});
MainContent.displayName = MAIN_NAME;
var MainOverlay = /* @__PURE__ */ (0, import_react34.forwardRef)(({ classNames, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking25.useSignals)();
  try {
    const [isLg] = (0, import_react_hooks4.useMediaQuery)("lg", {
      ssr: false
    });
    const { navigationSidebarState, setNavigationSidebarState, complementarySidebarState, setComplementarySidebarState } = useMainContext(MAIN_NAME);
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react34.default.createElement("div", {
      onClick: () => {
        setNavigationSidebarState("collapsed");
        setComplementarySidebarState("collapsed");
      },
      ...props,
      className: tx("main.overlay", "main__overlay", {
        isLg,
        inlineStartSidebarOpen: navigationSidebarState,
        inlineEndSidebarOpen: complementarySidebarState
      }, classNames),
      "data-state": navigationSidebarState === "expanded" || complementarySidebarState === "expanded" ? "open" : "closed",
      "aria-hidden": "true",
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var Main = {
  Root: MainRoot,
  Content: MainContent,
  Overlay: MainOverlay,
  NavigationSidebar: MainNavigationSidebar,
  ComplementarySidebar: MainComplementarySidebar
};
var propIsNumber = (prop) => Number.isFinite(prop);
var propsIsRecord = (prop) => !!(prop && typeof prop === "object");
var safePadding = (propsPadding, safePadding2, side) => {
  return (propIsNumber(safePadding2[side]) ? safePadding2[side] : 0) + (propIsNumber(propsPadding) ? propsPadding : propsIsRecord(propsPadding) ? propsPadding[side] ?? 0 : 0);
};
var useSafeCollisionPadding = (collisionPadding) => {
  const { safeAreaPadding } = useThemeContext();
  return (0, import_react37.useMemo)(() => ({
    top: safePadding(collisionPadding, safeAreaPadding, "top"),
    right: safePadding(collisionPadding, safeAreaPadding, "right"),
    bottom: safePadding(collisionPadding, safeAreaPadding, "bottom"),
    left: safePadding(collisionPadding, safeAreaPadding, "left")
  }), [
    collisionPadding,
    safeAreaPadding
  ]);
};
var ContextMenuRoot = ContextMenuPrimitive.ContextMenu;
var ContextMenuTrigger = ContextMenuPrimitive.Trigger;
var ContextMenuPortal = ContextMenuPrimitive.Portal;
var ContextMenuContent = /* @__PURE__ */ (0, import_react36.forwardRef)(({ classNames, children, collisionPadding = 8, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking26.useSignals)();
  try {
    const { tx } = useThemeContext();
    const elevation = useElevationContext();
    const safeCollisionPadding = useSafeCollisionPadding(collisionPadding);
    return /* @__PURE__ */ import_react36.default.createElement(ContextMenuPrimitive.Content, {
      ...props,
      collisionPadding: safeCollisionPadding,
      className: tx("menu.content", "menu", {
        elevation
      }, classNames),
      ref: forwardedRef
    }, children);
  } finally {
    _effect.f();
  }
});
var ContextMenuViewport = /* @__PURE__ */ (0, import_react36.forwardRef)(({ classNames, asChild, children, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking26.useSignals)();
  try {
    const { tx } = useThemeContext();
    const Root7 = asChild ? import_react_slot10.Slot : import_react_primitive9.Primitive.div;
    return /* @__PURE__ */ import_react36.default.createElement(Root7, {
      ...props,
      className: tx("menu.viewport", "menu__viewport", {}, classNames),
      ref: forwardedRef
    }, children);
  } finally {
    _effect.f();
  }
});
var ContextMenuArrow = /* @__PURE__ */ (0, import_react36.forwardRef)(({ classNames, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking26.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react36.default.createElement(ContextMenuPrimitive.Arrow, {
      ...props,
      className: tx("menu.arrow", "menu__arrow", {}, classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var ContextMenuGroup = ContextMenuPrimitive.Group;
var ContextMenuItemIndicator = ContextMenuPrimitive.ItemIndicator;
var ContextMenuItem = /* @__PURE__ */ (0, import_react36.forwardRef)(({ classNames, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking26.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react36.default.createElement(ContextMenuPrimitive.Item, {
      ...props,
      className: tx("menu.item", "menu__item", {}, classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var ContextMenuCheckboxItem = /* @__PURE__ */ (0, import_react36.forwardRef)(({ classNames, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking26.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react36.default.createElement(ContextMenuPrimitive.CheckboxItem, {
      ...props,
      className: tx("menu.item", "menu__item--checkbox", {}, classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var ContextMenuSeparator = /* @__PURE__ */ (0, import_react36.forwardRef)(({ classNames, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking26.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react36.default.createElement(ContextMenuPrimitive.Separator, {
      ...props,
      className: tx("menu.separator", "menu__item", {}, classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var ContextMenuGroupLabel = /* @__PURE__ */ (0, import_react36.forwardRef)(({ classNames, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking26.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react36.default.createElement(ContextMenuPrimitive.Label, {
      ...props,
      className: tx("menu.groupLabel", "menu__group__label", {}, classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var ContextMenu2 = {
  Root: ContextMenuRoot,
  Trigger: ContextMenuTrigger,
  Portal: ContextMenuPortal,
  Content: ContextMenuContent,
  Viewport: ContextMenuViewport,
  Arrow: ContextMenuArrow,
  Group: ContextMenuGroup,
  Item: ContextMenuItem,
  CheckboxItem: ContextMenuCheckboxItem,
  ItemIndicator: ContextMenuItemIndicator,
  Separator: ContextMenuSeparator,
  GroupLabel: ContextMenuGroupLabel
};
var DROPDOWN_MENU_NAME = "DropdownMenu";
var [createDropdownMenuContext, createDropdownMenuScope] = (0, import_react_context8.createContextScope)(DROPDOWN_MENU_NAME, [
  import_react_menu.createMenuScope
]);
var useMenuScope = (0, import_react_menu.createMenuScope)();
var [DropdownMenuProvider, useDropdownMenuContext] = createDropdownMenuContext(DROPDOWN_MENU_NAME);
var DropdownMenuRoot = (props) => {
  var _effect = (0, import_tracking27.useSignals)();
  try {
    const { __scopeDropdownMenu, children, dir, open: openProp, defaultOpen, onOpenChange, modal = true } = props;
    const menuScope = useMenuScope(__scopeDropdownMenu);
    const triggerRef = (0, import_react38.useRef)(null);
    const [open = false, setOpen] = (0, import_react_use_controllable_state5.useControllableState)({
      prop: openProp,
      defaultProp: defaultOpen,
      onChange: onOpenChange
    });
    return /* @__PURE__ */ import_react38.default.createElement(DropdownMenuProvider, {
      scope: __scopeDropdownMenu,
      triggerId: (0, import_react_id2.useId)(),
      triggerRef,
      contentId: (0, import_react_id2.useId)(),
      open,
      onOpenChange: setOpen,
      onOpenToggle: (0, import_react38.useCallback)(() => setOpen((prevOpen) => !prevOpen), [
        setOpen
      ]),
      modal
    }, /* @__PURE__ */ import_react38.default.createElement(MenuPrimitive.Root, {
      ...menuScope,
      open,
      onOpenChange: setOpen,
      dir,
      modal
    }, children));
  } finally {
    _effect.f();
  }
};
DropdownMenuRoot.displayName = DROPDOWN_MENU_NAME;
var TRIGGER_NAME2 = "DropdownMenuTrigger";
var DropdownMenuTrigger = /* @__PURE__ */ (0, import_react38.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking27.useSignals)();
  try {
    const { __scopeDropdownMenu, disabled = false, ...triggerProps } = props;
    const context = useDropdownMenuContext(TRIGGER_NAME2, __scopeDropdownMenu);
    const menuScope = useMenuScope(__scopeDropdownMenu);
    return /* @__PURE__ */ import_react38.default.createElement(MenuPrimitive.Anchor, {
      asChild: true,
      ...menuScope
    }, /* @__PURE__ */ import_react38.default.createElement(import_react_primitive10.Primitive.button, {
      type: "button",
      id: context.triggerId,
      "aria-haspopup": "menu",
      "aria-expanded": context.open,
      "aria-controls": context.open ? context.contentId : void 0,
      "data-state": context.open ? "open" : "closed",
      "data-disabled": disabled ? "" : void 0,
      disabled,
      ...triggerProps,
      ref: (0, import_react_compose_refs2.composeRefs)(forwardedRef, context.triggerRef),
      onPointerDown: (0, import_primitive2.composeEventHandlers)(props.onPointerDown, (event) => {
        if (!disabled && event.button === 0 && event.ctrlKey === false) {
          context.onOpenToggle();
          if (!context.open) {
            event.preventDefault();
          }
        }
      }),
      onKeyDown: (0, import_primitive2.composeEventHandlers)(props.onKeyDown, (event) => {
        if (disabled) {
          return;
        }
        if ([
          "Enter",
          " "
        ].includes(event.key)) {
          context.onOpenToggle();
        }
        if (event.key === "ArrowDown") {
          context.onOpenChange(true);
        }
        if ([
          "Enter",
          " ",
          "ArrowDown"
        ].includes(event.key)) {
          event.preventDefault();
        }
      })
    }));
  } finally {
    _effect.f();
  }
});
DropdownMenuTrigger.displayName = TRIGGER_NAME2;
var VIRTUAL_TRIGGER_NAME = "DropdownMenuVirtualTrigger";
var DropdownMenuVirtualTrigger = (props) => {
  var _effect = (0, import_tracking27.useSignals)();
  try {
    const { __scopeDropdownMenu, virtualRef } = props;
    const context = useDropdownMenuContext(VIRTUAL_TRIGGER_NAME, __scopeDropdownMenu);
    const menuScope = useMenuScope(__scopeDropdownMenu);
    (0, import_react38.useEffect)(() => {
      if (virtualRef.current) {
        context.triggerRef.current = virtualRef.current;
      }
    });
    return /* @__PURE__ */ import_react38.default.createElement(MenuPrimitive.Anchor, {
      ...menuScope,
      virtualRef
    });
  } finally {
    _effect.f();
  }
};
DropdownMenuVirtualTrigger.displayName = VIRTUAL_TRIGGER_NAME;
var PORTAL_NAME2 = "DropdownMenuPortal";
var DropdownMenuPortal = (props) => {
  var _effect = (0, import_tracking27.useSignals)();
  try {
    const { __scopeDropdownMenu, ...portalProps } = props;
    const menuScope = useMenuScope(__scopeDropdownMenu);
    return /* @__PURE__ */ import_react38.default.createElement(MenuPrimitive.Portal, {
      ...menuScope,
      ...portalProps
    });
  } finally {
    _effect.f();
  }
};
DropdownMenuPortal.displayName = PORTAL_NAME2;
var DropdownMenuViewport = /* @__PURE__ */ (0, import_react38.forwardRef)(({ classNames, asChild, children, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking27.useSignals)();
  try {
    const { tx } = useThemeContext();
    const Root7 = asChild ? import_react_slot11.Slot : import_react_primitive10.Primitive.div;
    return /* @__PURE__ */ import_react38.default.createElement(Root7, {
      ...props,
      className: tx("menu.viewport", "menu__viewport", {}, classNames),
      ref: forwardedRef
    }, children);
  } finally {
    _effect.f();
  }
});
var CONTENT_NAME2 = "DropdownMenuContent";
var DropdownMenuContent = /* @__PURE__ */ (0, import_react38.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking27.useSignals)();
  try {
    const { __scopeDropdownMenu, classNames, collisionPadding = 8, ...contentProps } = props;
    const { tx } = useThemeContext();
    const context = useDropdownMenuContext(CONTENT_NAME2, __scopeDropdownMenu);
    const elevation = useElevationContext();
    const menuScope = useMenuScope(__scopeDropdownMenu);
    const hasInteractedOutsideRef = (0, import_react38.useRef)(false);
    const safeCollisionPadding = useSafeCollisionPadding(collisionPadding);
    return /* @__PURE__ */ import_react38.default.createElement(MenuPrimitive.Content, {
      id: context.contentId,
      "aria-labelledby": context.triggerId,
      ...menuScope,
      ...contentProps,
      collisionPadding: safeCollisionPadding,
      ref: forwardedRef,
      onCloseAutoFocus: (0, import_primitive2.composeEventHandlers)(props.onCloseAutoFocus, (event) => {
        if (!hasInteractedOutsideRef.current) {
          context.triggerRef.current?.focus();
        }
        hasInteractedOutsideRef.current = false;
        event.preventDefault();
      }),
      onInteractOutside: (0, import_primitive2.composeEventHandlers)(props.onInteractOutside, (event) => {
        const originalEvent = event.detail.originalEvent;
        const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;
        const isRightClick = originalEvent.button === 2 || ctrlLeftClick;
        if (!context.modal || isRightClick) {
          hasInteractedOutsideRef.current = true;
        }
      }),
      className: tx("menu.content", "menu", {
        elevation
      }, classNames),
      style: {
        ...props.style,
        // re-namespace exposed content custom properties
        ...{
          "--radix-dropdown-menu-content-transform-origin": "var(--radix-popper-transform-origin)",
          "--radix-dropdown-menu-content-available-width": "var(--radix-popper-available-width)",
          "--radix-dropdown-menu-content-available-height": "var(--radix-popper-available-height)",
          "--radix-dropdown-menu-trigger-width": "var(--radix-popper-anchor-width)",
          "--radix-dropdown-menu-trigger-height": "var(--radix-popper-anchor-height)"
        }
      }
    });
  } finally {
    _effect.f();
  }
});
DropdownMenuContent.displayName = CONTENT_NAME2;
var GROUP_NAME = "DropdownMenuGroup";
var DropdownMenuGroup = /* @__PURE__ */ (0, import_react38.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking27.useSignals)();
  try {
    const { __scopeDropdownMenu, ...groupProps } = props;
    const menuScope = useMenuScope(__scopeDropdownMenu);
    return /* @__PURE__ */ import_react38.default.createElement(MenuPrimitive.Group, {
      ...menuScope,
      ...groupProps,
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
DropdownMenuGroup.displayName = GROUP_NAME;
var LABEL_NAME = "DropdownMenuLabel";
var DropdownMenuGroupLabel = /* @__PURE__ */ (0, import_react38.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking27.useSignals)();
  try {
    const { __scopeDropdownMenu, classNames, ...labelProps } = props;
    const menuScope = useMenuScope(__scopeDropdownMenu);
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react38.default.createElement(MenuPrimitive.Label, {
      ...menuScope,
      ...labelProps,
      className: tx("menu.groupLabel", "menu__group__label", {}, classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
DropdownMenuGroupLabel.displayName = LABEL_NAME;
var ITEM_NAME = "DropdownMenuItem";
var DropdownMenuItem = /* @__PURE__ */ (0, import_react38.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking27.useSignals)();
  try {
    const { __scopeDropdownMenu, classNames, ...itemProps } = props;
    const menuScope = useMenuScope(__scopeDropdownMenu);
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react38.default.createElement(MenuPrimitive.Item, {
      ...menuScope,
      ...itemProps,
      className: tx("menu.item", "menu__item", {}, classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
DropdownMenuItem.displayName = ITEM_NAME;
var CHECKBOX_ITEM_NAME = "DropdownMenuCheckboxItem";
var DropdownMenuCheckboxItem = /* @__PURE__ */ (0, import_react38.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking27.useSignals)();
  try {
    const { __scopeDropdownMenu, classNames, ...checkboxItemProps } = props;
    const menuScope = useMenuScope(__scopeDropdownMenu);
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react38.default.createElement(MenuPrimitive.CheckboxItem, {
      ...menuScope,
      ...checkboxItemProps,
      className: tx("menu.item", "menu__item--checkbox", {}, classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
DropdownMenuCheckboxItem.displayName = CHECKBOX_ITEM_NAME;
var RADIO_GROUP_NAME = "DropdownMenuRadioGroup";
var DropdownMenuRadioGroup = /* @__PURE__ */ (0, import_react38.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking27.useSignals)();
  try {
    const { __scopeDropdownMenu, ...radioGroupProps } = props;
    const menuScope = useMenuScope(__scopeDropdownMenu);
    return /* @__PURE__ */ import_react38.default.createElement(MenuPrimitive.RadioGroup, {
      ...menuScope,
      ...radioGroupProps,
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
DropdownMenuRadioGroup.displayName = RADIO_GROUP_NAME;
var RADIO_ITEM_NAME = "DropdownMenuRadioItem";
var DropdownMenuRadioItem = /* @__PURE__ */ (0, import_react38.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking27.useSignals)();
  try {
    const { __scopeDropdownMenu, ...radioItemProps } = props;
    const menuScope = useMenuScope(__scopeDropdownMenu);
    return /* @__PURE__ */ import_react38.default.createElement(MenuPrimitive.RadioItem, {
      ...menuScope,
      ...radioItemProps,
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
DropdownMenuRadioItem.displayName = RADIO_ITEM_NAME;
var INDICATOR_NAME = "DropdownMenuItemIndicator";
var DropdownMenuItemIndicator = /* @__PURE__ */ (0, import_react38.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking27.useSignals)();
  try {
    const { __scopeDropdownMenu, ...itemIndicatorProps } = props;
    const menuScope = useMenuScope(__scopeDropdownMenu);
    return /* @__PURE__ */ import_react38.default.createElement(MenuPrimitive.ItemIndicator, {
      ...menuScope,
      ...itemIndicatorProps,
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
DropdownMenuItemIndicator.displayName = INDICATOR_NAME;
var SEPARATOR_NAME = "DropdownMenuSeparator";
var DropdownMenuSeparator = /* @__PURE__ */ (0, import_react38.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking27.useSignals)();
  try {
    const { __scopeDropdownMenu, classNames, ...separatorProps } = props;
    const menuScope = useMenuScope(__scopeDropdownMenu);
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react38.default.createElement(MenuPrimitive.Separator, {
      ...menuScope,
      ...separatorProps,
      className: tx("menu.separator", "menu__item", {}, classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
DropdownMenuSeparator.displayName = SEPARATOR_NAME;
var ARROW_NAME2 = "DropdownMenuArrow";
var DropdownMenuArrow = /* @__PURE__ */ (0, import_react38.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking27.useSignals)();
  try {
    const { __scopeDropdownMenu, classNames, ...arrowProps } = props;
    const menuScope = useMenuScope(__scopeDropdownMenu);
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react38.default.createElement(MenuPrimitive.Arrow, {
      ...menuScope,
      ...arrowProps,
      className: tx("menu.arrow", "menu__arrow", {}, classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
DropdownMenuArrow.displayName = ARROW_NAME2;
var DropdownMenuSub = (props) => {
  var _effect = (0, import_tracking27.useSignals)();
  try {
    const { __scopeDropdownMenu, children, open: openProp, onOpenChange, defaultOpen } = props;
    const menuScope = useMenuScope(__scopeDropdownMenu);
    const [open = false, setOpen] = (0, import_react_use_controllable_state5.useControllableState)({
      prop: openProp,
      defaultProp: defaultOpen,
      onChange: onOpenChange
    });
    return /* @__PURE__ */ import_react38.default.createElement(MenuPrimitive.Sub, {
      ...menuScope,
      open,
      onOpenChange: setOpen
    }, children);
  } finally {
    _effect.f();
  }
};
var SUB_TRIGGER_NAME = "DropdownMenuSubTrigger";
var DropdownMenuSubTrigger = /* @__PURE__ */ (0, import_react38.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking27.useSignals)();
  try {
    const { __scopeDropdownMenu, ...subTriggerProps } = props;
    const menuScope = useMenuScope(__scopeDropdownMenu);
    return /* @__PURE__ */ import_react38.default.createElement(MenuPrimitive.SubTrigger, {
      ...menuScope,
      ...subTriggerProps,
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
DropdownMenuSubTrigger.displayName = SUB_TRIGGER_NAME;
var SUB_CONTENT_NAME = "DropdownMenuSubContent";
var DropdownMenuSubContent = /* @__PURE__ */ (0, import_react38.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking27.useSignals)();
  try {
    const { __scopeDropdownMenu, ...subContentProps } = props;
    const menuScope = useMenuScope(__scopeDropdownMenu);
    return /* @__PURE__ */ import_react38.default.createElement(MenuPrimitive.SubContent, {
      ...menuScope,
      ...subContentProps,
      ref: forwardedRef,
      style: {
        ...props.style,
        // re-namespace exposed content custom properties
        ...{
          "--radix-dropdown-menu-content-transform-origin": "var(--radix-popper-transform-origin)",
          "--radix-dropdown-menu-content-available-width": "var(--radix-popper-available-width)",
          "--radix-dropdown-menu-content-available-height": "var(--radix-popper-available-height)",
          "--radix-dropdown-menu-trigger-width": "var(--radix-popper-anchor-width)",
          "--radix-dropdown-menu-trigger-height": "var(--radix-popper-anchor-height)"
        }
      }
    });
  } finally {
    _effect.f();
  }
});
DropdownMenuSubContent.displayName = SUB_CONTENT_NAME;
var DropdownMenu = {
  Root: DropdownMenuRoot,
  Trigger: DropdownMenuTrigger,
  VirtualTrigger: DropdownMenuVirtualTrigger,
  Portal: DropdownMenuPortal,
  Content: DropdownMenuContent,
  Viewport: DropdownMenuViewport,
  Group: DropdownMenuGroup,
  GroupLabel: DropdownMenuGroupLabel,
  Item: DropdownMenuItem,
  CheckboxItem: DropdownMenuCheckboxItem,
  RadioGroup: DropdownMenuRadioGroup,
  RadioItem: DropdownMenuRadioItem,
  ItemIndicator: DropdownMenuItemIndicator,
  Separator: DropdownMenuSeparator,
  Arrow: DropdownMenuArrow,
  Sub: DropdownMenuSub,
  SubTrigger: DropdownMenuSubTrigger,
  SubContent: DropdownMenuSubContent
};
var useDropdownMenuMenuScope = useMenuScope;
var messageIcons = {
  success: "ph--check-circle--duotone",
  info: "ph--info--duotone",
  warning: "ph--warning--duotone",
  error: "ph--warning-circle--duotone",
  neutral: "ph--info--duotone"
};
var MESSAGE_NAME = "Message";
var [MessageProvider, useMessageContext] = (0, import_react_context9.createContext)(MESSAGE_NAME);
var MessageRoot = /* @__PURE__ */ (0, import_react39.forwardRef)(({ asChild, valence = "neutral", elevation: propsElevation, classNames, titleId: propsTitleId, descriptionId: propsDescriptionId, children, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking28.useSignals)();
  try {
    const { tx } = useThemeContext();
    const titleId = (0, import_react_hooks5.useId)("message__title", propsTitleId);
    const descriptionId = (0, import_react_hooks5.useId)("message__description", propsDescriptionId);
    const elevation = useElevationContext(propsElevation);
    const Root7 = asChild ? import_react_slot12.Slot : import_react_primitive11.Primitive.div;
    return /* @__PURE__ */ import_react39.default.createElement(MessageProvider, {
      titleId,
      descriptionId,
      valence
    }, /* @__PURE__ */ import_react39.default.createElement(Root7, {
      role: valence === "neutral" ? "paragraph" : "alert",
      ...props,
      className: tx("message.root", "message", {
        valence,
        elevation
      }, classNames),
      "aria-labelledby": titleId,
      "aria-describedby": descriptionId,
      ref: forwardedRef
    }, children));
  } finally {
    _effect.f();
  }
});
MessageRoot.displayName = MESSAGE_NAME;
var MESSAGE_TITLE_NAME = "MessageTitle";
var MessageTitle = /* @__PURE__ */ (0, import_react39.forwardRef)(({ asChild, classNames, children, icon, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking28.useSignals)();
  try {
    const { tx } = useThemeContext();
    const { titleId, valence } = useMessageContext(MESSAGE_TITLE_NAME);
    const Root7 = asChild ? import_react_slot12.Slot : import_react_primitive11.Primitive.h2;
    return /* @__PURE__ */ import_react39.default.createElement(Root7, {
      ...props,
      className: tx("message.title", "message__title", {}, classNames),
      id: titleId,
      ref: forwardedRef
    }, !icon && valence === "neutral" ? null : /* @__PURE__ */ import_react39.default.createElement(Icon, {
      size: 5,
      icon: icon ?? messageIcons[valence],
      classNames: tx("message.icon", "message__icon", {
        valence
      })
    }), /* @__PURE__ */ import_react39.default.createElement("span", null, children));
  } finally {
    _effect.f();
  }
});
MessageTitle.displayName = MESSAGE_TITLE_NAME;
var MESSAGE_BODY_NAME = "MessageContent";
var MessageContent = /* @__PURE__ */ (0, import_react39.forwardRef)(({ asChild, classNames, children, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking28.useSignals)();
  try {
    const { tx } = useThemeContext();
    const { descriptionId } = useMessageContext(MESSAGE_BODY_NAME);
    const Root7 = asChild ? import_react_slot12.Slot : import_react_primitive11.Primitive.p;
    return /* @__PURE__ */ import_react39.default.createElement(Root7, {
      ...props,
      className: tx("message.content", "message__content", {}, classNames),
      id: descriptionId,
      ref: forwardedRef
    }, children);
  } finally {
    _effect.f();
  }
});
MessageContent.displayName = MESSAGE_BODY_NAME;
var Message = {
  Root: MessageRoot,
  Title: MessageTitle,
  Content: MessageContent
};
var Callout = Message;
var POPOVER_NAME = "Popover";
var [createPopoverContext, createPopoverScope] = (0, import_react_context10.createContextScope)(POPOVER_NAME, [
  import_react_popper2.createPopperScope
]);
var usePopperScope2 = (0, import_react_popper2.createPopperScope)();
var [PopoverProvider, usePopoverContext] = createPopoverContext(POPOVER_NAME);
var PopoverRoot = (props) => {
  var _effect = (0, import_tracking29.useSignals)();
  try {
    const { __scopePopover, children, open: openProp, defaultOpen, onOpenChange, modal = false } = props;
    const popperScope = usePopperScope2(__scopePopover);
    const triggerRef = (0, import_react40.useRef)(null);
    const [hasCustomAnchor, setHasCustomAnchor] = (0, import_react40.useState)(false);
    const [open = false, setOpen] = (0, import_react_use_controllable_state6.useControllableState)({
      prop: openProp,
      defaultProp: defaultOpen,
      onChange: onOpenChange
    });
    return /* @__PURE__ */ import_react40.default.createElement(PopperPrimitive2.Root, popperScope, /* @__PURE__ */ import_react40.default.createElement(PopoverProvider, {
      scope: __scopePopover,
      contentId: (0, import_react_id3.useId)(),
      triggerRef,
      open,
      onOpenChange: setOpen,
      onOpenToggle: (0, import_react40.useCallback)(() => setOpen((prevOpen) => !prevOpen), [
        setOpen
      ]),
      hasCustomAnchor,
      onCustomAnchorAdd: (0, import_react40.useCallback)(() => setHasCustomAnchor(true), []),
      onCustomAnchorRemove: (0, import_react40.useCallback)(() => setHasCustomAnchor(false), []),
      modal
    }, children));
  } finally {
    _effect.f();
  }
};
PopoverRoot.displayName = POPOVER_NAME;
var ANCHOR_NAME = "PopoverAnchor";
var PopoverAnchor = /* @__PURE__ */ (0, import_react40.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking29.useSignals)();
  try {
    const { __scopePopover, ...anchorProps } = props;
    const context = usePopoverContext(ANCHOR_NAME, __scopePopover);
    const popperScope = usePopperScope2(__scopePopover);
    const { onCustomAnchorAdd, onCustomAnchorRemove } = context;
    (0, import_react40.useEffect)(() => {
      onCustomAnchorAdd();
      return () => onCustomAnchorRemove();
    }, [
      onCustomAnchorAdd,
      onCustomAnchorRemove
    ]);
    return /* @__PURE__ */ import_react40.default.createElement(PopperPrimitive2.Anchor, {
      ...popperScope,
      ...anchorProps,
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
PopoverAnchor.displayName = ANCHOR_NAME;
var TRIGGER_NAME3 = "PopoverTrigger";
var PopoverTrigger = /* @__PURE__ */ (0, import_react40.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking29.useSignals)();
  try {
    const { __scopePopover, ...triggerProps } = props;
    const context = usePopoverContext(TRIGGER_NAME3, __scopePopover);
    const popperScope = usePopperScope2(__scopePopover);
    const composedTriggerRef = (0, import_react_compose_refs3.useComposedRefs)(forwardedRef, context.triggerRef);
    const trigger = /* @__PURE__ */ import_react40.default.createElement(import_react_primitive12.Primitive.button, {
      type: "button",
      "aria-haspopup": "dialog",
      "aria-expanded": context.open,
      "aria-controls": context.contentId,
      "data-state": getState(context.open),
      ...triggerProps,
      ref: composedTriggerRef,
      onClick: (0, import_primitive3.composeEventHandlers)(props.onClick, context.onOpenToggle)
    });
    return context.hasCustomAnchor ? trigger : /* @__PURE__ */ import_react40.default.createElement(PopperPrimitive2.Anchor, {
      asChild: true,
      ...popperScope
    }, trigger);
  } finally {
    _effect.f();
  }
});
PopoverTrigger.displayName = TRIGGER_NAME3;
var VIRTUAL_TRIGGER_NAME2 = "PopoverVirtualTrigger";
var PopoverVirtualTrigger = (props) => {
  var _effect = (0, import_tracking29.useSignals)();
  try {
    const { __scopePopover, virtualRef } = props;
    const context = usePopoverContext(VIRTUAL_TRIGGER_NAME2, __scopePopover);
    const popperScope = usePopperScope2(__scopePopover);
    (0, import_react40.useEffect)(() => {
      if (virtualRef.current) {
        context.triggerRef.current = virtualRef.current;
      }
    });
    return /* @__PURE__ */ import_react40.default.createElement(PopperPrimitive2.Anchor, {
      ...popperScope,
      virtualRef
    });
  } finally {
    _effect.f();
  }
};
PopoverVirtualTrigger.displayName = VIRTUAL_TRIGGER_NAME2;
var PORTAL_NAME3 = "PopoverPortal";
var [PortalProvider2, usePortalContext2] = createPopoverContext(PORTAL_NAME3, {
  forceMount: void 0
});
var PopoverPortal = (props) => {
  var _effect = (0, import_tracking29.useSignals)();
  try {
    const { __scopePopover, forceMount, children, container } = props;
    const context = usePopoverContext(PORTAL_NAME3, __scopePopover);
    return /* @__PURE__ */ import_react40.default.createElement(PortalProvider2, {
      scope: __scopePopover,
      forceMount
    }, /* @__PURE__ */ import_react40.default.createElement(import_react_presence2.Presence, {
      present: forceMount || context.open
    }, /* @__PURE__ */ import_react40.default.createElement(import_react_portal2.Portal, {
      asChild: true,
      container
    }, children)));
  } finally {
    _effect.f();
  }
};
PopoverPortal.displayName = PORTAL_NAME3;
var CONTENT_NAME3 = "PopoverContent";
var PopoverContent = /* @__PURE__ */ (0, import_react40.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking29.useSignals)();
  try {
    const portalContext = usePortalContext2(CONTENT_NAME3, props.__scopePopover);
    const { forceMount = portalContext.forceMount, ...contentProps } = props;
    const context = usePopoverContext(CONTENT_NAME3, props.__scopePopover);
    return /* @__PURE__ */ import_react40.default.createElement(import_react_presence2.Presence, {
      present: forceMount || context.open
    }, context.modal ? /* @__PURE__ */ import_react40.default.createElement(PopoverContentModal, {
      ...contentProps,
      ref: forwardedRef
    }) : /* @__PURE__ */ import_react40.default.createElement(PopoverContentNonModal, {
      ...contentProps,
      ref: forwardedRef
    }));
  } finally {
    _effect.f();
  }
});
PopoverContent.displayName = CONTENT_NAME3;
var PopoverContentModal = /* @__PURE__ */ (0, import_react40.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking29.useSignals)();
  try {
    const context = usePopoverContext(CONTENT_NAME3, props.__scopePopover);
    const contentRef = (0, import_react40.useRef)(null);
    const composedRefs = (0, import_react_compose_refs3.useComposedRefs)(forwardedRef, contentRef);
    const isRightClickOutsideRef = (0, import_react40.useRef)(false);
    (0, import_react40.useEffect)(() => {
      const content = contentRef.current;
      if (content) {
        return (0, import_aria_hidden.hideOthers)(content);
      }
    }, []);
    return /* @__PURE__ */ import_react40.default.createElement(import_react_remove_scroll.RemoveScroll, {
      as: import_react_slot13.Slot,
      allowPinchZoom: true
    }, /* @__PURE__ */ import_react40.default.createElement(PopoverContentImpl, {
      ...props,
      ref: composedRefs,
      // we make sure we're not trapping once it's been closed
      // (closed !== unmounted when animating out)
      trapFocus: context.open,
      disableOutsidePointerEvents: true,
      onCloseAutoFocus: (0, import_primitive3.composeEventHandlers)(props.onCloseAutoFocus, (event) => {
        event.preventDefault();
        if (!isRightClickOutsideRef.current) {
          context.triggerRef.current?.focus();
        }
      }),
      onPointerDownOutside: (0, import_primitive3.composeEventHandlers)(props.onPointerDownOutside, (event) => {
        const originalEvent = event.detail.originalEvent;
        const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;
        const isRightClick = originalEvent.button === 2 || ctrlLeftClick;
        isRightClickOutsideRef.current = isRightClick;
      }, {
        checkForDefaultPrevented: false
      }),
      // When focus is trapped, a `focusout` event may still happen.
      // We make sure we don't trigger our `onDismiss` in such case.
      onFocusOutside: (0, import_primitive3.composeEventHandlers)(props.onFocusOutside, (event) => event.preventDefault(), {
        checkForDefaultPrevented: false
      })
    }));
  } finally {
    _effect.f();
  }
});
var PopoverContentNonModal = /* @__PURE__ */ (0, import_react40.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking29.useSignals)();
  try {
    const context = usePopoverContext(CONTENT_NAME3, props.__scopePopover);
    const hasInteractedOutsideRef = (0, import_react40.useRef)(false);
    const hasPointerDownOutsideRef = (0, import_react40.useRef)(false);
    return /* @__PURE__ */ import_react40.default.createElement(PopoverContentImpl, {
      ...props,
      ref: forwardedRef,
      trapFocus: false,
      disableOutsidePointerEvents: false,
      onCloseAutoFocus: (event) => {
        props.onCloseAutoFocus?.(event);
        if (!event.defaultPrevented) {
          if (!hasInteractedOutsideRef.current) {
            context.triggerRef.current?.focus();
          }
          event.preventDefault();
        }
        hasInteractedOutsideRef.current = false;
        hasPointerDownOutsideRef.current = false;
      },
      onInteractOutside: (event) => {
        props.onInteractOutside?.(event);
        if (!event.defaultPrevented) {
          hasInteractedOutsideRef.current = true;
          if (event.detail.originalEvent.type === "pointerdown") {
            hasPointerDownOutsideRef.current = true;
          }
        }
        const target = event.target;
        const targetIsTrigger = context.triggerRef.current?.contains(target);
        if (targetIsTrigger) {
          event.preventDefault();
        }
        if (event.detail.originalEvent.type === "focusin" && hasPointerDownOutsideRef.current) {
          event.preventDefault();
        }
      }
    });
  } finally {
    _effect.f();
  }
});
var PopoverContentImpl = /* @__PURE__ */ (0, import_react40.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking29.useSignals)();
  try {
    const { __scopePopover, trapFocus, onOpenAutoFocus, onCloseAutoFocus, disableOutsidePointerEvents, onEscapeKeyDown, onPointerDownOutside, onFocusOutside, onInteractOutside, collisionPadding = 8, classNames, ...contentProps } = props;
    const context = usePopoverContext(CONTENT_NAME3, __scopePopover);
    const popperScope = usePopperScope2(__scopePopover);
    const { tx } = useThemeContext();
    const elevation = useElevationContext();
    const safeCollisionPadding = useSafeCollisionPadding(collisionPadding);
    (0, import_react_focus_guards.useFocusGuards)();
    return /* @__PURE__ */ import_react40.default.createElement(import_react_focus_scope.FocusScope, {
      asChild: true,
      loop: true,
      trapped: trapFocus,
      onMountAutoFocus: onOpenAutoFocus,
      onUnmountAutoFocus: onCloseAutoFocus
    }, /* @__PURE__ */ import_react40.default.createElement(import_react_dismissable_layer2.DismissableLayer, {
      asChild: true,
      disableOutsidePointerEvents,
      onInteractOutside,
      onEscapeKeyDown,
      onPointerDownOutside,
      onFocusOutside,
      onDismiss: () => context.onOpenChange(false)
    }, /* @__PURE__ */ import_react40.default.createElement(PopperPrimitive2.Content, {
      "data-state": getState(context.open),
      role: "dialog",
      id: context.contentId,
      ...popperScope,
      ...contentProps,
      collisionPadding: safeCollisionPadding,
      className: tx("popover.content", "popover", {
        elevation
      }, classNames),
      ref: forwardedRef,
      style: {
        ...contentProps.style,
        // re-namespace exposed content custom properties
        ...{
          "--radix-popover-content-transform-origin": "var(--radix-popper-transform-origin)",
          "--radix-popover-content-available-width": "var(--radix-popper-available-width)",
          "--radix-popover-content-available-height": "var(--radix-popper-available-height)",
          "--radix-popover-trigger-width": "var(--radix-popper-anchor-width)",
          "--radix-popover-trigger-height": "var(--radix-popper-anchor-height)"
        }
      }
    })));
  } finally {
    _effect.f();
  }
});
var CLOSE_NAME = "PopoverClose";
var PopoverClose = /* @__PURE__ */ (0, import_react40.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking29.useSignals)();
  try {
    const { __scopePopover, ...closeProps } = props;
    const context = usePopoverContext(CLOSE_NAME, __scopePopover);
    return /* @__PURE__ */ import_react40.default.createElement(import_react_primitive12.Primitive.button, {
      type: "button",
      ...closeProps,
      ref: forwardedRef,
      onClick: (0, import_primitive3.composeEventHandlers)(props.onClick, () => context.onOpenChange(false))
    });
  } finally {
    _effect.f();
  }
});
PopoverClose.displayName = CLOSE_NAME;
var ARROW_NAME3 = "PopoverArrow";
var PopoverArrow = /* @__PURE__ */ (0, import_react40.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking29.useSignals)();
  try {
    const { __scopePopover, classNames, ...arrowProps } = props;
    const popperScope = usePopperScope2(__scopePopover);
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react40.default.createElement(PopperPrimitive2.Arrow, {
      ...popperScope,
      ...arrowProps,
      className: tx("popover.arrow", "popover__arrow", {}, classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
PopoverArrow.displayName = ARROW_NAME3;
var PopoverViewport = /* @__PURE__ */ (0, import_react40.forwardRef)(({ classNames, asChild, constrainInline = true, constrainBlock = true, children, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking29.useSignals)();
  try {
    const { tx } = useThemeContext();
    const Root7 = asChild ? import_react_slot13.Slot : import_react_primitive12.Primitive.div;
    return /* @__PURE__ */ import_react40.default.createElement(Root7, {
      ...props,
      className: tx("popover.viewport", "popover__viewport", {
        constrainInline,
        constrainBlock
      }, classNames),
      ref: forwardedRef
    }, children);
  } finally {
    _effect.f();
  }
});
var getState = (open) => open ? "open" : "closed";
var Popover = {
  Root: PopoverRoot,
  Anchor: PopoverAnchor,
  Trigger: PopoverTrigger,
  VirtualTrigger: PopoverVirtualTrigger,
  Portal: PopoverPortal,
  Content: PopoverContent,
  Close: PopoverClose,
  Arrow: PopoverArrow,
  Viewport: PopoverViewport
};
var Status = /* @__PURE__ */ (0, import_react41.forwardRef)(({ classNames, children, progress = 0, indeterminate, variant, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking30.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react41.default.createElement("span", {
      role: "status",
      ...props,
      className: tx("status.root", "status", {
        indeterminate,
        variant
      }, classNames),
      ref: forwardedRef
    }, /* @__PURE__ */ import_react41.default.createElement("span", {
      role: "none",
      className: tx("status.bar", "status__bar", {
        indeterminate,
        variant
      }, classNames),
      ...!indeterminate && {
        style: {
          width: `${Math.round(progress * 100)}%`
        }
      }
    }), children);
  } finally {
    _effect.f();
  }
});
var ScrollAreaRoot = /* @__PURE__ */ (0, import_react42.forwardRef)(({ classNames, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking31.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react42.default.createElement(import_react_scroll_area.Root, {
      ...props,
      className: tx("scrollArea.root", "scroll-area", {}, classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var ScrollAreaViewport = /* @__PURE__ */ (0, import_react42.forwardRef)(({ classNames, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking31.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react42.default.createElement(import_react_scroll_area.Viewport, {
      ...props,
      className: tx("scrollArea.viewport", "scroll-area", {}, classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var ScrollAreaScrollbar = /* @__PURE__ */ (0, import_react42.forwardRef)(({ classNames, variant = "fine", ...props }, forwardedRef) => {
  var _effect = (0, import_tracking31.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react42.default.createElement(import_react_scroll_area.Scrollbar, {
      "data-variant": variant,
      ...props,
      className: tx("scrollArea.scrollbar", "scroll-area__scrollbar", {}, classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var ScrollAreaThumb = /* @__PURE__ */ (0, import_react42.forwardRef)(({ classNames, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking31.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react42.default.createElement(import_react_scroll_area.Thumb, {
      ...props,
      className: tx("scrollArea.thumb", "scroll-area__thumb", {}, classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var ScrollAreaCorner = /* @__PURE__ */ (0, import_react42.forwardRef)(({ classNames, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking31.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react42.default.createElement(import_react_scroll_area.Corner, {
      ...props,
      className: tx("scrollArea.corner", "scroll-area__corner", {}, classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var ScrollArea = {
  Root: ScrollAreaRoot,
  Viewport: ScrollAreaViewport,
  Scrollbar: ScrollAreaScrollbar,
  Thumb: ScrollAreaThumb,
  Corner: ScrollAreaCorner
};
var SelectRoot = SelectPrimitive.Root;
var SelectTrigger = SelectPrimitive.Trigger;
var SelectValue = SelectPrimitive.Value;
var SelectIcon = SelectPrimitive.Icon;
var SelectPortal = SelectPrimitive.Portal;
var SelectTriggerButton = /* @__PURE__ */ (0, import_react44.forwardRef)(({ children, placeholder, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking32.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react44.default.createElement(SelectPrimitive.Trigger, {
      asChild: true,
      ref: forwardedRef
    }, /* @__PURE__ */ import_react44.default.createElement(Button, props, /* @__PURE__ */ import_react44.default.createElement(SelectPrimitive.Value, {
      placeholder
    }, children), /* @__PURE__ */ import_react44.default.createElement("span", {
      className: "w-1 flex-1"
    }), /* @__PURE__ */ import_react44.default.createElement(SelectPrimitive.Icon, {
      asChild: true
    }, /* @__PURE__ */ import_react44.default.createElement(import_react43.CaretDown, {
      className: tx("select.triggerIcon", "select__trigger__icon", {}),
      weight: "bold"
    }))));
  } finally {
    _effect.f();
  }
});
var SelectContent = /* @__PURE__ */ (0, import_react44.forwardRef)(({ classNames, children, collisionPadding = 8, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking32.useSignals)();
  try {
    const { tx } = useThemeContext();
    const elevation = useElevationContext();
    const safeCollisionPadding = useSafeCollisionPadding(collisionPadding);
    return /* @__PURE__ */ import_react44.default.createElement(SelectPrimitive.Content, {
      ...props,
      collisionPadding: safeCollisionPadding,
      className: tx("select.content", "select__content", {
        elevation
      }, classNames),
      position: "popper",
      ref: forwardedRef
    }, children);
  } finally {
    _effect.f();
  }
});
var SelectScrollUpButton2 = /* @__PURE__ */ (0, import_react44.forwardRef)(({ classNames, children, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking32.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react44.default.createElement(SelectPrimitive.SelectScrollUpButton, {
      ...props,
      className: tx("select.scrollButton", "select__scroll-button--up", {}, classNames),
      ref: forwardedRef
    }, children ?? /* @__PURE__ */ import_react44.default.createElement(import_react43.CaretUp, {
      weight: "bold"
    }));
  } finally {
    _effect.f();
  }
});
var SelectScrollDownButton2 = /* @__PURE__ */ (0, import_react44.forwardRef)(({ classNames, children, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking32.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react44.default.createElement(SelectPrimitive.SelectScrollDownButton, {
      ...props,
      className: tx("select.scrollButton", "select__scroll-button--down", {}, classNames),
      ref: forwardedRef
    }, children ?? /* @__PURE__ */ import_react44.default.createElement(import_react43.CaretDown, {
      weight: "bold"
    }));
  } finally {
    _effect.f();
  }
});
var SelectViewport2 = /* @__PURE__ */ (0, import_react44.forwardRef)(({ classNames, asChild, children, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking32.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react44.default.createElement(SelectPrimitive.SelectViewport, {
      ...props,
      className: tx("select.viewport", "select__viewport", {}, classNames),
      ref: forwardedRef
    }, children);
  } finally {
    _effect.f();
  }
});
var SelectItem = /* @__PURE__ */ (0, import_react44.forwardRef)(({ classNames, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking32.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react44.default.createElement(SelectPrimitive.Item, {
      ...props,
      className: tx("select.item", "option", {}, classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var SelectItemText = SelectPrimitive.ItemText;
var SelectItemIndicator = /* @__PURE__ */ (0, import_react44.forwardRef)(({ classNames, children, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking32.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react44.default.createElement(SelectPrimitive.ItemIndicator, {
      ...props,
      className: tx("select.itemIndicator", "option__indicator", {}, classNames),
      ref: forwardedRef
    }, children);
  } finally {
    _effect.f();
  }
});
var SelectOption = /* @__PURE__ */ (0, import_react44.forwardRef)(({ children, classNames, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking32.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react44.default.createElement(SelectPrimitive.Item, {
      ...props,
      className: tx("select.item", "option", {}, classNames),
      ref: forwardedRef
    }, /* @__PURE__ */ import_react44.default.createElement(SelectPrimitive.ItemText, null, children), /* @__PURE__ */ import_react44.default.createElement("span", {
      className: "grow w-1"
    }), /* @__PURE__ */ import_react44.default.createElement(Icon, {
      icon: "ph--check--regular"
    }));
  } finally {
    _effect.f();
  }
});
var SelectGroup = SelectPrimitive.Group;
var SelectLabel = SelectPrimitive.Label;
var SelectSeparator = /* @__PURE__ */ (0, import_react44.forwardRef)(({ classNames, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking32.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react44.default.createElement(SelectPrimitive.Separator, {
      ...props,
      className: tx("select.separator", "select__separator", {}, classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var SelectArrow = /* @__PURE__ */ (0, import_react44.forwardRef)(({ classNames, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking32.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react44.default.createElement(SelectPrimitive.Arrow, {
      ...props,
      className: tx("select.arrow", "select__arrow", {}, classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var Select = {
  Root: SelectRoot,
  Trigger: SelectTrigger,
  TriggerButton: SelectTriggerButton,
  Value: SelectValue,
  Icon: SelectIcon,
  Portal: SelectPortal,
  Content: SelectContent,
  ScrollUpButton: SelectScrollUpButton2,
  ScrollDownButton: SelectScrollDownButton2,
  Viewport: SelectViewport2,
  Item: SelectItem,
  ItemText: SelectItemText,
  ItemIndicator: SelectItemIndicator,
  Option: SelectOption,
  Group: SelectGroup,
  Label: SelectLabel,
  Separator: SelectSeparator,
  Arrow: SelectArrow
};
var Separator4 = /* @__PURE__ */ (0, import_react45.forwardRef)(({ classNames, orientation = "horizontal", subdued, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking33.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react45.default.createElement(import_react_separator.Separator, {
      orientation,
      ...props,
      className: tx("separator.root", "separator", {
        orientation,
        subdued
      }, classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var Tag = /* @__PURE__ */ (0, import_react46.forwardRef)(({ asChild, palette = "neutral", classNames, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking34.useSignals)();
  try {
    const { tx } = useThemeContext();
    const Root7 = asChild ? import_react_slot14.Slot : import_react_primitive13.Primitive.span;
    return /* @__PURE__ */ import_react46.default.createElement(Root7, {
      ...props,
      className: tx("tag.root", "dx-tag", {
        palette
      }, classNames),
      "data-hue": palette,
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var ToastProvider = import_react_toast.ToastProvider;
var ToastViewport = /* @__PURE__ */ (0, import_react47.forwardRef)(({ classNames, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking35.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react47.default.createElement(import_react_toast.ToastViewport, {
      className: tx("toast.viewport", "toast-viewport", {}, classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var ToastRoot = /* @__PURE__ */ (0, import_react47.forwardRef)(({ classNames, children, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking35.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react47.default.createElement(import_react_toast.Root, {
      ...props,
      className: tx("toast.root", "toast", {}, classNames),
      ref: forwardedRef
    }, /* @__PURE__ */ import_react47.default.createElement(ElevationProvider, {
      elevation: "toast"
    }, children));
  } finally {
    _effect.f();
  }
});
var ToastBody = /* @__PURE__ */ (0, import_react47.forwardRef)(({ asChild, classNames, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking35.useSignals)();
  try {
    const { tx } = useThemeContext();
    const Root7 = asChild ? import_react_slot15.Slot : import_react_primitive14.Primitive.div;
    return /* @__PURE__ */ import_react47.default.createElement(Root7, {
      ...props,
      className: tx("toast.body", "toast__body", {}, classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var ToastTitle = /* @__PURE__ */ (0, import_react47.forwardRef)(({ asChild, classNames, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking35.useSignals)();
  try {
    const { tx } = useThemeContext();
    const Root7 = asChild ? import_react_slot15.Slot : import_react_toast.ToastTitle;
    return /* @__PURE__ */ import_react47.default.createElement(Root7, {
      ...props,
      className: tx("toast.title", "toast__title", {}, classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var ToastDescription = /* @__PURE__ */ (0, import_react47.forwardRef)(({ asChild, classNames, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking35.useSignals)();
  try {
    const { tx } = useThemeContext();
    const Root7 = asChild ? import_react_slot15.Slot : import_react_toast.ToastDescription;
    return /* @__PURE__ */ import_react47.default.createElement(Root7, {
      ...props,
      className: tx("toast.description", "toast__description", {}, classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var ToastActions = /* @__PURE__ */ (0, import_react47.forwardRef)(({ asChild, classNames, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking35.useSignals)();
  try {
    const { tx } = useThemeContext();
    const Root7 = asChild ? import_react_slot15.Slot : import_react_primitive14.Primitive.div;
    return /* @__PURE__ */ import_react47.default.createElement(Root7, {
      ...props,
      className: tx("toast.actions", "toast__actions", {}, classNames),
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var ToastAction = import_react_toast.ToastAction;
var ToastClose = import_react_toast.ToastClose;
var Toast = {
  Provider: ToastProvider,
  Viewport: ToastViewport,
  Root: ToastRoot,
  Body: ToastBody,
  Title: ToastTitle,
  Description: ToastDescription,
  Actions: ToastActions,
  Action: ToastAction,
  Close: ToastClose
};
var ToolbarRoot = /* @__PURE__ */ (0, import_react48.forwardRef)(({ classNames, children, layoutManaged, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking36.useSignals)();
  try {
    const { tx } = useThemeContext();
    return /* @__PURE__ */ import_react48.default.createElement(ToolbarPrimitive.Root, {
      ...props,
      className: tx("toolbar.root", "toolbar", {
        layoutManaged
      }, classNames),
      ref: forwardedRef
    }, children);
  } finally {
    _effect.f();
  }
});
var ToolbarButton = /* @__PURE__ */ (0, import_react48.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking36.useSignals)();
  try {
    return /* @__PURE__ */ import_react48.default.createElement(ToolbarPrimitive.Button, {
      asChild: true
    }, /* @__PURE__ */ import_react48.default.createElement(Button, {
      ...props,
      ref: forwardedRef
    }));
  } finally {
    _effect.f();
  }
});
var ToolbarIconButton = /* @__PURE__ */ (0, import_react48.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking36.useSignals)();
  try {
    return /* @__PURE__ */ import_react48.default.createElement(ToolbarPrimitive.Button, {
      asChild: true
    }, /* @__PURE__ */ import_react48.default.createElement(IconButton, {
      ...props,
      ref: forwardedRef
    }));
  } finally {
    _effect.f();
  }
});
var ToolbarToggle = /* @__PURE__ */ (0, import_react48.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking36.useSignals)();
  try {
    return /* @__PURE__ */ import_react48.default.createElement(ToolbarPrimitive.Button, {
      asChild: true
    }, /* @__PURE__ */ import_react48.default.createElement(Toggle, {
      ...props,
      ref: forwardedRef
    }));
  } finally {
    _effect.f();
  }
});
var ToolbarLink = /* @__PURE__ */ (0, import_react48.forwardRef)((props, forwardedRef) => {
  var _effect = (0, import_tracking36.useSignals)();
  try {
    return /* @__PURE__ */ import_react48.default.createElement(ToolbarPrimitive.Link, {
      asChild: true
    }, /* @__PURE__ */ import_react48.default.createElement(Link, {
      ...props,
      ref: forwardedRef
    }));
  } finally {
    _effect.f();
  }
});
var ToolbarToggleGroup2 = /* @__PURE__ */ (0, import_react48.forwardRef)(({ classNames, children, elevation, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking36.useSignals)();
  try {
    return /* @__PURE__ */ import_react48.default.createElement(ToolbarPrimitive.ToolbarToggleGroup, {
      ...props,
      asChild: true
    }, /* @__PURE__ */ import_react48.default.createElement(ButtonGroup, {
      classNames,
      children,
      elevation,
      ref: forwardedRef
    }));
  } finally {
    _effect.f();
  }
});
var ToolbarToggleGroupItem = /* @__PURE__ */ (0, import_react48.forwardRef)(({ variant, density, elevation, classNames, children, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking36.useSignals)();
  try {
    return /* @__PURE__ */ import_react48.default.createElement(ToolbarPrimitive.ToolbarToggleItem, {
      ...props,
      asChild: true
    }, /* @__PURE__ */ import_react48.default.createElement(Button, {
      variant,
      density,
      elevation,
      classNames,
      children,
      ref: forwardedRef
    }));
  } finally {
    _effect.f();
  }
});
var ToolbarToggleGroupIconItem = /* @__PURE__ */ (0, import_react48.forwardRef)(({ variant, density, elevation, classNames, icon, label, iconOnly, ...props }, forwardedRef) => {
  var _effect = (0, import_tracking36.useSignals)();
  try {
    return /* @__PURE__ */ import_react48.default.createElement(ToolbarPrimitive.ToolbarToggleItem, {
      ...props,
      asChild: true
    }, /* @__PURE__ */ import_react48.default.createElement(IconButton, {
      variant,
      density,
      elevation,
      classNames,
      icon,
      label,
      iconOnly,
      ref: forwardedRef
    }));
  } finally {
    _effect.f();
  }
});
var ToolbarSeparator = /* @__PURE__ */ (0, import_react48.forwardRef)(({ variant = "line", ...props }, forwardedRef) => {
  var _effect = (0, import_tracking36.useSignals)();
  try {
    return variant === "line" ? /* @__PURE__ */ import_react48.default.createElement(ToolbarPrimitive.Separator, {
      asChild: true
    }, /* @__PURE__ */ import_react48.default.createElement(Separator4, {
      ...props,
      ref: forwardedRef
    })) : /* @__PURE__ */ import_react48.default.createElement(ToolbarPrimitive.Separator, {
      className: "grow",
      ref: forwardedRef
    });
  } finally {
    _effect.f();
  }
});
var Toolbar = {
  Root: ToolbarRoot,
  Button: ToolbarButton,
  IconButton: ToolbarIconButton,
  Link: ToolbarLink,
  Toggle: ToolbarToggle,
  ToggleGroup: ToolbarToggleGroup2,
  ToggleGroupItem: ToolbarToggleGroupItem,
  ToggleGroupIconItem: ToolbarToggleGroupIconItem,
  Separator: ToolbarSeparator
};
var useDensityContext = (propsDensity) => {
  const { density } = (0, import_react.useContext)(DensityContext);
  return propsDensity ?? density;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  AlertDialog,
  AnchoredOverflow,
  Avatar,
  BUTTON_GROUP_NAME,
  Breadcrumb,
  Button,
  ButtonGroup,
  Callout,
  Clipboard,
  ContextMenu,
  DensityContext,
  DensityProvider,
  Dialog,
  DropdownMenu,
  ElevationContext,
  ElevationProvider,
  Icon,
  IconButton,
  Input,
  LIST_ITEM_NAME,
  LIST_NAME,
  Link,
  List,
  ListItem,
  Main,
  Message,
  Popover,
  ScrollArea,
  Select,
  Separator,
  Status,
  Tag,
  ThemeContext,
  ThemeProvider,
  Toast,
  Toggle,
  ToggleGroup,
  ToggleGroupItem,
  Toolbar,
  Tooltip,
  Tree,
  TreeItem,
  Treegrid,
  createDropdownMenuScope,
  createPopoverScope,
  createTooltipScope,
  hasIosKeyboard,
  initialSafeArea,
  isLabel,
  messageIcons,
  toLocalizedString,
  useAvatarContext,
  useButtonGroupContext,
  useClipboard,
  useDensityContext,
  useDropdownMenuContext,
  useDropdownMenuMenuScope,
  useElevationContext,
  useIconHref,
  useLandmarkMover,
  useListContext,
  useListItemContext,
  useMainContext,
  useSafeArea,
  useSidebars,
  useThemeContext,
  useTooltipContext,
  useTranslation,
  useTranslationsContext,
  useVisualViewport
});
//# sourceMappingURL=chunk-3E3QKWX4.cjs.map
