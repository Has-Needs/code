import { createRequire } from 'node:module';const require = createRequire(import.meta.url);
import {
  ThemeProvider
} from "../chunk-EQ7EG74H.mjs";

// packages/ui/react-ui/src/testing/decorators/withTheme.ts
import { useEffect, createElement } from "react";
import { defaultTx } from "@dxos/react-ui-theme";
var withTheme = (Story, context) => {
  const theme = context?.parameters?.theme || context?.globals?.theme;
  useEffect(() => {
    document.documentElement.classList[theme === "dark" ? "add" : "remove"]("dark");
  }, [
    theme
  ]);
  return createElement(ThemeProvider, {
    children: createElement(Story),
    tx: defaultTx
  });
};

// packages/ui/react-ui/src/testing/decorators/withSurfaceVariantsLayout.tsx
import { useSignals as _useSignals } from "@preact-signals/safe-react/tracking";
import React from "react";
import { mx, surfaceShadow } from "@dxos/react-ui-theme";
var Container = ({ children, elevation, surface }) => {
  var _effect = _useSignals();
  try {
    return /* @__PURE__ */ React.createElement("div", {
      className: mx("rounded-md border border-separator", surface, surfaceShadow({
        elevation
      }))
    }, children);
  } finally {
    _effect.f();
  }
};
var Panel = ({ Story, elevations, densities, className }) => {
  var _effect = _useSignals();
  try {
    return /* @__PURE__ */ React.createElement("div", {
      className: mx("flex flex-col h-full p-4 gap-4", className)
    }, elevations?.map(({ elevation, surface }) => densities?.map((density) => /* @__PURE__ */ React.createElement(Container, {
      key: `${elevation}--${density}`,
      surface,
      elevation
    }, /* @__PURE__ */ React.createElement(Story, null)))));
  } finally {
    _effect.f();
  }
};
var withSurfaceVariantsLayout = ({ elevations = [
  {
    elevation: "base",
    surface: "bg-baseSurface"
  },
  {
    elevation: "positioned",
    surface: "bg-cardSurface"
  },
  {
    elevation: "dialog",
    surface: "bg-modalSurface"
  }
], densities = [
  "coarse"
] } = {}) => {
  return (Story) => /* @__PURE__ */ React.createElement("div", {
    className: "fixed inset-0 grid grid-cols-2 overflow-y-auto"
  }, /* @__PURE__ */ React.createElement(Panel, {
    Story,
    className: "light",
    elevations,
    densities
  }), /* @__PURE__ */ React.createElement(Panel, {
    Story,
    className: "dark",
    elevations,
    densities
  }));
};
export {
  withSurfaceVariantsLayout,
  withTheme
};
//# sourceMappingURL=index.mjs.map
