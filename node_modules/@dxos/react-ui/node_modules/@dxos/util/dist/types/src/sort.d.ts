type Compare<T> = (a: T, b: T) => number;
export declare const compareScalar: (inc?: boolean) => (a: any, b: any) => number;
export declare const compareString: (inc?: boolean, caseInsensitive?: boolean) => (a: string, b: string) => number;
export declare const compareObject: <T extends Record<string, any>>(prop: string, sorter: Compare<any>, inc?: boolean) => Compare<any>;
export declare const compareMulti: <T extends Record<string, any>>(sorters: Compare<T>[]) => (a: T, b: T) => number;
export {};
//# sourceMappingURL=sort.d.ts.map