/**
 * A utility for safely performing an asynchronous action on every item from source.
 * @param source elements passed to taskFactory.
 * @param taskFactory a function that converts an elements into an async task.
 * @param onError if provided will be called for every failed task.
 * @returns elements for which task execution failed.
 */
export declare const safeAwaitAll: <T>(source: Array<T> | IterableIterator<T>, taskFactory: (item: T) => Promise<any>, onError?: (error: Error, item: T, idx: number) => void) => Promise<T[]>;
//# sourceMappingURL=safe-await.d.ts.map