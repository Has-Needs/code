import "../chunk-3QS3WKRC.mjs";

// packages/common/node-std/src/fs/promises.js
var notAvailable = () => {
  throw new Error("Not available on this platform");
};
var access = () => notAvailable();
var copyFile = () => notAvailable();
var open = () => notAvailable();
var rename = () => notAvailable();
var truncate = () => notAvailable();
var rmdir = () => notAvailable();
var rm = () => notAvailable();
var mkdir = () => notAvailable();
var readdir = () => notAvailable();
var readlink = () => notAvailable();
var symlink = () => notAvailable();
var lstat = () => notAvailable();
var stat = () => notAvailable();
var link = () => notAvailable();
var unlink = () => notAvailable();
var chmod = () => notAvailable();
var lchmod = () => notAvailable();
var lchown = () => notAvailable();
var lutimes = () => notAvailable();
var chown = () => notAvailable();
var utimes = () => notAvailable();
var to = () => notAvailable();
var realpath = () => notAvailable();
var mkdtemp = () => notAvailable();
var writeFile = () => notAvailable();
var appendFile = () => notAvailable();
var readFile = () => notAvailable();
var opendir = () => notAvailable();
var watch = () => notAvailable();
var cp = () => notAvailable();
export {
  access,
  appendFile,
  chmod,
  chown,
  copyFile,
  cp,
  lchmod,
  lchown,
  link,
  lstat,
  lutimes,
  mkdir,
  mkdtemp,
  open,
  opendir,
  readFile,
  readdir,
  readlink,
  realpath,
  rename,
  rm,
  rmdir,
  stat,
  symlink,
  to,
  truncate,
  unlink,
  utimes,
  watch,
  writeFile
};
//# sourceMappingURL=promises.mjs.map
