"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var chunk_QA5KMUXP_exports = {};
__export(chunk_QA5KMUXP_exports, {
  resolveKnownPeers: () => resolveKnownPeers
});
module.exports = __toCommonJS(chunk_QA5KMUXP_exports);
var import_glob = require("glob");
var import_node_util = require("node:util");
var glob = (0, import_node_util.promisify)(import_glob.glob);
var knownIndirectPeers = [
  "@dxos/gem-*",
  "@dxos/react-*",
  "@dxos/react-ui-*",
  "@dxos/devtools",
  "@dxos/shell",
  // TODO(thure): glob v7 runs out of memory if we do a `**` search, and this is (hopefully) the only L3 content package; find a better solution.
  "@dxos/react-ui-table/node_modules/@dxos/react-ui-searchlist"
];
var knownDirectPeers = [
  "@dxos/plugin-*",
  ...knownIndirectPeers
];
var packageNamePattern = /.*node_modules\/(.+?)$/;
var packageName = (path) => path.match(packageNamePattern)?.[1];
var flatten = (acc, group) => [
  ...acc,
  ...group
];
var dedupe = (acc, path) => {
  const name = packageName(path);
  if (name && !acc[name]) {
    acc[name] = path;
  }
  return acc;
};
var resolveKnownPeers = async (content, cwd) => {
  const globOptions = {
    cwd,
    absolute: true
  };
  const directPeers = await Promise.all(knownDirectPeers.map((peer) => glob(`./node_modules/${peer}`, globOptions)));
  const indirectPeers = await Promise.all(knownIndirectPeers.map((peer) => glob(`./node_modules/@dxos/plugin-*/node_modules/${peer}`, globOptions)));
  const knownPeerContent = Object.values(indirectPeers.reduce(flatten, []).reduce(dedupe, directPeers.reduce(flatten, []).reduce(dedupe, {}))).map((value) => `${value}/dist/lib/**/*.mjs`);
  return [
    ...content,
    ...knownPeerContent
  ];
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  resolveKnownPeers
});
//# sourceMappingURL=chunk-QA5KMUXP.cjs.map
