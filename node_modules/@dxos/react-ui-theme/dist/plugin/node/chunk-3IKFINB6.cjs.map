{
  "version": 3,
  "sources": ["../../../src/config/tailwind.ts", "../../../src/config/tokens/index.ts", "../../../src/config/tokens/physical-colors.ts", "../../../src/config/tokens/sememes-hue.ts", "../../../src/config/tokens/sememes-sheet.ts", "../../../src/config/tokens/sememes-system.ts", "../../../src/config/tokens/alias-colors.ts", "../../../src/config/tokens/lengths.ts", "../../../src/config/tokens/sememes-calls.ts", "../../../src/config/tokens/sememes-codemirror.ts", "../../../src/config/tokens/semantic-colors.ts"],
  "sourcesContent": ["//\n// Copyright 2022 DXOS.org\n//\n\nimport tailwindContainers from '@tailwindcss/container-queries';\nimport tailwindcssForms from '@tailwindcss/forms';\nimport merge from 'lodash.merge';\nimport tailwindScrollbar from 'tailwind-scrollbar';\nimport defaultConfig from 'tailwindcss/stubs/config.full.js';\nimport { type Config, type ThemeConfig } from 'tailwindcss/types/config';\nimport tailwindcssLogical from 'tailwindcss-logical';\nimport tailwindcssRadix from 'tailwindcss-radix';\n\nimport { tokensTailwindConfig } from './tokens';\n\nexport type TailwindConfig = Config;\nexport type TailwindThemeConfig = ThemeConfig;\n\nconst { extend: extendTokens, ...overrideTokens } = tokensTailwindConfig;\n\nexport const tailwindConfig = ({\n  env = 'production',\n  content = [],\n  extensions = [],\n}: {\n  env?: string;\n  content?: string[];\n  extensions?: Partial<TailwindThemeConfig>[];\n}): TailwindConfig => ({\n  darkMode: 'class',\n  theme: {\n    // Configure fonts in theme.css and package.json.\n    fontFamily: {\n      body: ['Inter Variable', ...defaultConfig.theme.fontFamily.sans],\n      mono: ['JetBrains Mono Variable', ...defaultConfig.theme.fontFamily.mono],\n    },\n    extend: merge(\n      {\n        spacing: {\n          prose: 'var(--dx-prose)',\n          containerMaxWidth: 'var(--dx-containerMaxWidth)',\n          popoverMaxWidth: 'var(--dx-popoverMaxWidth)',\n        },\n        borderRadius: {\n          none: '0',\n          sm: '0.25rem',\n          DEFAULT: '0.5rem',\n          md: '.75rem',\n          lg: '1rem',\n        },\n        screens: {\n          'pointer-fine': { raw: '(pointer: fine)' },\n          'hover-hover': { raw: '(hover: hover)' },\n        },\n        fontSize: {\n          // Base size 16px\n          // Scale 1.125\n          xs: ['0.790rem', { lineHeight: '1rem' }],\n          sm: ['0.889rem', { lineHeight: '1.25rem' }],\n          base: ['1rem', { lineHeight: '1.5rem' }],\n          lg: ['1.125rem', { lineHeight: '1.75rem' }],\n          xl: ['1.266rem', { lineHeight: '1.75rem' }],\n          '2xl': ['1.424rem', { lineHeight: '2rem' }],\n          '3xl': ['1.602rem', { lineHeight: '2.25rem' }],\n          '4xl': ['1.802rem', { lineHeight: '2.5rem' }],\n          '5xl': ['2.027rem', { lineHeight: '2.5rem' }],\n          '6xl': ['2.281rem', { lineHeight: '2.5rem' }],\n          '7xl': ['2.566rem', { lineHeight: '2.75rem' }],\n          '8xl': ['2.887rem', { lineHeight: '3rem' }],\n          '9xl': ['3.247rem', { lineHeight: '3.25rem' }],\n        },\n        boxShadow: {\n          slider: '0 0 0 5px rgba(0, 0, 0, 0.3)',\n        },\n        transitionProperty: {\n          'max-height': 'max-height',\n        },\n        transitionTimingFunction: {\n          'in-out-symmetric': 'cubic-bezier(0.5,0,0.5,1)',\n        },\n        keyframes: {\n          // Popper chrome\n          slideDownAndFade: {\n            from: { opacity: 0, transform: 'translateY(-2px)' },\n            to: { opacity: 1, transform: 'translateY(0)' },\n          },\n          slideLeftAndFade: {\n            from: { opacity: 0, transform: 'translateX(2px)' },\n            to: { opacity: 1, transform: 'translateX(0)' },\n          },\n          slideUpAndFade: {\n            from: { opacity: 0, transform: 'translateY(2px)' },\n            to: { opacity: 1, transform: 'translateY(0)' },\n          },\n          slideRightAndFade: {\n            from: { opacity: 0, transform: 'translateX(-2px)' },\n            to: { opacity: 1, transform: 'translateX(0)' },\n          },\n          fadeIn: {\n            from: { opacity: 0 },\n            to: { opacity: 1 },\n          },\n          // Accordion\n          slideDown: {\n            from: { height: '0px' },\n            to: { height: 'var(--radix-accordion-content-height)' },\n          },\n          slideUp: {\n            from: { height: 'var(--radix-accordion-content-height)' },\n            to: { height: '0px' },\n          },\n\n          // Toast\n          'toast-hide': {\n            '0%': { opacity: '1' },\n            '100%': { opacity: '0' },\n          },\n          'toast-slide-in-right': {\n            '0%': { transform: 'translateX(calc(100% + 1rem))' },\n            '100%': { transform: 'translateX(0)' },\n          },\n          'toast-slide-in-bottom': {\n            '0%': { transform: 'translateY(calc(100% + 1rem))' },\n            '100%': { transform: 'translateY(0)' },\n          },\n          'toast-swipe-out': {\n            '0%': {\n              transform: 'translateX(var(--radix-toast-swipe-end-x))',\n            },\n            '100%': {\n              transform: 'translateX(calc(100% + 1rem))',\n            },\n          },\n\n          // Shimmer\n          'shimmer-loop': {\n            '100%': {\n              transform: 'translateX(100%)',\n            },\n          },\n\n          'halo-pulse': {\n            '0%': {\n              opacity: 0.3,\n            },\n            '5%': {\n              opacity: 1,\n            },\n            '100%': {\n              opacity: 0.3,\n            },\n          },\n\n          'progress-indeterminate': {\n            '0%': {\n              left: 0,\n              width: '0%',\n            },\n            '25%': {\n              left: '25%',\n              width: '50%',\n            },\n            '75%': {\n              left: '50%',\n              width: '100%',\n            },\n            '100%': {\n              left: '100%',\n              width: '0%',\n            },\n          },\n\n          'progress-linear': {\n            '0%': {\n              transform: 'translateX(-100%)',\n            },\n            '85%, 100%': {\n              transform: `translateX(${(100 / 28) * 100}%)`,\n            },\n          },\n        },\n        animation: {\n          'fade-in': 'fadeIn 100ms ease-in forwards',\n\n          // Popper chrome\n          slideDownAndFade: 'slideDownAndFade 400ms cubic-bezier(0.16, 1, 0.3, 1)',\n          slideLeftAndFade: 'slideLeftAndFade 400ms cubic-bezier(0.16, 1, 0.3, 1)',\n          slideUpAndFade: 'slideUpAndFade 400ms cubic-bezier(0.16, 1, 0.3, 1)',\n          slideRightAndFade: 'slideRightAndFade 400ms cubic-bezier(0.16, 1, 0.3, 1)',\n\n          // Toast\n          'toast-hide': 'toast-hide 100ms ease-in forwards',\n          'toast-slide-in-right': 'toast-slide-in-right 150ms cubic-bezier(0.16, 1, 0.3, 1)',\n          'toast-slide-in-bottom': 'toast-slide-in-bottom 150ms cubic-bezier(0.16, 1, 0.3, 1)',\n          'toast-swipe-out': 'toast-swipe-out 100ms ease-out forwards',\n\n          // Accordion\n          slideDown: 'slideDown 300ms cubic-bezier(0.87, 0, 0.13, 1)',\n          slideUp: 'slideUp 300ms cubic-bezier(0.87, 0, 0.13, 1)',\n\n          spin: 'spin 1.5s linear infinite',\n          'spin-slow': 'spin 3s linear infinite',\n\n          shimmer: 'shimmer-loop 2s infinite',\n          'halo-pulse': 'halo-pulse 2s ease-out infinite',\n          'progress-indeterminate': 'progress-indeterminate 2s ease-out infinite',\n          'progress-linear': 'progress-linear 2s ease-out infinite',\n        },\n      },\n      extendTokens,\n      ...extensions,\n    ),\n    ...overrideTokens,\n    colors: {\n      ...overrideTokens.colors,\n      inherit: 'inherit',\n      current: 'currentColor',\n      transparent: 'transparent',\n      black: 'black',\n      white: 'white',\n    },\n  },\n  plugins: [\n    tailwindcssLogical,\n    tailwindcssForms,\n    tailwindcssRadix(),\n    tailwindContainers,\n    // https://adoxography.github.io/tailwind-scrollbar/utilities\n    tailwindScrollbar,\n  ],\n  ...(env === 'development' && { mode: 'jit' }),\n  content,\n  future: {\n    hoverOnlyWhenSupported: true,\n  },\n});\n", "//\n// Copyright 2024 DXOS.org\n//\n\nimport { type TailwindAdapterConfig } from '@ch-ui/tailwind-tokens';\nimport adapter from '@ch-ui/tailwind-tokens';\nimport { type TokenSet } from '@ch-ui/tokens';\n\nimport { aliasColors } from './alias-colors';\nimport { lengthsFacet, maxSizesFacet } from './lengths';\nimport { huePalettes, physicalColors } from './physical-colors';\nimport { semanticColors } from './semantic-colors';\nimport { systemAliases, systemSememes } from './sememes-system';\n\nexport const tokenSet = {\n  colors: {\n    physical: physicalColors,\n    semantic: semanticColors,\n    alias: aliasColors,\n  },\n  lengths: lengthsFacet,\n  maxSizes: maxSizesFacet,\n} satisfies TokenSet;\n\nexport const hues = Object.keys(huePalettes);\n\nconst adapterConfig: TailwindAdapterConfig = {\n  colors: {\n    facet: 'colors',\n    disposition: 'overwrite',\n    tokenization: 'recursive',\n  },\n  borderWidth: {\n    facet: 'lengths',\n    disposition: 'extend',\n    tokenization: 'omit-series',\n  },\n  ringWidth: {\n    facet: 'lengths',\n    disposition: 'extend',\n    tokenization: 'omit-series',\n  },\n  ringOffsetWidth: {\n    facet: 'lengths',\n    disposition: 'extend',\n    tokenization: 'omit-series',\n  },\n  outlineWidth: {\n    facet: 'lengths',\n    disposition: 'extend',\n    tokenization: 'omit-series',\n  },\n  spacing: {\n    facet: 'lengths',\n    disposition: 'extend',\n    tokenization: 'keep-series',\n  },\n};\n\nexport const userDefaultTokenSet = {\n  colors: {\n    physical: {\n      definitions: {\n        series: {\n          neutral: physicalColors.definitions!.series!.neutral,\n          primary: physicalColors.definitions!.series!.primary,\n        },\n        accompanyingSeries: physicalColors.definitions!.accompanyingSeries,\n      },\n      conditions: physicalColors.conditions,\n      series: {\n        neutral: physicalColors.series.neutral,\n        primary: physicalColors.series.primary,\n      },\n      namespace: physicalColors.namespace,\n    },\n    semantic: {\n      conditions: semanticColors.conditions,\n      sememes: systemSememes,\n      namespace: semanticColors.namespace,\n    },\n    alias: {\n      conditions: aliasColors.conditions,\n      aliases: systemAliases,\n      namespace: aliasColors.namespace,\n    },\n  },\n} satisfies TokenSet;\n\nexport const tokensTailwindConfig = adapter(tokenSet, adapterConfig);\n", "//\n// Copyright 2024 DXOS.org\n//\n\nimport type { AccompanyingSeries, ColorsPhysicalLayer, Gamut, HelicalArcSeries, PhysicalSeries } from '@ch-ui/tokens';\n\nimport { type PhysicalPalette } from './types';\n\nconst reflectiveRelation = {\n  initial: 1_000,\n  slope: -1_000,\n  method: 'floor',\n} satisfies AccompanyingSeries;\n\nconst gamuts: (Gamut & string)[] = ['srgb', 'p3', 'rec2020'];\n\nconst DEG_RAD = Math.PI / 180;\n\n/**\n * Creates a color palette configuration for a given hue value.\n *\n * @param hue - A number from 0-16 representing different hue angles\n * @returns A PhysicalPalette configuration with:\n * - keyPoint: [lightness, chroma, hue] in LCH color space\n *   - lightness: Fixed at 0.5 (50%)\n *   - chroma: Varies sinusoidally around 0.13 based on hue angle\n *   - hue: Calculated by mapping input 0-16 to 26-386 degrees\n * - Control points and torsion for color interpolation\n */\nconst hueKeyPoint = (hue: number): PhysicalPalette => {\n  const hueDeg = (360 * (hue / 17) + 26) % 360;\n  return {\n    keyPoint: [0.5, 0.13 + 0.024 * Math.sin((hueDeg - 15) * DEG_RAD), hueDeg],\n    lowerCp: 1,\n    upperCp: 1,\n    torsion: 0,\n  };\n};\n\nexport const huePalettes = {\n  red: hueKeyPoint(0),\n  orange: hueKeyPoint(1),\n  amber: hueKeyPoint(2),\n  yellow: hueKeyPoint(3),\n  lime: hueKeyPoint(4),\n  green: hueKeyPoint(5),\n  emerald: hueKeyPoint(6),\n  teal: hueKeyPoint(7),\n  cyan: hueKeyPoint(8),\n  sky: hueKeyPoint(9),\n  blue: hueKeyPoint(10),\n  indigo: hueKeyPoint(11),\n  violet: hueKeyPoint(12),\n  purple: hueKeyPoint(13),\n  fuchsia: hueKeyPoint(14),\n  pink: hueKeyPoint(15),\n  rose: hueKeyPoint(16),\n};\n\n/**\n * The keyPoint represents the LCH value:\n * - Lightness: 0-1, should usually set the keyPoint at or near 0.5\n * - Chroma: min 0, max 0.08–0.5 depending on hue and gamut, theme will clamp final value to within gamut’s range\n * - Hue: 0-360 (~26 “red”, ~141 “green”, ~262 “blue”)\n *\n * NOTE: Rebuild the theme and restart the dev server to see changes.\n *\n * Theme references:\n * https://oklch.com\n * https://colorsublime.github.io\n * https://github.com/microsoft/vscode-docs/blob/main/api/extension-guides/color-theme.md#create-a-new-color-theme\n * https://raw.githubusercontent.com/microsoft/vscode/main/src/vs/workbench/services/themes/common/colorThemeSchema.ts\n * https://tailwindcss.com/docs/colors\n */\nconst systemPalettes = {\n  neutral: {\n    keyPoint: [0.5, 0.001, 260],\n    lowerCp: 0,\n    upperCp: 0,\n    torsion: 0,\n    // Values used directly.\n    // TODO(burdon): Audit.\n    values: [25, 50, 75, 100, 150, 200, 250, 300, 400, 500, 600, 700, 750, 800, 850, 900],\n  } satisfies PhysicalPalette,\n\n  // https://oklch.com/#0.5,0.2,260,100 (#0559d2)\n  primary: {\n    keyPoint: [0.5, 0.2, 260],\n    lowerCp: 0.86,\n    upperCp: 1,\n    torsion: -30,\n    // Values used directly.\n    // TODO(burdon): Audit.\n    values: [100, 150, 200, 350, 400, 450, 500, 750, 800, 850],\n  } satisfies PhysicalPalette,\n};\n\nconst physicalSeries = {\n  ...huePalettes,\n  ...systemPalettes,\n};\n\nexport const physicalColors: ColorsPhysicalLayer = {\n  namespace: 'dx-',\n  definitions: {\n    // @ts-ignore\n    series: physicalSeries,\n    accompanyingSeries: { reflectiveRelation },\n  },\n  conditions: {\n    srgb: [':root, .dark'],\n    p3: ['@media (color-gamut: p3)', ':root, .dark'],\n    rec2020: ['@media (color-gamut: rec2020)', ':root, .dark'],\n  },\n  series: Object.entries(physicalSeries).reduce((acc: ColorsPhysicalLayer['series'], [id]) => {\n    acc[id] = gamuts.reduce((acc: PhysicalSeries<Gamut & string, HelicalArcSeries>, gamut) => {\n      acc[gamut] = {\n        extends: id,\n        physicalValueRelation: { extends: 'reflectiveRelation' },\n      };\n      return acc;\n    }, {});\n    return acc;\n  }, {}),\n};\n", "//\n// Copyright 2024 DXOS.org\n//\n\nimport { huePalettes } from './physical-colors';\nimport { type ColorAliases, type ColorSememes } from './types';\n\nexport const hueSememes: ColorSememes = [...Object.keys(huePalettes), 'neutral', 'primary'].reduce(\n  (acc: ColorSememes, palette) => {\n    acc[`${palette}Cursor`] = {\n      light: [palette, 400],\n      dark: [palette, 300],\n    };\n    acc[`${palette}Text`] = {\n      light: [palette, 550],\n      dark: [palette, 300],\n    };\n    acc[`${palette}Fill`] = {\n      light: [palette, 500],\n      dark: [palette, 500],\n    };\n    acc[`${palette}Surface`] = {\n      light: [palette, 200],\n      dark: [palette, 700],\n    };\n    acc[`${palette}SurfaceText`] = {\n      light: [palette, 700],\n      dark: [palette, 200],\n    };\n    acc[`${palette}Screen`] = {\n      light: [palette, 100],\n      dark: [palette, 800],\n    };\n    return acc;\n  },\n  {},\n);\n\nconst valenceAliasSememeStems = ['Text', 'Surface', 'SurfaceText', 'Fill', 'Cursor'];\nconst valenceMapping = {\n  emerald: ['success'],\n  cyan: ['info'],\n  amber: ['warning'],\n  rose: ['error'],\n  primary: ['current'],\n  fuchsia: ['internal'],\n};\n\nexport const valenceAliases: ColorAliases = valenceAliasSememeStems.reduce((acc: ColorAliases, stem) => {\n  return Object.entries(valenceMapping).reduce((acc: ColorAliases, [hue, valences]) => {\n    acc[`${hue}${stem}`] = { root: valences.map((valence) => `${valence}${stem}`) };\n    return acc;\n  }, acc);\n}, {});\n", "//\n// Copyright 2024 DXOS.org\n//\n\nimport type { ColorAliases, ColorSememes } from './types';\n\nexport const sheetSememes = {\n  // NOTE: background styles for the main content area must have transparency otherwise they will mask the selection.\n  axisSurface: {\n    light: ['neutral', 50],\n    dark: ['neutral', 800],\n  },\n  axisText: {\n    light: ['neutral', 800],\n    dark: ['neutral', 200],\n  },\n  axisSelectedSurface: {\n    light: ['neutral', 100],\n    dark: ['neutral', 900],\n  },\n  axisSelectedText: {\n    light: ['neutral', 100],\n    dark: ['neutral', 900],\n  },\n  gridCell: {\n    // TODO(thure): Why override only dark?\n    light: ['neutral', '50/0'],\n    dark: ['neutral', 850],\n  },\n  gridCellSelected: {\n    // TODO(thure): Can this not just use `attention`?\n    light: ['neutral', 50],\n    dark: ['neutral', 800],\n  },\n  gridOverlay: {\n    light: ['primary', '500/.5'],\n    dark: ['primary', '500/.5'],\n  },\n  gridSelectionOverlay: {\n    light: ['primary', '500/.2'],\n    dark: ['primary', '500/.2'],\n  },\n  gridHighlight: {\n    light: ['emerald', '500/.5'],\n    dark: ['emerald', '500/.5'],\n  },\n  // TODO(burdon): Factor out def (in common with editor).\n  gridCommented: {\n    light: ['green', 200],\n    dark: ['green', 600],\n  },\n  gridCommentedActive: {\n    light: ['green', '200/.5'],\n    dark: ['green', '600/.5'],\n  },\n} satisfies ColorSememes;\n\nexport const sheetAliases = {\n  activeSurface: { root: ['gridLine'] },\n} satisfies ColorAliases;\n", "//\n// Copyright 2024 DXOS.org\n//\n\n// TODO(thure): TS2742\n/* eslint-disable unused-imports/no-unused-imports */\nimport * as _colors from '@ch-ui/colors';\n\nimport { type ColorAliases, type ColorSememes } from './types';\n\n// TODO(burdon): Move to util.\nconst getMapValue = <T>(map: Record<string, T>, key: string, defaultValue: () => T): T => {\n  let value = map[key];\n  if (!value) {\n    value = defaultValue();\n    map[key] = value;\n  }\n  return value;\n};\n\ntype Sememe = ColorSememes[string];\n\nconst applyAlpha = (sememe: Sememe, alpha: number): Sememe => {\n  if (alpha >= 1) {\n    return sememe;\n  } else {\n    return {\n      light: [sememe.light![0], `${sememe.light![1]}/${alpha}`],\n      dark: [sememe.dark![0], `${sememe.dark![1]}/${alpha}`],\n    };\n  }\n};\n\n// Luminosity extrema and key points.\n\n// Both elevation cadences go from darker to lighter from “elevation” 0 to `ELEVATION_SCALE`,\n// whereas both contrast cadences go from highest contrast at 0 to lowest contrast at `CONTRAST_SCALE`.\n\nconst DARK_ELEVATION_MIN = 855;\nconst DARK_ELEVATION_MAX = 731;\n\nconst DARK_CONTRAST_MIN = 750;\nconst DARK_CONTRAST_MAX = 665;\n\nconst LIGHT_ELEVATION_MIN = 0;\nconst LIGHT_ELEVATION_MAX = 0;\n\nconst LIGHT_CONTRAST_MIN = 82;\nconst LIGHT_CONTRAST_MAX = 24;\n\nconst ELEVATION_SCALE = 2;\nconst CONTRAST_SCALE = 3;\n\nconst darkElevationCadence = (depth: number) =>\n  Math.round(\n    DARK_ELEVATION_MAX + (DARK_ELEVATION_MIN - DARK_ELEVATION_MAX) * ((ELEVATION_SCALE - depth) / ELEVATION_SCALE),\n  );\nconst darkContrastCadence = (depth: number) =>\n  Math.round(\n    DARK_CONTRAST_MAX + (DARK_CONTRAST_MIN - DARK_CONTRAST_MAX) * ((ELEVATION_SCALE - depth) / ELEVATION_SCALE),\n  );\n\nconst lightElevationCadence = (depth: number) =>\n  Math.round(\n    LIGHT_ELEVATION_MIN + (LIGHT_ELEVATION_MAX - LIGHT_ELEVATION_MIN) * ((CONTRAST_SCALE - depth) / CONTRAST_SCALE),\n  );\nconst lightContrastCadence = (depth: number) =>\n  Math.round(LIGHT_CONTRAST_MAX + (LIGHT_CONTRAST_MIN - LIGHT_CONTRAST_MAX) * (depth / CONTRAST_SCALE));\n\nconst elevationCadence = (lightDepth: number, darkDepth: number = lightDepth, alpha: number = 1): Sememe =>\n  applyAlpha(\n    {\n      light: ['neutral', lightElevationCadence(lightDepth)],\n      dark: ['neutral', darkElevationCadence(darkDepth)],\n    },\n    alpha,\n  );\n\nconst contrastCadence = (lightDepth: number, darkDepth: number = lightDepth, alpha: number = 1): Sememe =>\n  applyAlpha(\n    {\n      light: ['neutral', lightContrastCadence(lightDepth)],\n      dark: ['neutral', darkContrastCadence(darkDepth)],\n    },\n    alpha,\n  );\n\nexport const systemSememes = {\n  //\n  // Elevation cadence tokens\n  //\n  baseSurface: elevationCadence(0),\n  groupSurface: elevationCadence(1),\n  modalSurface: elevationCadence(2, 1.7),\n\n  //\n  // Contrast cadence tokens\n  //\n\n  textInputSurfaceBase: contrastCadence(0, 0),\n  textInputSurfaceGroup: contrastCadence(0, 0.5),\n  textInputSurfaceModal: contrastCadence(0, 1),\n\n  inputSurfaceBase: contrastCadence(1, 0.5),\n  inputSurfaceGroup: contrastCadence(1, 1),\n  inputSurfaceModal: contrastCadence(1, 1.5),\n\n  hoverSurfaceBase: contrastCadence(2, 1.5),\n  hoverSurfaceGroup: contrastCadence(2, 2),\n  hoverSurfaceModal: contrastCadence(2, 2.5),\n\n  separatorBase: contrastCadence(3, 2),\n  separatorGroup: contrastCadence(3, 2.5),\n  separatorModal: contrastCadence(3, 3),\n\n  subduedSeparator: contrastCadence(3, 1),\n\n  unAccent: {\n    light: ['neutral', 400],\n    dark: ['neutral', 400],\n  },\n  unAccentHover: {\n    light: ['neutral', 450],\n    dark: ['neutral', 450],\n  },\n  hoverOverlay: {\n    light: ['neutral', '450/.1'],\n    dark: ['neutral', '450/.1'],\n  },\n\n  //\n  // Special surfaces.\n  //\n\n  // Screen overlay for modal dialogs.\n  scrimSurface: applyAlpha({ light: ['neutral', LIGHT_CONTRAST_MAX], dark: ['neutral', DARK_ELEVATION_MIN] }, 0.65),\n\n  // High contrast for focused interactive elements. (Technically this is part of the surface cadence, but the contrast cadence is on the opposite side of the elevation cadence as this point.)\n  focusSurface: {\n    light: ['neutral', 0],\n    dark: ['neutral', 1000],\n  },\n\n  // For tooltips only; the highest elevation from the opposite theme\n  inverseSurface: {\n    light: ['neutral', DARK_ELEVATION_MIN],\n    dark: ['neutral', LIGHT_ELEVATION_MIN],\n  },\n\n  //\n  // Accent surfaces\n  //\n\n  accentSurfaceRelated: {\n    light: ['primary', '300/.1'],\n    dark: ['primary', '400/.1'],\n  },\n  accentSurfaceHover: {\n    light: ['primary', 600],\n    dark: ['primary', 475],\n  },\n  accentSurface: {\n    light: ['primary', 500],\n    dark: ['primary', 500],\n  },\n\n  //\n  // Text (text-) and other foregrounds\n  // TODO(thure): Establish contrast-order cadence for text.\n  //\n\n  baseText: {\n    light: ['neutral', 1000],\n    dark: ['neutral', 50],\n  },\n  inverseSurfaceText: {\n    light: ['neutral', 50],\n    dark: ['neutral', 1000],\n  },\n  description: {\n    light: ['neutral', 500],\n    dark: ['neutral', 400],\n  },\n  subdued: {\n    light: ['neutral', 700],\n    dark: ['neutral', 300],\n  },\n  accentText: {\n    light: ['primary', 550],\n    dark: ['primary', 400],\n  },\n  accentTextHover: {\n    light: ['primary', 500],\n    dark: ['primary', 350],\n  },\n  neutralFocusIndicator: {\n    light: ['neutral', 300],\n    dark: ['neutral', 450],\n  },\n  accentFocusIndicator: {\n    light: ['primary', 300],\n    dark: ['primary', 450],\n  },\n  accentSurfaceText: {\n    light: ['neutral', 0],\n    dark: ['neutral', 0],\n  },\n} satisfies ColorSememes;\n\ntype SememeName = keyof typeof systemSememes;\n\n/**\n * Alias map.\n */\nconst aliasDefs: Record<string, Record<string, SememeName>> = {\n  // The background color appearing in overscroll and between planks when Deck is enabled.\n  deckSurface: { root: 'groupSurface' },\n\n  // Secondary aliases\n  textInputSurface: { root: 'textInputSurfaceBase', group: 'textInputSurfaceGroup', modal: 'textInputSurfaceModal' },\n  inputSurface: { root: 'inputSurfaceBase', group: 'inputSurfaceGroup', modal: 'inputSurfaceModal' },\n  hoverSurface: { root: 'hoverSurfaceBase', group: 'hoverSurfaceGroup', modal: 'hoverSurfaceModal' },\n  separator: { root: 'separatorBase', group: 'separatorGroup', modal: 'separatorModal' },\n\n  // Selected items, current items, other surfaces needing special contrast against baseSurface.\n  activeSurface: { root: 'inputSurface' as any /* TODO(thure): strongly type secondary aliases. */ },\n\n  // Main sidebar panel.\n  sidebarSurface: { root: 'groupSurface' },\n\n  // Plank header.\n  headerSurface: { root: 'groupSurface' },\n\n  // Forms, cards, etc.\n  cardSurface: { root: 'groupSurface' },\n\n  // Toolbars, table/sheet headers, etc.\n  toolbarSurface: { root: 'groupSurface' },\n\n  // TODO: rename uses of this token to `focusSurface` and remove this alias.\n  attention: { root: 'focusSurface' },\n\n  // In “master-detail” patterns, the background of the item in the list which is enumerated in the adjacent view.\n  currentRelated: { root: 'accentSurfaceRelated' },\n};\n\nexport const systemAliases: ColorAliases = Object.entries(aliasDefs).reduce((aliases, [alias, values]) => {\n  Object.entries(values).forEach(([key, sememe]) => {\n    const record = getMapValue(aliases, sememe, () => ({}));\n    const list = getMapValue<string[]>(record, key, () => []);\n    list.push(alias);\n  });\n\n  return aliases;\n}, {} as ColorAliases);\n", "//\n// Copyright 2025 DXOS.org\n//\n\nimport { type AliasLayer } from '@ch-ui/tokens';\n\nimport { valenceAliases } from './sememes-hue';\nimport { sheetAliases } from './sememes-sheet';\nimport { systemAliases } from './sememes-system';\n\nconst groupAliases = ['groupSurface', ...(systemAliases.groupSurface?.root ?? [])];\nconst modalAliases = ['modalSurface', ...(systemAliases.modalSurface?.root ?? [])];\n\nexport const aliasColors = {\n  conditions: {\n    root: [':root, .dark'],\n    group: [\n      [\n        '.sidebar-surface, .dark .sidebar-surface',\n        ...groupAliases.map((alias) => `.bg-${alias}, .dark .bg-${alias}`),\n      ].join(', '),\n    ],\n    modal: [\n      [\n        '.modal-surface, .dark .modal-surface',\n        ...modalAliases.map((alias) => `.bg-${alias}, .dark .bg-${alias}`),\n        //\n      ].join(', '),\n    ],\n  },\n  aliases: {\n    // TODO(thure): Aliases should be merged more elegantly, this causes overwrites.\n    ...sheetAliases,\n    ...systemAliases,\n    ...valenceAliases,\n  },\n  namespace: 'dx-',\n} satisfies AliasLayer<string>;\n", "//\n\n// Copyright 2025 DXOS.org\n//\n\nimport { type Facet, type LinearPhysicalLayer } from '@ch-ui/tokens';\n\nexport const lengthsFacet = {\n  physical: {\n    namespace: 'dx-',\n    conditions: { root: [':root'] },\n    series: {\n      line: {\n        root: {\n          unit: 'px',\n          initial: 0,\n          slope: 1,\n        },\n      },\n      lacuna: {\n        root: {\n          unit: 'rem',\n          initial: 0,\n          slope: 0.125,\n        },\n      },\n    },\n  } satisfies LinearPhysicalLayer,\n\n  semantic: {\n    namespace: 'dx-',\n    conditions: { root: [':root'] },\n    sememes: {\n      noLine: { root: ['line', 0] },\n      hairLine: { root: ['line', 1] },\n      thickLine: { root: ['line', 2] },\n      // TODO(burdon): Can/should these be hyphenated?\n      trimXs: { root: ['lacuna', 3] },\n      trimSm: { root: ['lacuna', 6] },\n      trimMd: { root: ['lacuna', 9] },\n      trimLg: { root: ['lacuna', 12] },\n    },\n  },\n\n  alias: {\n    namespace: 'dx-',\n    conditions: {\n      fine: [':root, .density-fine, [data-density=\"fine\"]'],\n      coarse: ['.density-coarse, [data-density=\"coarse\"]'],\n      flush: ['.density-flush, [data-density=\"flush\"]'],\n    },\n    aliases: {\n      noLine: { fine: ['focusOffset'] },\n      hairLine: { fine: ['modalLine', 'landmarkLine', 'positionedLine', 'gridGap'] },\n      thickLine: { fine: ['focusLine'] },\n      trimXs: { fine: ['cardSpacingChrome', 'labelSpacingBlock'] },\n      trimSm: { fine: ['cardSpacingInline', 'cardSpacingBlock', 'inputSpacingBlock'] },\n      trimMd: { coarse: ['cardSpacingInline', 'cardSpacingBlock'] },\n    },\n  },\n} satisfies Facet;\n\nexport const maxSizesFacet = {\n  physical: {\n    namespace: 'dx-',\n    conditions: { root: [':root'] },\n    series: {\n      size: {\n        root: {\n          unit: 'rem',\n          initial: 0,\n          slope: 10,\n        },\n      },\n    },\n  } satisfies LinearPhysicalLayer,\n\n  semantic: {\n    namespace: 'dx-',\n    conditions: { root: [':root'] },\n    sememes: {\n      prose: { root: ['size', 5] },\n      containerMaxWidth: { root: ['size', 5] },\n      popoverMaxWidth: { root: ['size', 2] },\n    },\n  },\n} satisfies Facet;\n", "//\n// Copyright 2024 DXOS.org\n//\n\nimport { type ColorSememes } from './types';\n\n// TODO(burdon): This should be broader than just calls.\nexport const callsSememes: ColorSememes = {\n  callActive: {\n    light: ['green', '500'],\n    dark: ['green', '500'],\n  },\n  callAlert: {\n    light: ['rose', '500'],\n    dark: ['rose', '500'],\n  },\n};\n", "//\n// Copyright 2024 DXOS.org\n//\n\nimport { type ColorSememes } from './types';\n\nexport const codemirrorSememes = {\n  // NOTE: background styles for the main content area must have transparency otherwise they will mask the selection.\n  cmCodeblock: {\n    light: ['neutral', '500/.1'],\n    dark: ['neutral', '500/.1'],\n  },\n  cmActiveLine: {\n    light: ['neutral', '200/.5'],\n    dark: ['neutral', '800/.5'],\n  },\n  cmSeparator: {\n    light: ['primary', 500],\n    dark: ['primary', 500],\n  },\n  cmCursor: {\n    light: ['neutral', 900],\n    dark: ['neutral', 100],\n  },\n  cmSelection: {\n    light: ['primary', '400/.5'],\n    dark: ['primary', '600/.5'],\n  },\n  cmFocusedSelection: {\n    light: ['primary', 400],\n    dark: ['primary', 600],\n  },\n  cmHighlight: {\n    light: ['neutral', 950],\n    dark: ['neutral', 50],\n  },\n  cmHighlightSurface: {\n    light: ['sky', 200],\n    dark: ['cyan', 600],\n  },\n  // TODO(burdon): Factor out def (in common with sheet).\n  cmComment: {\n    light: ['neutral', 950],\n    dark: ['neutral', 50],\n  },\n  cmCommentSurface: {\n    light: ['green', 200],\n    dark: ['green', 600],\n  },\n} satisfies ColorSememes;\n", "//\n// Copyright 2024 DXOS.org\n//\n\nimport type { HelicalArcValue, SemanticLayer } from '@ch-ui/tokens';\n\nimport { callsSememes } from './sememes-calls';\nimport { codemirrorSememes } from './sememes-codemirror';\nimport { hueSememes } from './sememes-hue';\nimport { sheetSememes } from './sememes-sheet';\nimport { systemSememes } from './sememes-system';\n\nexport const semanticColors = {\n  conditions: {\n    light: [':root'],\n    dark: ['.dark'],\n  },\n  sememes: {\n    // Please define each set of sememes in its own file.\n    ...callsSememes,\n    ...codemirrorSememes,\n    ...sheetSememes,\n    ...hueSememes,\n    ...systemSememes,\n  },\n  namespace: 'dx-',\n} satisfies SemanticLayer<string, string, HelicalArcValue>;\n"],
  "mappings": "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",
  "names": ["reflectiveRelation", "initial", "slope", "method", "gamuts", "DEG_RAD", "Math", "PI", "hueKeyPoint", "hue", "hueDeg", "keyPoint", "sin", "lowerCp", "upperCp", "torsion", "huePalettes", "red", "orange", "amber", "yellow", "lime", "green", "emerald", "teal", "cyan", "sky", "blue", "indigo", "violet", "purple", "fuchsia", "pink", "rose", "systemPalettes", "neutral", "values", "primary", "physicalSeries", "physicalColors", "namespace", "definitions", "series", "accompanyingSeries", "conditions", "srgb", "p3", "rec2020", "Object", "entries", "reduce", "acc", "id", "gamut", "extends", "physicalValueRelation", "hueSememes", "keys", "palette", "light", "dark", "valenceAliasSememeStems", "valenceMapping", "valenceAliases", "stem", "valences", "root", "map", "valence", "sheetSememes", "axisSurface", "axisText", "axisSelectedSurface", "axisSelectedText", "gridCell", "gridCellSelected", "gridOverlay", "gridSelectionOverlay", "gridHighlight", "gridCommented", "gridCommentedActive", "sheetAliases", "activeSurface", "getMapValue", "key", "defaultValue", "value", "applyAlpha", "sememe", "alpha", "DARK_ELEVATION_MIN", "DARK_ELEVATION_MAX", "DARK_CONTRAST_MIN", "DARK_CONTRAST_MAX", "LIGHT_ELEVATION_MIN", "LIGHT_ELEVATION_MAX", "LIGHT_CONTRAST_MIN", "LIGHT_CONTRAST_MAX", "ELEVATION_SCALE", "CONTRAST_SCALE", "darkElevationCadence", "depth", "round", "darkContrastCadence", "lightElevationCadence", "lightContrastCadence", "elevationCadence", "lightDepth", "darkDepth", "contrastCadence", "systemSememes", "baseSurface", "groupSurface", "modalSurface", "textInputSurfaceBase", "textInputSurfaceGroup", "textInputSurfaceModal", "inputSurfaceBase", "inputSurfaceGroup", "inputSurfaceModal", "hoverSurfaceBase", "hoverSurfaceGroup", "hoverSurfaceModal", "separatorBase", "separatorGroup", "separatorModal", "subduedSeparator", "unAccent", "unAccentHover", "hoverOverlay", "scrimSurface", "focusSurface", "inverseSurface", "accentSurfaceRelated", "accentSurfaceHover", "accentSurface", "baseText", "inverseSurfaceText", "description", "subdued", "accentText", "accentTextHover", "neutralFocusIndicator", "accentFocusIndicator", "accentSurfaceText", "aliasDefs", "deckSurface", "textInputSurface", "group", "modal", "inputSurface", "hoverSurface", "separator", "sidebarSurface", "headerSurface", "cardSurface", "toolbarSurface", "attention", "currentRelated", "systemAliases", "aliases", "alias", "forEach", "record", "list", "push", "groupAliases", "modalAliases", "aliasColors", "join", "lengthsFacet", "physical", "line", "unit", "lacuna", "semantic", "sememes", "noLine", "hairLine", "thickLine", "trimXs", "trimSm", "trimMd", "trimLg", "fine", "coarse", "flush", "maxSizesFacet", "size", "prose", "containerMaxWidth", "popoverMaxWidth", "callsSememes", "callActive", "callAlert", "codemirrorSememes", "cmCodeblock", "cmActiveLine", "cmSeparator", "cmCursor", "cmSelection", "cmFocusedSelection", "cmHighlight", "cmHighlightSurface", "cmComment", "cmCommentSurface", "semanticColors", "tokenSet", "colors", "lengths", "maxSizes", "hues", "adapterConfig", "facet", "disposition", "tokenization", "borderWidth", "ringWidth", "ringOffsetWidth", "outlineWidth", "spacing", "userDefaultTokenSet", "tokensTailwindConfig", "adapter", "extend", "extendTokens", "overrideTokens", "tailwindConfig", "env", "content", "extensions", "darkMode", "theme", "fontFamily", "body", "defaultConfig", "sans", "mono", "merge", "borderRadius", "none", "sm", "DEFAULT", "md", "lg", "screens", "raw", "fontSize", "xs", "lineHeight", "base", "xl", "boxShadow", "slider", "transitionProperty", "transitionTimingFunction", "keyframes", "slideDownAndFade", "from", "opacity", "transform", "to", "slideLeftAndFade", "slideUpAndFade", "slideRightAndFade", "fadeIn", "slideDown", "height", "slideUp", "left", "width", "animation", "spin", "shimmer", "inherit", "current", "transparent", "black", "white", "plugins", "tailwindcssLogical", "tailwindcssForms", "tailwindcssRadix", "tailwindContainers", "tailwindScrollbar", "mode", "future", "hoverOnlyWhenSupported"]
}
