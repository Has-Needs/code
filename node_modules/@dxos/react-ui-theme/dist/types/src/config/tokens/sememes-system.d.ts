import * as _colors from '@ch-ui/colors';
import { type ColorAliases } from './types';
export declare const systemSememes: {
    baseSurface: Partial<Record<string, [string, _colors.AlphaLuminosity]>>;
    groupSurface: Partial<Record<string, [string, _colors.AlphaLuminosity]>>;
    modalSurface: Partial<Record<string, [string, _colors.AlphaLuminosity]>>;
    textInputSurfaceBase: Partial<Record<string, [string, _colors.AlphaLuminosity]>>;
    textInputSurfaceGroup: Partial<Record<string, [string, _colors.AlphaLuminosity]>>;
    textInputSurfaceModal: Partial<Record<string, [string, _colors.AlphaLuminosity]>>;
    inputSurfaceBase: Partial<Record<string, [string, _colors.AlphaLuminosity]>>;
    inputSurfaceGroup: Partial<Record<string, [string, _colors.AlphaLuminosity]>>;
    inputSurfaceModal: Partial<Record<string, [string, _colors.AlphaLuminosity]>>;
    hoverSurfaceBase: Partial<Record<string, [string, _colors.AlphaLuminosity]>>;
    hoverSurfaceGroup: Partial<Record<string, [string, _colors.AlphaLuminosity]>>;
    hoverSurfaceModal: Partial<Record<string, [string, _colors.AlphaLuminosity]>>;
    separatorBase: Partial<Record<string, [string, _colors.AlphaLuminosity]>>;
    separatorGroup: Partial<Record<string, [string, _colors.AlphaLuminosity]>>;
    separatorModal: Partial<Record<string, [string, _colors.AlphaLuminosity]>>;
    subduedSeparator: Partial<Record<string, [string, _colors.AlphaLuminosity]>>;
    unAccent: {
        light: [string, number];
        dark: [string, number];
    };
    unAccentHover: {
        light: [string, number];
        dark: [string, number];
    };
    hoverOverlay: {
        light: [string, string];
        dark: [string, string];
    };
    scrimSurface: Partial<Record<string, [string, _colors.AlphaLuminosity]>>;
    focusSurface: {
        light: [string, number];
        dark: [string, number];
    };
    inverseSurface: {
        light: [string, number];
        dark: [string, number];
    };
    accentSurfaceRelated: {
        light: [string, string];
        dark: [string, string];
    };
    accentSurfaceHover: {
        light: [string, number];
        dark: [string, number];
    };
    accentSurface: {
        light: [string, number];
        dark: [string, number];
    };
    baseText: {
        light: [string, number];
        dark: [string, number];
    };
    inverseSurfaceText: {
        light: [string, number];
        dark: [string, number];
    };
    description: {
        light: [string, number];
        dark: [string, number];
    };
    subdued: {
        light: [string, number];
        dark: [string, number];
    };
    accentText: {
        light: [string, number];
        dark: [string, number];
    };
    accentTextHover: {
        light: [string, number];
        dark: [string, number];
    };
    neutralFocusIndicator: {
        light: [string, number];
        dark: [string, number];
    };
    accentFocusIndicator: {
        light: [string, number];
        dark: [string, number];
    };
    accentSurfaceText: {
        light: [string, number];
        dark: [string, number];
    };
};
export declare const systemAliases: ColorAliases;
//# sourceMappingURL=sememes-system.d.ts.map