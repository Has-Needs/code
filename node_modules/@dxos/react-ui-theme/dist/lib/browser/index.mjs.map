{
  "version": 3,
  "sources": ["../../../src/config/tokens/index.ts", "../../../src/config/tokens/physical-colors.ts", "../../../src/config/tokens/sememes-hue.ts", "../../../src/config/tokens/sememes-sheet.ts", "../../../src/config/tokens/sememes-system.ts", "../../../src/config/tokens/alias-colors.ts", "../../../src/config/tokens/lengths.ts", "../../../src/config/tokens/sememes-calls.ts", "../../../src/config/tokens/sememes-codemirror.ts", "../../../src/config/tokens/semantic-colors.ts", "../../../src/config/tailwind.ts", "../../../src/styles/fragments/density.ts", "../../../src/styles/fragments/disabled.ts", "../../../src/styles/fragments/dimension.ts", "../../../src/styles/fragments/elevation.ts", "../../../src/styles/fragments/focus.ts", "../../../src/styles/fragments/group.ts", "../../../src/styles/fragments/hover.ts", "../../../src/styles/fragments/layout.ts", "../../../src/styles/fragments/motion.ts", "../../../src/styles/fragments/ornament.ts", "../../../src/styles/fragments/selected.ts", "../../../src/styles/fragments/shimmer.ts", "../../../src/styles/fragments/surface.ts", "../../../src/util/hash.ts", "../../../src/util/mx.ts", "../../../src/util/withLogical.ts", "../../../src/styles/fragments/size.ts", "../../../src/styles/fragments/text.ts", "../../../src/styles/fragments/valence.ts", "../../../src/styles/components/anchored-overflow.ts", "../../../src/styles/components/avatar.ts", "../../../src/styles/components/breadcrumb.ts", "../../../src/styles/components/button.ts", "../../../src/styles/components/dialog.ts", "../../../src/styles/components/icon.ts", "../../../src/styles/components/icon-button.ts", "../../../src/styles/components/input.ts", "../../../src/styles/components/link.ts", "../../../src/styles/components/list.ts", "../../../src/styles/components/main.ts", "../../../src/styles/components/menu.ts", "../../../src/styles/components/message.ts", "../../../src/styles/components/popover.ts", "../../../src/styles/components/scroll-area.ts", "../../../src/styles/components/select.ts", "../../../src/styles/components/separator.ts", "../../../src/styles/components/status.ts", "../../../src/styles/components/tag.ts", "../../../src/styles/components/toast.ts", "../../../src/styles/components/toolbar.ts", "../../../src/styles/components/tooltip.ts", "../../../src/styles/components/treegrid.ts", "../../../src/styles/theme.ts", "../../../src/index.ts"],
  "sourcesContent": ["//\n// Copyright 2024 DXOS.org\n//\n\nimport { type TailwindAdapterConfig } from '@ch-ui/tailwind-tokens';\nimport adapter from '@ch-ui/tailwind-tokens';\nimport { type TokenSet } from '@ch-ui/tokens';\n\nimport { aliasColors } from './alias-colors';\nimport { lengthsFacet, maxSizesFacet } from './lengths';\nimport { huePalettes, physicalColors } from './physical-colors';\nimport { semanticColors } from './semantic-colors';\nimport { systemAliases, systemSememes } from './sememes-system';\n\nexport const tokenSet = {\n  colors: {\n    physical: physicalColors,\n    semantic: semanticColors,\n    alias: aliasColors,\n  },\n  lengths: lengthsFacet,\n  maxSizes: maxSizesFacet,\n} satisfies TokenSet;\n\nexport const hues = Object.keys(huePalettes);\n\nconst adapterConfig: TailwindAdapterConfig = {\n  colors: {\n    facet: 'colors',\n    disposition: 'overwrite',\n    tokenization: 'recursive',\n  },\n  borderWidth: {\n    facet: 'lengths',\n    disposition: 'extend',\n    tokenization: 'omit-series',\n  },\n  ringWidth: {\n    facet: 'lengths',\n    disposition: 'extend',\n    tokenization: 'omit-series',\n  },\n  ringOffsetWidth: {\n    facet: 'lengths',\n    disposition: 'extend',\n    tokenization: 'omit-series',\n  },\n  outlineWidth: {\n    facet: 'lengths',\n    disposition: 'extend',\n    tokenization: 'omit-series',\n  },\n  spacing: {\n    facet: 'lengths',\n    disposition: 'extend',\n    tokenization: 'keep-series',\n  },\n};\n\nexport const userDefaultTokenSet = {\n  colors: {\n    physical: {\n      definitions: {\n        series: {\n          neutral: physicalColors.definitions!.series!.neutral,\n          primary: physicalColors.definitions!.series!.primary,\n        },\n        accompanyingSeries: physicalColors.definitions!.accompanyingSeries,\n      },\n      conditions: physicalColors.conditions,\n      series: {\n        neutral: physicalColors.series.neutral,\n        primary: physicalColors.series.primary,\n      },\n      namespace: physicalColors.namespace,\n    },\n    semantic: {\n      conditions: semanticColors.conditions,\n      sememes: systemSememes,\n      namespace: semanticColors.namespace,\n    },\n    alias: {\n      conditions: aliasColors.conditions,\n      aliases: systemAliases,\n      namespace: aliasColors.namespace,\n    },\n  },\n} satisfies TokenSet;\n\nexport const tokensTailwindConfig = adapter(tokenSet, adapterConfig);\n", "//\n// Copyright 2024 DXOS.org\n//\n\nimport type { AccompanyingSeries, ColorsPhysicalLayer, Gamut, HelicalArcSeries, PhysicalSeries } from '@ch-ui/tokens';\n\nimport { type PhysicalPalette } from './types';\n\nconst reflectiveRelation = {\n  initial: 1_000,\n  slope: -1_000,\n  method: 'floor',\n} satisfies AccompanyingSeries;\n\nconst gamuts: (Gamut & string)[] = ['srgb', 'p3', 'rec2020'];\n\nconst DEG_RAD = Math.PI / 180;\n\n/**\n * Creates a color palette configuration for a given hue value.\n *\n * @param hue - A number from 0-16 representing different hue angles\n * @returns A PhysicalPalette configuration with:\n * - keyPoint: [lightness, chroma, hue] in LCH color space\n *   - lightness: Fixed at 0.5 (50%)\n *   - chroma: Varies sinusoidally around 0.13 based on hue angle\n *   - hue: Calculated by mapping input 0-16 to 26-386 degrees\n * - Control points and torsion for color interpolation\n */\nconst hueKeyPoint = (hue: number): PhysicalPalette => {\n  const hueDeg = (360 * (hue / 17) + 26) % 360;\n  return {\n    keyPoint: [0.5, 0.13 + 0.024 * Math.sin((hueDeg - 15) * DEG_RAD), hueDeg],\n    lowerCp: 1,\n    upperCp: 1,\n    torsion: 0,\n  };\n};\n\nexport const huePalettes = {\n  red: hueKeyPoint(0),\n  orange: hueKeyPoint(1),\n  amber: hueKeyPoint(2),\n  yellow: hueKeyPoint(3),\n  lime: hueKeyPoint(4),\n  green: hueKeyPoint(5),\n  emerald: hueKeyPoint(6),\n  teal: hueKeyPoint(7),\n  cyan: hueKeyPoint(8),\n  sky: hueKeyPoint(9),\n  blue: hueKeyPoint(10),\n  indigo: hueKeyPoint(11),\n  violet: hueKeyPoint(12),\n  purple: hueKeyPoint(13),\n  fuchsia: hueKeyPoint(14),\n  pink: hueKeyPoint(15),\n  rose: hueKeyPoint(16),\n};\n\n/**\n * The keyPoint represents the LCH value:\n * - Lightness: 0-1, should usually set the keyPoint at or near 0.5\n * - Chroma: min 0, max 0.08–0.5 depending on hue and gamut, theme will clamp final value to within gamut’s range\n * - Hue: 0-360 (~26 “red”, ~141 “green”, ~262 “blue”)\n *\n * NOTE: Rebuild the theme and restart the dev server to see changes.\n *\n * Theme references:\n * https://oklch.com\n * https://colorsublime.github.io\n * https://github.com/microsoft/vscode-docs/blob/main/api/extension-guides/color-theme.md#create-a-new-color-theme\n * https://raw.githubusercontent.com/microsoft/vscode/main/src/vs/workbench/services/themes/common/colorThemeSchema.ts\n * https://tailwindcss.com/docs/colors\n */\nconst systemPalettes = {\n  neutral: {\n    keyPoint: [0.5, 0.001, 260],\n    lowerCp: 0,\n    upperCp: 0,\n    torsion: 0,\n    // Values used directly.\n    // TODO(burdon): Audit.\n    values: [25, 50, 75, 100, 150, 200, 250, 300, 400, 500, 600, 700, 750, 800, 850, 900],\n  } satisfies PhysicalPalette,\n\n  // https://oklch.com/#0.5,0.2,260,100 (#0559d2)\n  primary: {\n    keyPoint: [0.5, 0.2, 260],\n    lowerCp: 0.86,\n    upperCp: 1,\n    torsion: -30,\n    // Values used directly.\n    // TODO(burdon): Audit.\n    values: [100, 150, 200, 350, 400, 450, 500, 750, 800, 850],\n  } satisfies PhysicalPalette,\n};\n\nconst physicalSeries = {\n  ...huePalettes,\n  ...systemPalettes,\n};\n\nexport const physicalColors: ColorsPhysicalLayer = {\n  namespace: 'dx-',\n  definitions: {\n    // @ts-ignore\n    series: physicalSeries,\n    accompanyingSeries: { reflectiveRelation },\n  },\n  conditions: {\n    srgb: [':root, .dark'],\n    p3: ['@media (color-gamut: p3)', ':root, .dark'],\n    rec2020: ['@media (color-gamut: rec2020)', ':root, .dark'],\n  },\n  series: Object.entries(physicalSeries).reduce((acc: ColorsPhysicalLayer['series'], [id]) => {\n    acc[id] = gamuts.reduce((acc: PhysicalSeries<Gamut & string, HelicalArcSeries>, gamut) => {\n      acc[gamut] = {\n        extends: id,\n        physicalValueRelation: { extends: 'reflectiveRelation' },\n      };\n      return acc;\n    }, {});\n    return acc;\n  }, {}),\n};\n", "//\n// Copyright 2024 DXOS.org\n//\n\nimport { huePalettes } from './physical-colors';\nimport { type ColorAliases, type ColorSememes } from './types';\n\nexport const hueSememes: ColorSememes = [...Object.keys(huePalettes), 'neutral', 'primary'].reduce(\n  (acc: ColorSememes, palette) => {\n    acc[`${palette}Cursor`] = {\n      light: [palette, 400],\n      dark: [palette, 300],\n    };\n    acc[`${palette}Text`] = {\n      light: [palette, 550],\n      dark: [palette, 300],\n    };\n    acc[`${palette}Fill`] = {\n      light: [palette, 500],\n      dark: [palette, 500],\n    };\n    acc[`${palette}Surface`] = {\n      light: [palette, 200],\n      dark: [palette, 700],\n    };\n    acc[`${palette}SurfaceText`] = {\n      light: [palette, 700],\n      dark: [palette, 200],\n    };\n    acc[`${palette}Screen`] = {\n      light: [palette, 100],\n      dark: [palette, 800],\n    };\n    return acc;\n  },\n  {},\n);\n\nconst valenceAliasSememeStems = ['Text', 'Surface', 'SurfaceText', 'Fill', 'Cursor'];\nconst valenceMapping = {\n  emerald: ['success'],\n  cyan: ['info'],\n  amber: ['warning'],\n  rose: ['error'],\n  primary: ['current'],\n  fuchsia: ['internal'],\n};\n\nexport const valenceAliases: ColorAliases = valenceAliasSememeStems.reduce((acc: ColorAliases, stem) => {\n  return Object.entries(valenceMapping).reduce((acc: ColorAliases, [hue, valences]) => {\n    acc[`${hue}${stem}`] = { root: valences.map((valence) => `${valence}${stem}`) };\n    return acc;\n  }, acc);\n}, {});\n", "//\n// Copyright 2024 DXOS.org\n//\n\nimport type { ColorAliases, ColorSememes } from './types';\n\nexport const sheetSememes = {\n  // NOTE: background styles for the main content area must have transparency otherwise they will mask the selection.\n  axisSurface: {\n    light: ['neutral', 50],\n    dark: ['neutral', 800],\n  },\n  axisText: {\n    light: ['neutral', 800],\n    dark: ['neutral', 200],\n  },\n  axisSelectedSurface: {\n    light: ['neutral', 100],\n    dark: ['neutral', 900],\n  },\n  axisSelectedText: {\n    light: ['neutral', 100],\n    dark: ['neutral', 900],\n  },\n  gridCell: {\n    // TODO(thure): Why override only dark?\n    light: ['neutral', '50/0'],\n    dark: ['neutral', 850],\n  },\n  gridCellSelected: {\n    // TODO(thure): Can this not just use `attention`?\n    light: ['neutral', 50],\n    dark: ['neutral', 800],\n  },\n  gridOverlay: {\n    light: ['primary', '500/.5'],\n    dark: ['primary', '500/.5'],\n  },\n  gridSelectionOverlay: {\n    light: ['primary', '500/.2'],\n    dark: ['primary', '500/.2'],\n  },\n  gridHighlight: {\n    light: ['emerald', '500/.5'],\n    dark: ['emerald', '500/.5'],\n  },\n  // TODO(burdon): Factor out def (in common with editor).\n  gridCommented: {\n    light: ['green', 200],\n    dark: ['green', 600],\n  },\n  gridCommentedActive: {\n    light: ['green', '200/.5'],\n    dark: ['green', '600/.5'],\n  },\n} satisfies ColorSememes;\n\nexport const sheetAliases = {\n  activeSurface: { root: ['gridLine'] },\n} satisfies ColorAliases;\n", "//\n// Copyright 2024 DXOS.org\n//\n\n// TODO(thure): TS2742\n/* eslint-disable unused-imports/no-unused-imports */\nimport * as _colors from '@ch-ui/colors';\n\nimport { type ColorAliases, type ColorSememes } from './types';\n\n// TODO(burdon): Move to util.\nconst getMapValue = <T>(map: Record<string, T>, key: string, defaultValue: () => T): T => {\n  let value = map[key];\n  if (!value) {\n    value = defaultValue();\n    map[key] = value;\n  }\n  return value;\n};\n\ntype Sememe = ColorSememes[string];\n\nconst applyAlpha = (sememe: Sememe, alpha: number): Sememe => {\n  if (alpha >= 1) {\n    return sememe;\n  } else {\n    return {\n      light: [sememe.light![0], `${sememe.light![1]}/${alpha}`],\n      dark: [sememe.dark![0], `${sememe.dark![1]}/${alpha}`],\n    };\n  }\n};\n\n// Luminosity extrema and key points.\n\n// Both elevation cadences go from darker to lighter from “elevation” 0 to `ELEVATION_SCALE`,\n// whereas both contrast cadences go from highest contrast at 0 to lowest contrast at `CONTRAST_SCALE`.\n\nconst DARK_ELEVATION_MIN = 855;\nconst DARK_ELEVATION_MAX = 731;\n\nconst DARK_CONTRAST_MIN = 750;\nconst DARK_CONTRAST_MAX = 665;\n\nconst LIGHT_ELEVATION_MIN = 0;\nconst LIGHT_ELEVATION_MAX = 0;\n\nconst LIGHT_CONTRAST_MIN = 82;\nconst LIGHT_CONTRAST_MAX = 24;\n\nconst ELEVATION_SCALE = 2;\nconst CONTRAST_SCALE = 3;\n\nconst darkElevationCadence = (depth: number) =>\n  Math.round(\n    DARK_ELEVATION_MAX + (DARK_ELEVATION_MIN - DARK_ELEVATION_MAX) * ((ELEVATION_SCALE - depth) / ELEVATION_SCALE),\n  );\nconst darkContrastCadence = (depth: number) =>\n  Math.round(\n    DARK_CONTRAST_MAX + (DARK_CONTRAST_MIN - DARK_CONTRAST_MAX) * ((ELEVATION_SCALE - depth) / ELEVATION_SCALE),\n  );\n\nconst lightElevationCadence = (depth: number) =>\n  Math.round(\n    LIGHT_ELEVATION_MIN + (LIGHT_ELEVATION_MAX - LIGHT_ELEVATION_MIN) * ((CONTRAST_SCALE - depth) / CONTRAST_SCALE),\n  );\nconst lightContrastCadence = (depth: number) =>\n  Math.round(LIGHT_CONTRAST_MAX + (LIGHT_CONTRAST_MIN - LIGHT_CONTRAST_MAX) * (depth / CONTRAST_SCALE));\n\nconst elevationCadence = (lightDepth: number, darkDepth: number = lightDepth, alpha: number = 1): Sememe =>\n  applyAlpha(\n    {\n      light: ['neutral', lightElevationCadence(lightDepth)],\n      dark: ['neutral', darkElevationCadence(darkDepth)],\n    },\n    alpha,\n  );\n\nconst contrastCadence = (lightDepth: number, darkDepth: number = lightDepth, alpha: number = 1): Sememe =>\n  applyAlpha(\n    {\n      light: ['neutral', lightContrastCadence(lightDepth)],\n      dark: ['neutral', darkContrastCadence(darkDepth)],\n    },\n    alpha,\n  );\n\nexport const systemSememes = {\n  //\n  // Elevation cadence tokens\n  //\n  baseSurface: elevationCadence(0),\n  groupSurface: elevationCadence(1),\n  modalSurface: elevationCadence(2, 1.7),\n\n  //\n  // Contrast cadence tokens\n  //\n\n  textInputSurfaceBase: contrastCadence(0, 0),\n  textInputSurfaceGroup: contrastCadence(0, 0.5),\n  textInputSurfaceModal: contrastCadence(0, 1),\n\n  inputSurfaceBase: contrastCadence(1, 0.5),\n  inputSurfaceGroup: contrastCadence(1, 1),\n  inputSurfaceModal: contrastCadence(1, 1.5),\n\n  hoverSurfaceBase: contrastCadence(2, 1.5),\n  hoverSurfaceGroup: contrastCadence(2, 2),\n  hoverSurfaceModal: contrastCadence(2, 2.5),\n\n  separatorBase: contrastCadence(3, 2),\n  separatorGroup: contrastCadence(3, 2.5),\n  separatorModal: contrastCadence(3, 3),\n\n  subduedSeparator: contrastCadence(3, 1),\n\n  unAccent: {\n    light: ['neutral', 400],\n    dark: ['neutral', 400],\n  },\n  unAccentHover: {\n    light: ['neutral', 450],\n    dark: ['neutral', 450],\n  },\n  hoverOverlay: {\n    light: ['neutral', '450/.1'],\n    dark: ['neutral', '450/.1'],\n  },\n\n  //\n  // Special surfaces.\n  //\n\n  // Screen overlay for modal dialogs.\n  scrimSurface: applyAlpha({ light: ['neutral', LIGHT_CONTRAST_MAX], dark: ['neutral', DARK_ELEVATION_MIN] }, 0.65),\n\n  // High contrast for focused interactive elements. (Technically this is part of the surface cadence, but the contrast cadence is on the opposite side of the elevation cadence as this point.)\n  focusSurface: {\n    light: ['neutral', 0],\n    dark: ['neutral', 1000],\n  },\n\n  // For tooltips only; the highest elevation from the opposite theme\n  inverseSurface: {\n    light: ['neutral', DARK_ELEVATION_MIN],\n    dark: ['neutral', LIGHT_ELEVATION_MIN],\n  },\n\n  //\n  // Accent surfaces\n  //\n\n  accentSurfaceRelated: {\n    light: ['primary', '300/.1'],\n    dark: ['primary', '400/.1'],\n  },\n  accentSurfaceHover: {\n    light: ['primary', 600],\n    dark: ['primary', 475],\n  },\n  accentSurface: {\n    light: ['primary', 500],\n    dark: ['primary', 500],\n  },\n\n  //\n  // Text (text-) and other foregrounds\n  // TODO(thure): Establish contrast-order cadence for text.\n  //\n\n  baseText: {\n    light: ['neutral', 1000],\n    dark: ['neutral', 50],\n  },\n  inverseSurfaceText: {\n    light: ['neutral', 50],\n    dark: ['neutral', 1000],\n  },\n  description: {\n    light: ['neutral', 500],\n    dark: ['neutral', 400],\n  },\n  subdued: {\n    light: ['neutral', 700],\n    dark: ['neutral', 300],\n  },\n  accentText: {\n    light: ['primary', 550],\n    dark: ['primary', 400],\n  },\n  accentTextHover: {\n    light: ['primary', 500],\n    dark: ['primary', 350],\n  },\n  neutralFocusIndicator: {\n    light: ['neutral', 300],\n    dark: ['neutral', 450],\n  },\n  accentFocusIndicator: {\n    light: ['primary', 300],\n    dark: ['primary', 450],\n  },\n  accentSurfaceText: {\n    light: ['neutral', 0],\n    dark: ['neutral', 0],\n  },\n} satisfies ColorSememes;\n\ntype SememeName = keyof typeof systemSememes;\n\n/**\n * Alias map.\n */\nconst aliasDefs: Record<string, Record<string, SememeName>> = {\n  // The background color appearing in overscroll and between planks when Deck is enabled.\n  deckSurface: { root: 'groupSurface' },\n\n  // Secondary aliases\n  textInputSurface: { root: 'textInputSurfaceBase', group: 'textInputSurfaceGroup', modal: 'textInputSurfaceModal' },\n  inputSurface: { root: 'inputSurfaceBase', group: 'inputSurfaceGroup', modal: 'inputSurfaceModal' },\n  hoverSurface: { root: 'hoverSurfaceBase', group: 'hoverSurfaceGroup', modal: 'hoverSurfaceModal' },\n  separator: { root: 'separatorBase', group: 'separatorGroup', modal: 'separatorModal' },\n\n  // Selected items, current items, other surfaces needing special contrast against baseSurface.\n  activeSurface: { root: 'inputSurface' as any /* TODO(thure): strongly type secondary aliases. */ },\n\n  // Main sidebar panel.\n  sidebarSurface: { root: 'groupSurface' },\n\n  // Plank header.\n  headerSurface: { root: 'groupSurface' },\n\n  // Forms, cards, etc.\n  cardSurface: { root: 'groupSurface' },\n\n  // Toolbars, table/sheet headers, etc.\n  toolbarSurface: { root: 'groupSurface' },\n\n  // TODO: rename uses of this token to `focusSurface` and remove this alias.\n  attention: { root: 'focusSurface' },\n\n  // In “master-detail” patterns, the background of the item in the list which is enumerated in the adjacent view.\n  currentRelated: { root: 'accentSurfaceRelated' },\n};\n\nexport const systemAliases: ColorAliases = Object.entries(aliasDefs).reduce((aliases, [alias, values]) => {\n  Object.entries(values).forEach(([key, sememe]) => {\n    const record = getMapValue(aliases, sememe, () => ({}));\n    const list = getMapValue<string[]>(record, key, () => []);\n    list.push(alias);\n  });\n\n  return aliases;\n}, {} as ColorAliases);\n", "//\n// Copyright 2025 DXOS.org\n//\n\nimport { type AliasLayer } from '@ch-ui/tokens';\n\nimport { valenceAliases } from './sememes-hue';\nimport { sheetAliases } from './sememes-sheet';\nimport { systemAliases } from './sememes-system';\n\nconst groupAliases = ['groupSurface', ...(systemAliases.groupSurface?.root ?? [])];\nconst modalAliases = ['modalSurface', ...(systemAliases.modalSurface?.root ?? [])];\n\nexport const aliasColors = {\n  conditions: {\n    root: [':root, .dark'],\n    group: [\n      [\n        '.sidebar-surface, .dark .sidebar-surface',\n        ...groupAliases.map((alias) => `.bg-${alias}, .dark .bg-${alias}`),\n      ].join(', '),\n    ],\n    modal: [\n      [\n        '.modal-surface, .dark .modal-surface',\n        ...modalAliases.map((alias) => `.bg-${alias}, .dark .bg-${alias}`),\n        //\n      ].join(', '),\n    ],\n  },\n  aliases: {\n    // TODO(thure): Aliases should be merged more elegantly, this causes overwrites.\n    ...sheetAliases,\n    ...systemAliases,\n    ...valenceAliases,\n  },\n  namespace: 'dx-',\n} satisfies AliasLayer<string>;\n", "//\n\n// Copyright 2025 DXOS.org\n//\n\nimport { type Facet, type LinearPhysicalLayer } from '@ch-ui/tokens';\n\nexport const lengthsFacet = {\n  physical: {\n    namespace: 'dx-',\n    conditions: { root: [':root'] },\n    series: {\n      line: {\n        root: {\n          unit: 'px',\n          initial: 0,\n          slope: 1,\n        },\n      },\n      lacuna: {\n        root: {\n          unit: 'rem',\n          initial: 0,\n          slope: 0.125,\n        },\n      },\n    },\n  } satisfies LinearPhysicalLayer,\n\n  semantic: {\n    namespace: 'dx-',\n    conditions: { root: [':root'] },\n    sememes: {\n      noLine: { root: ['line', 0] },\n      hairLine: { root: ['line', 1] },\n      thickLine: { root: ['line', 2] },\n      // TODO(burdon): Can/should these be hyphenated?\n      trimXs: { root: ['lacuna', 3] },\n      trimSm: { root: ['lacuna', 6] },\n      trimMd: { root: ['lacuna', 9] },\n      trimLg: { root: ['lacuna', 12] },\n    },\n  },\n\n  alias: {\n    namespace: 'dx-',\n    conditions: {\n      fine: [':root, .density-fine, [data-density=\"fine\"]'],\n      coarse: ['.density-coarse, [data-density=\"coarse\"]'],\n      flush: ['.density-flush, [data-density=\"flush\"]'],\n    },\n    aliases: {\n      noLine: { fine: ['focusOffset'] },\n      hairLine: { fine: ['modalLine', 'landmarkLine', 'positionedLine', 'gridGap'] },\n      thickLine: { fine: ['focusLine'] },\n      trimXs: { fine: ['cardSpacingChrome', 'labelSpacingBlock'] },\n      trimSm: { fine: ['cardSpacingInline', 'cardSpacingBlock', 'inputSpacingBlock'] },\n      trimMd: { coarse: ['cardSpacingInline', 'cardSpacingBlock'] },\n    },\n  },\n} satisfies Facet;\n\nexport const maxSizesFacet = {\n  physical: {\n    namespace: 'dx-',\n    conditions: { root: [':root'] },\n    series: {\n      size: {\n        root: {\n          unit: 'rem',\n          initial: 0,\n          slope: 10,\n        },\n      },\n    },\n  } satisfies LinearPhysicalLayer,\n\n  semantic: {\n    namespace: 'dx-',\n    conditions: { root: [':root'] },\n    sememes: {\n      prose: { root: ['size', 5] },\n      containerMaxWidth: { root: ['size', 5] },\n      popoverMaxWidth: { root: ['size', 2] },\n    },\n  },\n} satisfies Facet;\n", "//\n// Copyright 2024 DXOS.org\n//\n\nimport { type ColorSememes } from './types';\n\n// TODO(burdon): This should be broader than just calls.\nexport const callsSememes: ColorSememes = {\n  callActive: {\n    light: ['green', '500'],\n    dark: ['green', '500'],\n  },\n  callAlert: {\n    light: ['rose', '500'],\n    dark: ['rose', '500'],\n  },\n};\n", "//\n// Copyright 2024 DXOS.org\n//\n\nimport { type ColorSememes } from './types';\n\nexport const codemirrorSememes = {\n  // NOTE: background styles for the main content area must have transparency otherwise they will mask the selection.\n  cmCodeblock: {\n    light: ['neutral', '500/.1'],\n    dark: ['neutral', '500/.1'],\n  },\n  cmActiveLine: {\n    light: ['neutral', '200/.5'],\n    dark: ['neutral', '800/.5'],\n  },\n  cmSeparator: {\n    light: ['primary', 500],\n    dark: ['primary', 500],\n  },\n  cmCursor: {\n    light: ['neutral', 900],\n    dark: ['neutral', 100],\n  },\n  cmSelection: {\n    light: ['primary', '400/.5'],\n    dark: ['primary', '600/.5'],\n  },\n  cmFocusedSelection: {\n    light: ['primary', 400],\n    dark: ['primary', 600],\n  },\n  cmHighlight: {\n    light: ['neutral', 950],\n    dark: ['neutral', 50],\n  },\n  cmHighlightSurface: {\n    light: ['sky', 200],\n    dark: ['cyan', 600],\n  },\n  // TODO(burdon): Factor out def (in common with sheet).\n  cmComment: {\n    light: ['neutral', 950],\n    dark: ['neutral', 50],\n  },\n  cmCommentSurface: {\n    light: ['green', 200],\n    dark: ['green', 600],\n  },\n} satisfies ColorSememes;\n", "//\n// Copyright 2024 DXOS.org\n//\n\nimport type { HelicalArcValue, SemanticLayer } from '@ch-ui/tokens';\n\nimport { callsSememes } from './sememes-calls';\nimport { codemirrorSememes } from './sememes-codemirror';\nimport { hueSememes } from './sememes-hue';\nimport { sheetSememes } from './sememes-sheet';\nimport { systemSememes } from './sememes-system';\n\nexport const semanticColors = {\n  conditions: {\n    light: [':root'],\n    dark: ['.dark'],\n  },\n  sememes: {\n    // Please define each set of sememes in its own file.\n    ...callsSememes,\n    ...codemirrorSememes,\n    ...sheetSememes,\n    ...hueSememes,\n    ...systemSememes,\n  },\n  namespace: 'dx-',\n} satisfies SemanticLayer<string, string, HelicalArcValue>;\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport tailwindContainers from '@tailwindcss/container-queries';\nimport tailwindcssForms from '@tailwindcss/forms';\nimport merge from 'lodash.merge';\nimport tailwindScrollbar from 'tailwind-scrollbar';\nimport defaultConfig from 'tailwindcss/stubs/config.full.js';\nimport { type Config, type ThemeConfig } from 'tailwindcss/types/config';\nimport tailwindcssLogical from 'tailwindcss-logical';\nimport tailwindcssRadix from 'tailwindcss-radix';\n\nimport { tokensTailwindConfig } from './tokens';\n\nexport type TailwindConfig = Config;\nexport type TailwindThemeConfig = ThemeConfig;\n\nconst { extend: extendTokens, ...overrideTokens } = tokensTailwindConfig;\n\nexport const tailwindConfig = ({\n  env = 'production',\n  content = [],\n  extensions = [],\n}: {\n  env?: string;\n  content?: string[];\n  extensions?: Partial<TailwindThemeConfig>[];\n}): TailwindConfig => ({\n  darkMode: 'class',\n  theme: {\n    // Configure fonts in theme.css and package.json.\n    fontFamily: {\n      body: ['Inter Variable', ...defaultConfig.theme.fontFamily.sans],\n      mono: ['JetBrains Mono Variable', ...defaultConfig.theme.fontFamily.mono],\n    },\n    extend: merge(\n      {\n        spacing: {\n          prose: 'var(--dx-prose)',\n          containerMaxWidth: 'var(--dx-containerMaxWidth)',\n          popoverMaxWidth: 'var(--dx-popoverMaxWidth)',\n        },\n        borderRadius: {\n          none: '0',\n          sm: '0.25rem',\n          DEFAULT: '0.5rem',\n          md: '.75rem',\n          lg: '1rem',\n        },\n        screens: {\n          'pointer-fine': { raw: '(pointer: fine)' },\n          'hover-hover': { raw: '(hover: hover)' },\n        },\n        fontSize: {\n          // Base size 16px\n          // Scale 1.125\n          xs: ['0.790rem', { lineHeight: '1rem' }],\n          sm: ['0.889rem', { lineHeight: '1.25rem' }],\n          base: ['1rem', { lineHeight: '1.5rem' }],\n          lg: ['1.125rem', { lineHeight: '1.75rem' }],\n          xl: ['1.266rem', { lineHeight: '1.75rem' }],\n          '2xl': ['1.424rem', { lineHeight: '2rem' }],\n          '3xl': ['1.602rem', { lineHeight: '2.25rem' }],\n          '4xl': ['1.802rem', { lineHeight: '2.5rem' }],\n          '5xl': ['2.027rem', { lineHeight: '2.5rem' }],\n          '6xl': ['2.281rem', { lineHeight: '2.5rem' }],\n          '7xl': ['2.566rem', { lineHeight: '2.75rem' }],\n          '8xl': ['2.887rem', { lineHeight: '3rem' }],\n          '9xl': ['3.247rem', { lineHeight: '3.25rem' }],\n        },\n        boxShadow: {\n          slider: '0 0 0 5px rgba(0, 0, 0, 0.3)',\n        },\n        transitionProperty: {\n          'max-height': 'max-height',\n        },\n        transitionTimingFunction: {\n          'in-out-symmetric': 'cubic-bezier(0.5,0,0.5,1)',\n        },\n        keyframes: {\n          // Popper chrome\n          slideDownAndFade: {\n            from: { opacity: 0, transform: 'translateY(-2px)' },\n            to: { opacity: 1, transform: 'translateY(0)' },\n          },\n          slideLeftAndFade: {\n            from: { opacity: 0, transform: 'translateX(2px)' },\n            to: { opacity: 1, transform: 'translateX(0)' },\n          },\n          slideUpAndFade: {\n            from: { opacity: 0, transform: 'translateY(2px)' },\n            to: { opacity: 1, transform: 'translateY(0)' },\n          },\n          slideRightAndFade: {\n            from: { opacity: 0, transform: 'translateX(-2px)' },\n            to: { opacity: 1, transform: 'translateX(0)' },\n          },\n          fadeIn: {\n            from: { opacity: 0 },\n            to: { opacity: 1 },\n          },\n          // Accordion\n          slideDown: {\n            from: { height: '0px' },\n            to: { height: 'var(--radix-accordion-content-height)' },\n          },\n          slideUp: {\n            from: { height: 'var(--radix-accordion-content-height)' },\n            to: { height: '0px' },\n          },\n\n          // Toast\n          'toast-hide': {\n            '0%': { opacity: '1' },\n            '100%': { opacity: '0' },\n          },\n          'toast-slide-in-right': {\n            '0%': { transform: 'translateX(calc(100% + 1rem))' },\n            '100%': { transform: 'translateX(0)' },\n          },\n          'toast-slide-in-bottom': {\n            '0%': { transform: 'translateY(calc(100% + 1rem))' },\n            '100%': { transform: 'translateY(0)' },\n          },\n          'toast-swipe-out': {\n            '0%': {\n              transform: 'translateX(var(--radix-toast-swipe-end-x))',\n            },\n            '100%': {\n              transform: 'translateX(calc(100% + 1rem))',\n            },\n          },\n\n          // Shimmer\n          'shimmer-loop': {\n            '100%': {\n              transform: 'translateX(100%)',\n            },\n          },\n\n          'halo-pulse': {\n            '0%': {\n              opacity: 0.3,\n            },\n            '5%': {\n              opacity: 1,\n            },\n            '100%': {\n              opacity: 0.3,\n            },\n          },\n\n          'progress-indeterminate': {\n            '0%': {\n              left: 0,\n              width: '0%',\n            },\n            '25%': {\n              left: '25%',\n              width: '50%',\n            },\n            '75%': {\n              left: '50%',\n              width: '100%',\n            },\n            '100%': {\n              left: '100%',\n              width: '0%',\n            },\n          },\n\n          'progress-linear': {\n            '0%': {\n              transform: 'translateX(-100%)',\n            },\n            '85%, 100%': {\n              transform: `translateX(${(100 / 28) * 100}%)`,\n            },\n          },\n        },\n        animation: {\n          'fade-in': 'fadeIn 100ms ease-in forwards',\n\n          // Popper chrome\n          slideDownAndFade: 'slideDownAndFade 400ms cubic-bezier(0.16, 1, 0.3, 1)',\n          slideLeftAndFade: 'slideLeftAndFade 400ms cubic-bezier(0.16, 1, 0.3, 1)',\n          slideUpAndFade: 'slideUpAndFade 400ms cubic-bezier(0.16, 1, 0.3, 1)',\n          slideRightAndFade: 'slideRightAndFade 400ms cubic-bezier(0.16, 1, 0.3, 1)',\n\n          // Toast\n          'toast-hide': 'toast-hide 100ms ease-in forwards',\n          'toast-slide-in-right': 'toast-slide-in-right 150ms cubic-bezier(0.16, 1, 0.3, 1)',\n          'toast-slide-in-bottom': 'toast-slide-in-bottom 150ms cubic-bezier(0.16, 1, 0.3, 1)',\n          'toast-swipe-out': 'toast-swipe-out 100ms ease-out forwards',\n\n          // Accordion\n          slideDown: 'slideDown 300ms cubic-bezier(0.87, 0, 0.13, 1)',\n          slideUp: 'slideUp 300ms cubic-bezier(0.87, 0, 0.13, 1)',\n\n          spin: 'spin 1.5s linear infinite',\n          'spin-slow': 'spin 3s linear infinite',\n\n          shimmer: 'shimmer-loop 2s infinite',\n          'halo-pulse': 'halo-pulse 2s ease-out infinite',\n          'progress-indeterminate': 'progress-indeterminate 2s ease-out infinite',\n          'progress-linear': 'progress-linear 2s ease-out infinite',\n        },\n      },\n      extendTokens,\n      ...extensions,\n    ),\n    ...overrideTokens,\n    colors: {\n      ...overrideTokens.colors,\n      inherit: 'inherit',\n      current: 'currentColor',\n      transparent: 'transparent',\n      black: 'black',\n      white: 'white',\n    },\n  },\n  plugins: [\n    tailwindcssLogical,\n    tailwindcssForms,\n    tailwindcssRadix(),\n    tailwindContainers,\n    // https://adoxography.github.io/tailwind-scrollbar/utilities\n    tailwindScrollbar,\n  ],\n  ...(env === 'development' && { mode: 'jit' }),\n  content,\n  future: {\n    hoverOnlyWhenSupported: true,\n  },\n});\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport { type Density } from '@dxos/react-ui-types';\n\nexport const coarseBlockSize = 'min-bs-[2.5rem]';\nexport const coarseTextPadding = 'pli-3';\nexport const coarseButtonPadding = 'pli-4';\nexport const coarseDimensions = `${coarseBlockSize} ${coarseTextPadding}`;\nexport const coarseButtonDimensions = `${coarseBlockSize} ${coarseButtonPadding}`;\nexport const fineBlockSize = 'min-bs-[2.5rem] pointer-fine:min-bs-[2rem]';\nexport const fineTextPadding = 'pli-2';\nexport const fineButtonPadding = 'pli-2.5';\nexport const fineDimensions = `${fineBlockSize} ${fineTextPadding}`;\nexport const fineButtonDimensions = `${fineBlockSize} ${fineButtonPadding}`;\nexport const densityBlockSize = (density: Density = 'coarse') => (density === 'fine' ? fineBlockSize : coarseBlockSize);\n", "//\n// Copyright 2022 DXOS.org\n//\n\nexport const staticDisabled = 'opacity-40 cursor-not-allowed shadow-none';\nexport const dataDisabled = 'data-[disabled]:opacity-40 data-[disabled]:cursor-not-allowed';\n", "//\n// Copyright 2024 DXOS.org\n//\n\n/**\n * Content areas that contain the text editor.\n */\nexport const textBlockWidth = 'is-full mli-auto max-is-[--text-content]';\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport { type ComponentFragment, type Elevation, type SurfaceLevel } from '@dxos/react-ui-types';\n\n/**\n * @deprecated\n */\nexport const contentShadow: ComponentFragment<{ elevation?: Elevation }> = (_) => ['shadow-none'];\n\n// TODO(thure): These should become tokens.\nexport const surfaceShadow: ComponentFragment<{ elevation?: Elevation }> = ({ elevation }) => [\n  elevation === 'positioned' ? 'shadow' : elevation === 'dialog' || elevation === 'toast' ? 'shadow-md' : 'shadow-none',\n];\n\nexport const surfaceZIndex: ComponentFragment<{ level?: SurfaceLevel; elevation?: Elevation }> = ({\n  level,\n  elevation,\n}) => {\n  switch (level) {\n    case 'tooltip':\n      return elevation === 'dialog' ? ['z-[53]'] : elevation === 'toast' ? ['z-[43]'] : ['z-30'];\n    case 'menu':\n      return elevation === 'dialog' ? ['z-[52]'] : elevation === 'toast' ? ['z-[42]'] : ['z-20'];\n    default:\n      return elevation === 'dialog' ? ['z-[51]'] : elevation === 'toast' ? ['z-[41]'] : ['z-[1]'];\n  }\n};\n", "//\n// Copyright 2022 DXOS.org\n//\n\nexport const focusRing = 'dx-focus-ring';\n\nexport const dropRing =\n  'ring-1 ring-offset-0 ring-primary-350 ring-offset-white dark:ring-primary-450 dark:ring-offset-black';\n\nexport const dropRingInner =\n  'before:z-[1] before:absolute before:inset-0 before:ring-1 before:ring-inset before:ring-primary-350 before:dark:ring-primary-450';\n\nexport const subduedFocus = 'focus:outline-none focus-visible:outline-none focus:ring-0 ring-0 focus:border-0 border-0';\n\nexport const staticFocusRing =\n  'ring-2 ring-offset-0 ring-primary-350 ring-offset-white dark:ring-primary-450 dark:ring-offset-black';\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport { type ComponentFragment, type Elevation } from '@dxos/react-ui-types';\n\nimport { surfaceShadow } from './elevation';\n\nexport const group: ComponentFragment<{ elevation?: Elevation }> = (props) => [\n  props.elevation === 'base' ? 'bg-transparent border border-separator' : 'bg-modalSurface',\n  surfaceShadow(props),\n];\n", "//\n// Copyright 2022 DXOS.org\n//\n\n/**\n * @deprecated\n */\nexport const hoverColors = 'transition-colors duration-100 linear hover:bg-hoverSurface';\n\nexport const ghostHover = 'hover:bg-hoverSurface';\nexport const subtleHover = 'hover:bg-neutral-100/20 dark:hover:bg-neutral-800/20';\n\nexport const hoverableControls =\n  '[--controls-opacity:1] hover-hover:[--controls-opacity:0] hover-hover:hover:[--controls-opacity:1]';\n\nexport const groupHoverControlItemWithTransition = 'transition-opacity duration-200 opacity-0 group-hover:opacity-100';\n\nexport const hoverableFocusedKeyboardControls = 'focus-visible:[--controls-opacity:1]';\nexport const hoverableFocusedWithinControls = 'focus-within:[--controls-opacity:1]';\nexport const hoverableFocusedControls = 'focus:[--controls-opacity:1]';\nexport const hoverableOpenControlItem = 'hover-hover:aria-[expanded=true]:[--controls-opacity:1]';\nexport const hoverableControlItem = 'opacity-[--controls-opacity]';\nexport const staticHoverableControls = 'hover-hover:[--controls-opacity:1]';\nexport const hoverableControlItemTransition = 'transition-opacity duration-200';\n", "//\n// Copyright 2023 DXOS.org\n//\n\nexport const bounceLayout = 'fixed inset-0 z-0 overflow-auto overscroll-auto';\n\nexport const fixedInsetFlexLayout = 'flex flex-col fixed inset-0 overflow-hidden overscroll-none';\n", "//\n// Copyright 2023 DXOS.org\n//\n\nexport const popperMotion =\n  'will-change-[opacity,transform] data-[side=top]:animate-slideDownAndFade data-[side=right]:animate-slideLeftAndFade data-[side=bottom]:animate-slideUpAndFade data-[side=left]:animate-slideRightAndFade';\n", "//\n// Copyright 2022 DXOS.org\n//\n\n// TODO(burdon): Remove?\nexport const separatorBorderColor = 'border-separator';\nexport const subduedSeparatorBorderColor = 'border-subduedSeparator';\n\nexport const inlineSeparator = 'self-stretch border-ie mli-1';\nexport const blockSeparator = 'self-stretch border-be mlb-1';\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport { type ComponentFragment } from '@dxos/react-ui-types';\n\nimport { ghostHover } from './hover';\n\n// TODO(burdon): Use semantic tokens (e.g., accentSurfaceHover, bg-gridSelectionOverlay).\n\nexport const ghostSelectedCurrent = [\n  ghostHover,\n  'aria-[current]:bg-inputSurface hover:aria-[current]:bg-hoverSurface',\n  'aria-selected:bg-primary-100 dark:aria-selected:bg-primary-850 hover:aria-selected:bg-primary-150 hover:dark:aria-selected:bg-primary-800',\n  'aria-[current]:aria-selected:bg-primary-200 dark:aria-[current]:aria-selected:bg-primary-750 hover:aria-[current]:aria-selected:bg-primary-200 hover:dark:aria-[current]:aria-selected:bg-primary-750',\n];\n\nexport const ghostHighlighted =\n  'data-[highlighted]:bg-primary-100 dark:data-[highlighted]:bg-primary-600 hover:data-[highlighted]:bg-primary-150 hover:dark:data-[highlighted]:bg-primary-500';\n\nexport const ghostSelectedTrackingInterFromNormal = 'tracking-[0.0092em]';\n\nexport const ghostSelected =\n  'aria-selected:bg-baseSurface aria-selected:text-accentText hover:aria-selected:text-accentTextHover aria-selected:font-semibold aria-selected:tracking-normal transition-[color,font-variation-settings,letter-spacing]';\n\nexport const ghostSelectedContainerMd =\n  '@md:aria-selected:bg-baseSurface @md:aria-selected:text-accentText @md:hover:aria-selected:text-accentTextHover @md:aria-selected:font-semibold @md:aria-selected:tracking-normal @md:transition-[color,font-variation-settings,letter-spacing]';\n\nexport type SelectedStyleProps = {\n  current?: boolean;\n  selected?: boolean;\n};\n\nexport const staticGhostSelectedCurrent: ComponentFragment<SelectedStyleProps> = ({ current, selected }) => [\n  current && selected\n    ? 'bg-primary-200 dark:bg-primary-750 hover:bg-primary-200 hover:dark:bg-primary-750'\n    : current\n      ? 'bg-inputSurface hover:bg-hoverSurface'\n      : selected\n        ? 'bg-primary-100 dark:bg-primary-850 hover:bg-primary-150 hover:dark:bg-primary-800'\n        : ghostHover,\n];\n\nexport const staticGhostSelected: ComponentFragment<Pick<SelectedStyleProps, 'selected'>> = ({ selected }) =>\n  selected ? ['bg-primary-200 dark:bg-primary-750'] : [];\n", "//\n// Copyright 2022 DXOS.org\n//\n\nexport const shimmer =\n  'relative before:absolute before:inset-0 before:-translate-x-full before:animate-shimmer before:bg-gradient-to-r before:from-transparent before:via-neutral-100/10 before:to-transparent isolate overflow-hidden';\n\nexport const strongShimmer =\n  'relative before:absolute before:inset-0 before:-translate-x-full before:animate-shimmer before:bg-gradient-to-r before:from-transparent before:via-primary-100/80 before:to-transparent isolate overflow-hidden';\n", "//\n// Copyright 2023 DXOS.org\n//\n\n// NOTE: Please don’t make changes to these fragments without testing *all* the places where they’re used.\n\n// If your scope of concern is narrower than exactly *the entire design system*, please define and apply your own\n// fragment, either to the specific component or in an override to `ThemeProvider`’s `tx` value.\n\n// Main background.\n// NOTE: This should align with theme's root --surface-bg.\nexport const baseSurface = 'base-surface';\n\n// Sidebars.\nexport const sidebarSurface = 'sidebar-surface backdrop-blur-md dark:backdrop-blur-lg';\nexport const sidebarBorder = 'border-separator';\n\n// Generic grouping style.\nexport const activeSurface = 'base-surface';\nexport const groupBorder = 'border-separator';\n\n// Tooltips, popovers, menus, dialogs, etc.\nexport const modalSurface = 'modal-surface backdrop-blur-md';\n\n// Elements that actively have the user’s “attention”; prefer to select with CSS-native selectors like focus-within,\n// but may be applied by app state. ⚠️ Do not apply statically.\nexport const attentionSurface = 'attention-surface';\n\nexport const accentSurface = 'bg-accentSurface text-accentSurfaceText';\n", "//\n// Copyright 2025 DXOS.org\n//\n\nexport type Color = {\n  color: string;\n  text: string;\n  bg: string;\n  tag: string;\n};\n\n// NOTE: Don't include blue/red which are used as system colors.\nconst colors: Color[] = [\n  { color: 'orange', bg: 'bg-orangeFill', text: 'text-orangeFill', tag: 'bg-orangeSurface' },\n  { color: 'amber', bg: 'bg-amberFill', text: 'text-amberFill', tag: 'bg-amberSurface' },\n  { color: 'yellow', bg: 'bg-yellowFill', text: 'text-yellowFill', tag: 'bg-yellowSurface' },\n  { color: 'lime', bg: 'bg-limeFill', text: 'text-limeFill', tag: 'bg-limeSurface' },\n  { color: 'green', bg: 'bg-greenFill', text: 'text-greenFill', tag: 'bg-greenSurface' },\n  { color: 'emerald', bg: 'bg-emeraldFill', text: 'text-emeraldFill', tag: 'bg-emeraldSurface' },\n  { color: 'teal', bg: 'bg-tealFill', text: 'text-tealFill', tag: 'bg-tealSurface' },\n  { color: 'cyan', bg: 'bg-cyanFill', text: 'text-cyanFill', tag: 'bg-cyanSurface' },\n  { color: 'sky', bg: 'bg-skyFill', text: 'text-skyFill', tag: 'bg-skySurface' },\n  { color: 'indigo', bg: 'bg-indigoFill', text: 'text-indigoFill', tag: 'bg-indigoSurface' },\n  { color: 'violet', bg: 'bg-violetFill', text: 'text-violetFill', tag: 'bg-violetSurface' },\n  { color: 'purple', bg: 'bg-purpleFill', text: 'text-purpleFill', tag: 'bg-purpleSurface' },\n  { color: 'fuchsia', bg: 'bg-fuchsiaFill', text: 'text-fuchsiaFill', tag: 'bg-fuchsiaSurface' },\n  { color: 'rose', bg: 'bg-roseFill', text: 'text-roseFill', tag: 'bg-roseSurface' },\n  { color: 'pink', bg: 'bg-pinkFill', text: 'text-pinkFill', tag: 'bg-pinkSurface' },\n];\n\n// TODO(thure): Reconcile with `to-fallback.ts` which exports `toHue` which overlaps a lot.\nexport const getHashColor = (type: string | undefined): Color => {\n  if (!type) {\n    return { color: 'neutral', bg: 'bg-neutralFill', text: 'text-neutralFill', tag: 'bg-neutralSurface' };\n  }\n\n  const hash = type.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);\n  return colors[hash % colors.length];\n};\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport { extendTailwindMerge, validators } from 'tailwind-merge';\n\nimport { withLogical, type WithLogicalClassGroups } from './withLogical';\n\ntype AdditionalClassGroups = 'foreground' | 'surface' | 'separator' | WithLogicalClassGroups;\n\nexport const mx = extendTailwindMerge<AdditionalClassGroups>(\n  {\n    extend: {\n      classGroups: {\n        'font-family': ['font-body', 'font-mono'],\n        'font-weight': [\n          // App weights\n          'font-thin',\n          'font-extralight',\n          'font-light',\n          'font-normal',\n          'font-medium',\n          'font-semibold',\n          'font-bold',\n          'font-extrabold',\n          'font-black',\n          // Arbitrary numbers\n          validators.isArbitraryNumber,\n        ],\n      },\n    },\n  },\n  withLogical,\n);\n", "//\n// Copyright 2022 DXOS.org\n//\n\n// This tailwind-merge plugin is based upon https://github.com/vltansky/tailwind-merge-logical-plugin\n\nimport { type Config, mergeConfigs, validators } from 'tailwind-merge';\n\nconst getLength = () => [validators.isLength, validators.isArbitraryLength] as const;\nconst getLengthWithAuto = () => ['auto', validators.isLength, validators.isArbitraryLength] as const;\nconst getLengthWithEmpty = () => ['', validators.isLength, validators.isArbitraryLength] as const;\nconst getAny = () => [validators.isAny] as const;\nconst getRounded = () => ['none', '', validators.isTshirtSize, 'full', validators.isArbitraryLength] as const;\n\nconst classGroupsConfig = {\n  float: [{ float: ['start', 'end'] }],\n  clear: [{ clear: ['start', 'end'] }],\n  resize: [{ resize: ['block ', 'inline'] }],\n  'text-alignment': [{ text: ['start', 'end'] }],\n  'logical.overscroll-b': [{ 'overscroll-b': ['auto ', 'contain', 'auto'] }],\n  'logical.overscroll-i': [{ 'overscroll-b': ['auto ', 'contain', 'auto'] }],\n  'logical.bs': [{ bs: getLength() }],\n  'logical.min-bs': [{ 'min-bs': getAny() }],\n  'logical.max-bs': [{ 'max-bs': getAny() }],\n  'logical.is': [{ is: getLength() }],\n  'logical.min-is': [{ 'min-is': getAny() }],\n  'logical.max-is': [{ 'max-is': getAny() }],\n  'logical.mlb': [{ mlb: getAny() }],\n  'logical.mli': [{ mli: getAny() }],\n  'logical.mbs': [{ mbs: getAny() }],\n  'logical.mbe': [{ mbe: getAny() }],\n  'logical.mis': [{ mis: getAny() }],\n  'logical.mie': [{ mie: getAny() }],\n  'logical.plb': [{ plb: getAny() }],\n  'logical.pli': [{ pli: getAny() }],\n  'logical.pbs': [{ pbs: getAny() }],\n  'logical.pbe': [{ pbe: getAny() }],\n  'logical.pis': [{ pis: getAny() }],\n  'logical.pie': [{ pie: getAny() }],\n  'logical.space-b': [{ 'space-b': getLength() }],\n  'logical.space-i': [{ 'space-i': getLength() }],\n  'logical.inset-block': [{ 'inset-block': getLengthWithAuto() }],\n  'logical.inset-inline': [{ 'inset-inline': getLengthWithAuto() }],\n  'logical.block-start': [{ 'block-start': getLengthWithAuto() }],\n  'logical.block-end': [{ 'block-end': getLengthWithAuto() }],\n  'logical.inline-start': [{ 'inline-start': getLengthWithAuto() }],\n  'logical.inline-end': [{ 'inline-end': getLengthWithAuto() }],\n  'logical.border-li': [{ 'border-li': getLengthWithEmpty() }],\n  'logical.border-lb': [{ 'border-lb': getLengthWithEmpty() }],\n  'logical.border-bs': [{ 'border-bs': getLengthWithEmpty() }],\n  'logical.border-be': [{ 'border-be': getLengthWithEmpty() }],\n  'logical.border-is': [{ 'border-is': getLengthWithEmpty() }],\n  'logical.border-ie': [{ 'border-ie': getLengthWithEmpty() }],\n  'logical.border-color-bs': [{ 'border-bs': getAny() }],\n  'logical.border-color-be': [{ 'border-be': getAny() }],\n  'logical.border-color-is': [{ 'border-is': getAny() }],\n  'logical.border-color-ie': [{ 'border-ie': getAny() }],\n  'logical.rounded-bs': [{ 'rounded-bs': getRounded() }],\n  'logical.rounded-be': [{ 'rounded-be': getRounded() }],\n  'logical.rounded-is': [{ 'rounded-is': getRounded() }],\n  'logical.rounded-ie': [{ 'rounded-ie': getRounded() }],\n  'logical.rounded-ss': [{ 'rounded-ss': getRounded() }],\n  'logical.rounded-se': [{ 'rounded-se': getRounded() }],\n  'logical.rounded-es': [{ 'rounded-es': getRounded() }],\n  'logical.rounded-ee': [{ 'rounded-ee': getRounded() }],\n  'logical.divide-b': [{ 'divide-b': getLengthWithEmpty() }],\n  'logical.divide-i': [{ 'divide-i': getLengthWithEmpty() }],\n};\n\nexport type WithLogicalClassGroups = keyof typeof classGroupsConfig;\n\ntype WithLogicalConfig = Config<WithLogicalClassGroups, string>;\n\nexport const withLogical = (prevConfig: WithLogicalConfig): WithLogicalConfig => {\n  return mergeConfigs(prevConfig, {\n    extend: {\n      classGroups: classGroupsConfig,\n      conflictingClassGroups: {\n        'inset-block': ['logical.block-start', 'logical.block-end'],\n        'inset-inline': ['logical.inline-start', 'logical.inline-end'],\n        p: ['logical.plb', 'logical.pli', 'logical.pbs', 'logical.pbe', 'logical.pis', 'logical.pie'],\n        pli: ['logical.pis', 'logical.pie'],\n        plb: ['logical.pbs', 'logical.pbe'],\n        m: ['logical.mlb', 'logical.mli', 'logical.mbs', 'logical.mbe', 'logical.mis', 'logical.mie'],\n        mli: ['logical.mis', 'logical.mie'],\n        mlb: ['logical.mbs', 'logical.mbe'],\n        overscroll: ['overscroll-i', 'overscroll-b'],\n        rounded: [\n          'logical.rounded-bs',\n          'logical.rounded-be',\n          'logical.rounded-is',\n          'logical.rounded-ie',\n          'logical.rounded-ss',\n          'logical.rounded-se',\n          'logical.rounded-es',\n          'logical.rounded-ee',\n        ],\n        'logical.rounded-bs': ['logical.rounded-ss', 'logical.rounded-se'],\n        'logical.rounded-be': ['logical.rounded-es', 'logical.rounded-ee'],\n        'logical.rounded-is': ['logical.rounded-ss', 'logical.rounded-es'],\n        'logical.rounded-ie': ['logical.rounded-ee', 'logical.rounded-se'],\n        'logical.border-li': ['logical.border-is', 'logical.border-ie'],\n        'logical.border-lb': ['logical.border-bs', 'logical.border-be'],\n        'border-color': [\n          'logical.border-color-bs',\n          'logical.border-color-be',\n          'logical.border-color-is',\n          'logical.border-color-ie',\n        ],\n        border: ['logical.border-bs', 'logical.border-be', 'logical.border-is', 'logical.border-ie'],\n      },\n    },\n  });\n};\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport { type Size } from '@dxos/react-ui-types';\n\nimport { mx } from '../../util';\n\nexport const sizeWidthMap = new Map<Size, string>([\n  [0, 'is-0'],\n  ['px', 'is-px'],\n  [0.5, 'is-0.5'],\n  [1, 'is-1'],\n  [1.5, 'is-1.5'],\n  [2, 'is-2'],\n  [2.5, 'is-2.5'],\n  [3, 'is-3'],\n  [3.5, 'is-3.5'],\n  [4, 'is-4'],\n  [5, 'is-5'],\n  [6, 'is-6'],\n  [7, 'is-7'],\n  [8, 'is-8'],\n  [9, 'is-9'],\n  [10, 'is-10'],\n  [11, 'is-11'],\n  [12, 'is-12'],\n  [14, 'is-14'],\n  [16, 'is-16'],\n  [20, 'is-20'],\n  [24, 'is-24'],\n  [28, 'is-28'],\n  [32, 'is-32'],\n  [36, 'is-36'],\n  [40, 'is-40'],\n  [44, 'is-44'],\n  [48, 'is-48'],\n  [52, 'is-52'],\n  [56, 'is-56'],\n  [60, 'is-60'],\n  [64, 'is-64'],\n  [72, 'is-72'],\n  [80, 'is-80'],\n  [96, 'is-96'],\n]);\n\nexport const sizeHeightMap = new Map<Size, string>([\n  [0, 'bs-0'],\n  ['px', 'bs-px'],\n  [0.5, 'bs-0.5'],\n  [1, 'bs-1'],\n  [1.5, 'bs-1.5'],\n  [2, 'bs-2'],\n  [2.5, 'bs-2.5'],\n  [3, 'bs-3'],\n  [3.5, 'bs-3.5'],\n  [4, 'bs-4'],\n  [5, 'bs-5'],\n  [6, 'bs-6'],\n  [7, 'bs-7'],\n  [8, 'bs-8'],\n  [9, 'bs-9'],\n  [10, 'bs-10'],\n  [11, 'bs-11'],\n  [12, 'bs-12'],\n  [14, 'bs-14'],\n  [16, 'bs-16'],\n  [20, 'bs-20'],\n  [24, 'bs-24'],\n  [28, 'bs-28'],\n  [32, 'bs-32'],\n  [36, 'bs-36'],\n  [40, 'bs-40'],\n  [44, 'bs-44'],\n  [48, 'bs-48'],\n  [52, 'bs-52'],\n  [56, 'bs-56'],\n  [60, 'bs-60'],\n  [64, 'bs-64'],\n  [72, 'bs-72'],\n  [80, 'bs-80'],\n  [96, 'bs-96'],\n]);\n\nconst sizes = new Set(sizeWidthMap.keys());\n\nexport const getSizeHeight = sizeHeightMap.get.bind(sizeHeightMap);\nexport const getSizeWidth = sizeWidthMap.get.bind(sizeWidthMap);\nexport const getSize = (size: Size) => mx(getSizeHeight(size), getSizeWidth(size));\n\nexport const computeSize = (value: number, defaultSize: Size) => {\n  if (sizes.has(value as Size)) {\n    return value as Size;\n  } else if (value <= 0) {\n    return 0;\n  } else if (value === 1) {\n    return 'px';\n  } else {\n    const wholeSeries = Math.floor(value);\n    const halfSeries = Math.floor(value * 2) / 2;\n    const doubleSeries = Math.floor(value / 2) * 2;\n    const quadrupleSeries = Math.floor(value / 4) * 4;\n    if (sizes.has(halfSeries as Size)) {\n      return halfSeries as Size;\n    } else if (sizes.has(wholeSeries as Size)) {\n      return wholeSeries as Size;\n    } else if (sizes.has(doubleSeries as Size)) {\n      return doubleSeries as Size;\n    } else if (sizes.has(quadrupleSeries as Size)) {\n      return quadrupleSeries as Size;\n    } else {\n      return defaultSize;\n    }\n  }\n};\n\nexport const sizeValue = (size: Size): number => (size === 'px' ? 1 : size);\n", "//\n// Copyright 2022 DXOS.org\n//\n\nexport const placeholderText = 'placeholder-neutral-300 dark:placeholder-neutral-500';\nexport const staticPlaceholderText = 'text-neutral-300 dark:text-neutral-500';\n\nexport const descriptionText = 'text-sm font-normal text-description';\nexport const descriptionTextPrimary = 'text-sm font-normal text-baseText';\n\nexport const descriptionMessage = [descriptionText, 'border border-dashed border-separator rounded p-4'];\n\nexport const chromeText = 'text-sm font-normal';\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport { type MessageValence } from '@dxos/react-ui-types';\n\nexport const successText = 'text-xs font-medium text-successText';\nexport const infoText = 'text-xs font-medium text-infoText';\nexport const warningText = 'text-xs font-medium text-warningText';\nexport const errorText = 'text-xs font-medium text-errorText';\n\nexport const valenceColorText = (valence?: MessageValence) => {\n  switch (valence) {\n    case 'success':\n      return successText;\n    case 'info':\n      return infoText;\n    case 'warning':\n      return warningText;\n    case 'error':\n      return errorText;\n    default:\n      return undefined;\n  }\n};\n\n// TODO(burdon): Border colors.\n\nexport const neutralMessageColors = 'border border-dashed border-separator text-subdued';\nexport const successMessageColors = 'text-successSurfaceText bg-successSurface';\nexport const infoMessageColors = 'text-infoSurfaceText bg-infoSurface';\nexport const warningMessageColors = 'text-warningSurfaceText bg-warningSurface';\nexport const errorMessageColors = 'text-errorSurfaceText bg-errorSurface';\n\nexport const messageValence = (valence?: MessageValence) => {\n  switch (valence) {\n    case 'success':\n      return successMessageColors;\n    case 'info':\n      return infoMessageColors;\n    case 'warning':\n      return warningMessageColors;\n    case 'error':\n      return errorMessageColors;\n    default:\n      return neutralMessageColors;\n  }\n};\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport { type ComponentFunction, type Theme } from '@dxos/react-ui-types';\n\nimport { mx } from '../../util';\n\nexport type AnchoredOverflowStyleProps = {};\n\nexport const anchoredOverflowRoot: ComponentFunction<AnchoredOverflowStyleProps> = (_props, ...etc) =>\n  mx('overflow-anchored overflow-auto', ...etc);\n\nexport const anchoredOverflowAnchor: ComponentFunction<AnchoredOverflowStyleProps> = (_props, ...etc) =>\n  mx('overflow-anchor is-px bs-px', ...etc);\n\nexport const anchoredOverflowTheme: Theme<AnchoredOverflowStyleProps> = {\n  root: anchoredOverflowRoot,\n  anchor: anchoredOverflowAnchor,\n};\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport { type ComponentFunction, type Size, type Theme } from '@dxos/react-ui-types';\n\nimport { mx } from '../../util';\nimport { descriptionText, getSize, getSizeHeight } from '../fragments';\n\nexport type AvatarStyleProps = Partial<{\n  size: Size;\n  srOnly: boolean;\n  status: 'active' | 'inactive' | 'current' | 'error' | 'warning' | 'internal';\n  animation: 'pulse' | 'none';\n  variant: 'circle' | 'square';\n  inGroup: boolean;\n}>;\n\nexport const avatarRoot: ComponentFunction<AvatarStyleProps> = ({ size = 10, inGroup }, ...etc) =>\n  mx(\n    'relative inline-flex shrink-0',\n    getSize(size),\n    inGroup && (size === 'px' || size <= 3 ? '-mie-1' : '-mie-2'),\n    ...etc,\n  );\n\nexport const avatarLabel: ComponentFunction<AvatarStyleProps> = ({ srOnly }, ...etc) => mx(srOnly && 'sr-only', ...etc);\n\nexport const avatarDescription: ComponentFunction<AvatarStyleProps> = ({ srOnly }, ...etc) =>\n  mx(descriptionText, srOnly && 'sr-only', ...etc);\n\nexport const avatarFrame: ComponentFunction<AvatarStyleProps> = ({ variant }, ...etc) =>\n  mx('is-full bs-full bg-[--surface-bg]', variant === 'circle' ? 'rounded-full' : 'rounded', ...etc);\n\nexport const avatarStatusIcon: ComponentFunction<AvatarStyleProps> = ({ status, size = 3 }, ...etc) =>\n  mx(\n    'absolute block-end-0 inline-end-0',\n    getSize(size),\n    status === 'inactive'\n      ? 'text-amber-350 dark:text-amber-250'\n      : status === 'active'\n        ? 'text-emerald-350 dark:text-emerald-250'\n        : 'text-neutral-350 dark:text-neutral-250',\n    ...etc,\n  );\n\nexport const avatarRing: ComponentFunction<AvatarStyleProps> = ({ status, variant, animation }, ...etc) =>\n  mx(\n    'absolute inset-0 border-2',\n    variant === 'circle' ? 'rounded-full' : 'rounded',\n    status === 'current'\n      ? 'border-primary-400 dark:border-primary-500'\n      : status === 'active'\n        ? 'border-emerald-400 dark:border-emerald-400'\n        : status === 'error'\n          ? 'border-rose-400 dark:border-rose-500'\n          : status === 'warning'\n            ? 'border-amber-400 dark:border-amber-500'\n            : status === 'inactive'\n              ? 'border-separator'\n              : status === 'internal'\n                ? 'border-fuchsia-600'\n                : 'border-[color:var(--surface-bg)]',\n    animation === 'pulse' ? 'animate-halo-pulse' : '',\n    ...etc,\n  );\n\nexport const avatarFallbackText: ComponentFunction<AvatarStyleProps> = (_props, ...etc) => mx('fill-white', ...etc);\n\nexport const avatarGroup: ComponentFunction<AvatarStyleProps> = (_props, ...etc) =>\n  mx('inline-flex items-center', ...etc);\n\nexport const avatarGroupLabel: ComponentFunction<AvatarStyleProps> = ({ size, srOnly }, ...etc) =>\n  mx(\n    srOnly\n      ? 'sr-only'\n      : 'rounded-full truncate text-sm leading-none plb-1 pli-2 relative z-[1] flex items-center justify-center',\n    size && getSizeHeight(size),\n    ...etc,\n  );\n\nexport const avatarGroupDescription: ComponentFunction<AvatarStyleProps> = ({ srOnly }, ...etc) =>\n  mx(srOnly ? 'sr-only' : descriptionText, ...etc);\n\nexport const avatarTheme: Theme<AvatarStyleProps> = {\n  root: avatarRoot,\n  label: avatarLabel,\n  description: avatarDescription,\n  statusIcon: avatarStatusIcon,\n  frame: avatarFrame,\n  ring: avatarRing,\n  fallbackText: avatarFallbackText,\n  group: avatarGroup,\n  groupLabel: avatarGroupLabel,\n  groupDescription: avatarGroupDescription,\n};\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport { type ComponentFunction, type Theme } from '@dxos/react-ui-types';\n\nimport { mx } from '../../util';\n\nexport type breadcrumbStyleProps = {};\n\nexport const breadcrumbRoot: ComponentFunction<breadcrumbStyleProps> = (_props, ...etc) =>\n  mx('shrink-0 flex items-center', ...etc);\n\nexport const breadcrumbList: ComponentFunction<breadcrumbStyleProps> = (_props, ...etc) => mx('contents', ...etc);\n\nexport const breadcrumbListItem: ComponentFunction<breadcrumbStyleProps> = (_props, ...etc) => mx('contents', ...etc);\n\nexport const breadcrumbCurrent: ComponentFunction<breadcrumbStyleProps> = (_props, ...etc) => mx(...etc);\n\nexport const breadcrumbSeparator: ComponentFunction<breadcrumbStyleProps> = (_props, ...etc) =>\n  mx('opacity-50', ...etc);\n\nexport const breadcrumbTheme: Theme<breadcrumbStyleProps> = {\n  root: breadcrumbRoot,\n  list: breadcrumbList,\n  listItem: breadcrumbListItem,\n  current: breadcrumbCurrent,\n  separator: breadcrumbSeparator,\n};\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport type { Density, Elevation, ComponentFunction, Theme } from '@dxos/react-ui-types';\n\nimport { mx } from '../../util';\nimport { ghostHover } from '../fragments';\n\nexport const primaryButtonColors =\n  'text-accentSurfaceText bg-accentSurface hover:bg-accentSurfaceHover aria-pressed:bg-primary-500 dark:aria-pressed:bg-primary-500 data-[state=open]:bg-primary-500 dark:data-[state=open]:bg-primary-500 aria-checked:bg-primary-500 dark:aria-checked:bg-primary-500 aria-checked:text-primary-100';\n\nexport const staticDefaultButtonColors = 'bg-inputSurface';\n\nexport const defaultButtonColors = mx(\n  staticDefaultButtonColors,\n  'data-[state=open]:bg-inputSurface aria-pressed:text-accentText aria-pressed:bg-baseSurface aria-checked:text-accentText aria-checked:bg-baseSurface',\n);\n\nexport const ghostButtonColors = mx(\n  ghostHover,\n  'hover:text-inherit data-[state=open]:bg-inputSurface aria-pressed:text-accentText aria-pressed:bg-baseSurface aria-checked:text-accentText aria-checked:bg-baseSurface',\n);\n\nexport type ButtonStyleProps = Partial<{\n  inGroup?: boolean;\n  textWrap?: boolean;\n  density: Density;\n  elevation: Elevation;\n  disabled: boolean;\n  variant: 'default' | 'primary' | 'ghost' | 'outline';\n}>;\n\nexport const buttonRoot: ComponentFunction<ButtonStyleProps> = (_props, ...etc) => {\n  return mx('dx-button dx-focus-ring group', ...etc);\n};\n\nexport const buttonGroup: ComponentFunction<{ elevation?: Elevation }> = (props, ...etc) => {\n  return mx(\n    'inline-flex rounded-sm [&>:first-child]:rounded-is-sm [&>:last-child]:rounded-ie-sm [&>button]:relative',\n    ...etc,\n  );\n};\n\nexport const buttonTheme: Theme<ButtonStyleProps> = {\n  root: buttonRoot,\n  group: buttonGroup,\n};\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport { type ComponentFunction, type Elevation, type Theme } from '@dxos/react-ui-types';\n\nimport { mx } from '../../util';\nimport { descriptionText } from '../fragments';\n\nexport type DialogStyleProps = {\n  srOnly?: boolean;\n  inOverlayLayout?: boolean;\n  elevation?: Elevation;\n};\n\nexport const dialogOverlay: ComponentFunction<DialogStyleProps> = (_props, ...etc) => mx('dx-dialog__overlay', ...etc);\n\nexport const dialogContent: ComponentFunction<DialogStyleProps> = ({ inOverlayLayout }, ...etc) =>\n  mx(\n    'dx-dialog__content modal-surface density-coarse @container dx-focus-ring',\n    !inOverlayLayout && 'fixed z-50 top-[50%] left-[50%] -translate-x-[50%] -translate-y-[50%]',\n    ...etc,\n  );\n\nexport const dialogTitle: ComponentFunction<DialogStyleProps> = ({ srOnly }, ...etc) =>\n  mx('dx-dialog__title', srOnly && 'sr-only', ...etc);\n\nexport const dialogDescription: ComponentFunction<DialogStyleProps> = ({ srOnly }, ...etc) =>\n  mx('dx-dialog__description', descriptionText, srOnly && 'sr-only', ...etc);\n\nexport const dialogTheme: Theme<DialogStyleProps> = {\n  overlay: dialogOverlay,\n  content: dialogContent,\n  title: dialogTitle,\n  description: dialogDescription,\n};\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport { type ComponentFunction, type Size, type Theme } from '@dxos/react-ui-types';\n\nimport { mx } from '../../util';\nimport { getSize } from '../fragments';\n\nexport type IconStyleProps = {\n  size?: Size;\n};\n\nexport const iconRoot: ComponentFunction<IconStyleProps> = ({ size }, etc) =>\n  mx('shrink-0 bs-[1em] is-[1em] text-[var(--icons-color,currentColor)]', size && getSize(size), etc);\n\nexport const iconTheme: Theme<IconStyleProps> = {\n  root: iconRoot,\n};\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport type { ComponentFunction, Theme } from '@dxos/react-ui-types';\n\nimport { type ButtonStyleProps } from './button';\nimport { mx } from '../../util';\n\n// TODO(burdon): Gap/font size should depend on density.\nexport const iconButtonRoot: ComponentFunction<ButtonStyleProps> = (_props, ...etc) => {\n  return mx('ch-icon-button dx-focus-ring gap-2', ...etc);\n};\n\nexport const iconButtonTheme: Theme<ButtonStyleProps> = {\n  root: iconButtonRoot,\n};\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport {\n  type ComponentFragment,\n  type ComponentFunction,\n  type Density,\n  type Elevation,\n  type MessageValence,\n  type Size,\n} from '@dxos/react-ui-types';\n\nimport { mx } from '../../util';\nimport {\n  coarseBlockSize,\n  coarseDimensions,\n  computeSize,\n  descriptionText,\n  fineBlockSize,\n  fineDimensions,\n  focusRing,\n  getSize,\n  getSizeHeight,\n  getSizeWidth,\n  placeholderText,\n  sizeValue,\n  staticFocusRing,\n  staticDisabled,\n  subduedFocus,\n  valenceColorText,\n} from '../fragments';\n\nexport type InputStyleProps = Partial<{\n  variant: 'default' | 'subdued' | 'static';\n  density: Density;\n  disabled: boolean;\n  elevation: Elevation;\n  focused: boolean;\n  validationValence: MessageValence;\n  size: Size;\n  checked: boolean;\n}>;\n\nexport type InputMetaStyleProps = Partial<{\n  srOnly: boolean;\n  validationValence: MessageValence;\n}>;\n\nexport const neutralInputValence = '';\nexport const successInputValence = 'shadow-emerald-500/50 dark:shadow-emerald-600/50';\nexport const infoInputValence = 'shadow-cyan-500/50 dark:shadow-cyan-600/50';\nexport const warningInputValence = 'shadow-amber-500/50 dark:shadow-amber-600/50';\nexport const errorInputValence = 'shadow-rose-500/50 dark:shadow-rose-600/50';\n\nconst textInputSurfaceFocus =\n  'transition-colors bg-textInputSurface focus:bg-focusSurface border border-separator focus:border-separator';\n\nconst textInputSurfaceHover = 'hover:bg-textInputSurface focus:hover:bg-focusSurface';\n\nconst booleanInputSurface =\n  'shadow-inner transition-colors bg-unAccent aria-checked:bg-accentSurface aria-[checked=mixed]:bg-accentSurface';\n\nconst booleanInputSurfaceHover =\n  'hover:bg-unAccentHover hover:aria-checked:bg-accentSurfaceHover hover:aria-[checked=mixed]:bg-accentSurfaceHover';\n\nexport const inputTextLabel = 'text-xs font-medium mbs-inputSpacingBlock mbe-labelSpacingBlock first:mbs-0';\n\nexport const inputValence = (valence?: MessageValence) => {\n  switch (valence) {\n    case 'success':\n      return successInputValence;\n    case 'info':\n      return infoInputValence;\n    case 'warning':\n      return warningInputValence;\n    case 'error':\n      return errorInputValence;\n    default:\n      return null;\n  }\n};\n\n// TODO(burdon): Factor out color defs?\n\nconst sharedSubduedInputStyles: ComponentFragment<InputStyleProps> = (props) => [\n  'py-0 is-full bg-transparent text-current [[data-drag-autoscroll=\"active\"]_&]:pointer-events-none',\n  props.density === 'fine' ? fineBlockSize : coarseBlockSize,\n  placeholderText,\n  subduedFocus,\n  props.disabled && staticDisabled,\n];\n\nconst sharedDefaultInputStyles: ComponentFragment<InputStyleProps> = (props) => [\n  'py-0 is-full text-baseText rounded-sm text-[color:var(--surface-text)] [[data-drag-autoscroll=\"active\"]_&]:pointer-events-none',\n  textInputSurfaceFocus,\n  placeholderText,\n  props.density === 'fine' ? fineDimensions : coarseDimensions,\n  props.disabled ? staticDisabled : textInputSurfaceHover,\n];\n\nconst sharedStaticInputStyles: ComponentFragment<InputStyleProps> = (props) => [\n  'py-0 is-full text-baseText rounded-sm text-[color:var(--surface-text)] [[data-drag-autoscroll=\"active\"]_&]:pointer-events-none',\n  textInputSurfaceFocus,\n  textInputSurfaceHover,\n  props.focused && 'bg-attention',\n  placeholderText,\n  inputValence(props.validationValence),\n  props.disabled && staticDisabled,\n  props.focused && staticFocusRing,\n];\n\nexport const inputInput: ComponentFunction<InputStyleProps> = (props, ...etc) =>\n  props.variant === 'subdued'\n    ? mx(...sharedSubduedInputStyles(props), ...etc)\n    : props.variant === 'static'\n      ? mx(...sharedStaticInputStyles(props), ...etc)\n      : mx(\n          ...sharedDefaultInputStyles(props),\n          !props.disabled && focusRing,\n          inputValence(props.validationValence) || neutralInputValence,\n          ...etc,\n        );\n\nexport const inputCheckbox: ComponentFunction<InputStyleProps> = ({ size = 5 }, ...etc) =>\n  mx('dx-checkbox dx-focus-ring', getSize(size), ...etc);\n\nexport const inputCheckboxIndicator: ComponentFunction<InputStyleProps> = ({ size = 5, checked }, ...etc) =>\n  mx(getSize(computeSize(sizeValue(size) * 0.65, 4)), !checked && 'invisible', ...etc);\n\nexport const inputSwitch: ComponentFunction<InputStyleProps> = ({ size = 5, disabled }, ...etc) =>\n  mx(\n    getSizeHeight(size),\n    getSizeWidth(computeSize(sizeValue(size) * 1.75, 9)),\n    booleanInputSurface,\n    !disabled && booleanInputSurfaceHover,\n    // TODO(burdon): Added m-1 margin to make 40px width to align with 40px icon button.\n    'cursor-pointer shrink-0 rounded-full pli-1 mx-1 relative',\n    focusRing,\n    ...etc,\n  );\n\nexport const inputSwitchThumb: ComponentFunction<InputStyleProps> = ({ size = 5 }, ...etc) =>\n  mx(\n    getSize(size === 'px' ? 'px' : ((size - 2) as Size)),\n    'block bg-white rounded-full transition-transform duration-100 will-change-transform data-[state=checked]:translate-x-[100%]',\n    ...etc,\n  );\n\nexport const inputWithSegmentsInput: ComponentFunction<InputStyleProps> = (props, ...etc) =>\n  mx('font-mono selection:bg-transparent mli-auto', props.disabled && 'cursor-not-allowed', ...etc);\n\nexport const inputLabel: ComponentFunction<InputMetaStyleProps> = (props, ...etc) =>\n  mx('block', inputTextLabel, props.srOnly && 'sr-only', ...etc);\n\nexport const inputDescription: ComponentFunction<InputMetaStyleProps> = (props, ...etc) =>\n  mx(descriptionText, props.srOnly && 'sr-only', ...etc);\n\nexport const inputDescriptionAndValidation: ComponentFunction<InputMetaStyleProps> = (props, ...etc) =>\n  mx('leading-none mlb-labelSpacingBlock', props.srOnly && 'sr-only', ...etc);\n\nexport const inputValidation: ComponentFunction<InputMetaStyleProps> = (props, ...etc) =>\n  mx(descriptionText, props.srOnly ? 'sr-only' : valenceColorText(props.validationValence), ...etc);\n\nexport const inputTheme = {\n  input: inputInput,\n  inputWithSegments: inputWithSegmentsInput,\n  checkbox: inputCheckbox,\n  checkboxIndicator: inputCheckboxIndicator,\n  label: inputLabel,\n  description: inputDescription,\n  validation: inputValidation,\n  switch: inputSwitch,\n  switchThumb: inputSwitchThumb,\n  descriptionAndValidation: inputDescriptionAndValidation,\n};\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport { type ComponentFunction, type Theme } from '@dxos/react-ui-types';\n\nimport { mx } from '../../util';\nimport { focusRing } from '../fragments';\n\nexport type LinkStyleProps = {\n  variant?: 'accent' | 'neutral';\n};\n\nexport const linkRoot: ComponentFunction<LinkStyleProps> = ({ variant }, ...etc) =>\n  mx(\n    'underline decoration-1 underline-offset-2 transition-color rounded-sm',\n    variant === 'neutral'\n      ? 'text-inherit hover:opacity-90 visited:text-inherit visited:hover:opacity-90'\n      : 'text-accentText hover:text-accentTextHover visited:text-accentText visited:hover:text-accentTextHover',\n    focusRing,\n    ...etc,\n  );\n\nexport const linkTheme: Theme<LinkStyleProps> = {\n  root: linkRoot,\n};\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport { type ComponentFunction, type Density, type Theme } from '@dxos/react-ui-types';\n\nimport { mx } from '../../util';\nimport { focusRing, densityBlockSize, getSize, ghostHover } from '../fragments';\n\nexport type ListStyleProps = Partial<{\n  density: Density;\n  collapsible: boolean;\n}>;\n\nexport const listRoot: ComponentFunction<ListStyleProps> = (_, ...etc) => mx(...etc);\n\nexport const listItem: ComponentFunction<ListStyleProps> = ({ collapsible }, ...etc) =>\n  mx(!collapsible && 'flex', ...etc);\n\nexport const listItemEndcap: ComponentFunction<ListStyleProps> = ({ density }, ...etc) =>\n  mx(density === 'fine' ? getSize(8) : getSize(10), 'shrink-0 flex items-start justify-center', ...etc);\n\nexport const listItemHeading: ComponentFunction<ListStyleProps> = ({ density }, ...etc) =>\n  mx(densityBlockSize(density), ...etc);\n\nexport const listItemDragHandleIcon: ComponentFunction<ListStyleProps> = (_props, ...etc) =>\n  mx(getSize(5), 'mbs-2.5', ...etc);\n\nexport const listItemOpenTrigger: ComponentFunction<ListStyleProps> = ({ density }, ...etc) =>\n  mx('is-5 rounded flex justify-center items-center', densityBlockSize(density), ghostHover, focusRing, ...etc);\n\nexport const listItemOpenTriggerIcon: ComponentFunction<ListStyleProps> = (_props, ...etc) => {\n  return mx(getSize(5), ...etc);\n};\n\nexport const listTheme: Theme<ListStyleProps> = {\n  root: listRoot,\n  item: {\n    root: listItem,\n    endcap: listItemEndcap,\n    heading: listItemHeading,\n    dragHandleIcon: listItemDragHandleIcon,\n    openTrigger: listItemOpenTrigger,\n    openTriggerIcon: listItemOpenTriggerIcon,\n  },\n};\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport { type ComponentFunction } from '@dxos/react-ui-types';\n\nimport { mx } from '../../util';\n\n// Padding to apply to in-flow elements which need to clear the fixed topbar / bottombar.\nexport const topbarBlockPaddingStart = 'pbs-[--topbar-size] sticky-top-from-topbar-bottom';\nexport const bottombarBlockPaddingEnd = 'pbe-[--statusbar-size] sticky-bottom-from-statusbar-bottom';\n\nexport type MainStyleProps = Partial<{\n  bounce: boolean;\n  handlesFocus: boolean;\n}>;\n\nexport const mainSidebar: ComponentFunction<MainStyleProps> = (_, ...etc) =>\n  mx('dx-main-sidebar', 'dx-focus-ring-inset-over-all', ...etc);\n\nexport const mainPadding = 'dx-main-content-padding';\n\nexport const mainPaddingTransitions = 'dx-main-content-padding-transitions';\n\nexport const mainContent: ComponentFunction<MainStyleProps> = ({ bounce }, ...etc) =>\n  mx(mainPadding, mainPaddingTransitions, bounce && 'dx-main-bounce-layout', 'dx-focus-ring-main', ...etc);\n\nexport const mainIntrinsicSize = 'dx-main-intrinsic-size';\n\nexport const mainOverlay: ComponentFunction<MainStyleProps> = (_, ...etc) => mx('dx-main-overlay', ...etc);\n\nexport const mainTheme = {\n  content: mainContent,\n  sidebar: mainSidebar,\n  overlay: mainOverlay,\n};\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport { type ComponentFunction, type Theme, type Elevation } from '@dxos/react-ui-types';\n\nimport { mx } from '../../util';\nimport {\n  dataDisabled,\n  descriptionText,\n  modalSurface,\n  popperMotion,\n  subduedFocus,\n  surfaceShadow,\n  surfaceZIndex,\n} from '../fragments';\n\nexport type MenuStyleProps = Partial<{\n  constrainBlockSize: boolean;\n  elevation: Elevation;\n}>;\n\nexport const menuViewport: ComponentFunction<MenuStyleProps> = (_props, ...etc) =>\n  mx('rounded p-1 max-bs-[--radix-dropdown-menu-content-available-height] overflow-y-auto', ...etc);\n\nexport const menuContent: ComponentFunction<MenuStyleProps> = ({ elevation }, ...etc) =>\n  mx(\n    'is-48 rounded md:is-56 border border-separator',\n    surfaceZIndex({ elevation, level: 'menu' }),\n    surfaceShadow({ elevation: 'positioned' }),\n    modalSurface,\n    popperMotion,\n    ...etc,\n  );\n\nexport const menuItem: ComponentFunction<MenuStyleProps> = (_props, ...etc) =>\n  mx(\n    'flex cursor-pointer select-none items-center gap-2 rounded-sm px-2 py-2 text-sm',\n    'data-[highlighted]:bg-hoverSurface',\n    subduedFocus,\n    dataDisabled,\n    ...etc,\n  );\n\nexport const menuSeparator: ComponentFunction<MenuStyleProps> = (_props, ...etc) =>\n  mx('mlb-1 mli-2 bs-px bg-separator', ...etc);\n\nexport const menuGroupLabel: ComponentFunction<MenuStyleProps> = (_props, ...etc) =>\n  mx(descriptionText, 'select-none pli-2 plb-2', ...etc);\n\nexport const menuArrow: ComponentFunction<MenuStyleProps> = (_props, ...etc) => mx('fill-separator', ...etc);\n\nexport const menuTheme: Theme<MenuStyleProps> = {\n  content: menuContent,\n  viewport: menuViewport,\n  item: menuItem,\n  separator: menuSeparator,\n  groupLabel: menuGroupLabel,\n  arrow: menuArrow,\n};\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport { type ComponentFunction, type Elevation, type MessageValence, type Theme } from '@dxos/react-ui-types';\n\nimport { mx } from '../../util';\nimport { messageValence } from '../fragments';\n\nexport type MessageStyleProps = {\n  valence?: MessageValence;\n  elevation?: Elevation;\n};\n\nexport const messageRoot: ComponentFunction<MessageStyleProps> = ({ valence }, etc) => {\n  return mx('p-trimMd rounded-md is-full', messageValence(valence), etc);\n};\n\nexport const messageTitle: ComponentFunction<MessageStyleProps> = (_, etc) => {\n  return mx('mbe-trimSm last:mbe-0 font-medium flex items-center gap-trimXs', etc);\n};\n\nexport const messageIcon: ComponentFunction<MessageStyleProps> = (_, etc) => {\n  return mx(etc);\n};\n\nexport const messageContent: ComponentFunction<MessageStyleProps> = (_, etc) => {\n  return mx('first:font-medium', etc);\n};\n\nexport const messageTheme: Theme<MessageStyleProps> = {\n  root: messageRoot,\n  content: messageContent,\n  icon: messageIcon,\n  title: messageTitle,\n};\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport { type ComponentFunction, type Theme, type Elevation } from '@dxos/react-ui-types';\n\nimport { mx } from '../../util';\nimport { focusRing, modalSurface, surfaceShadow, surfaceZIndex } from '../fragments';\n\nexport type PopoverStyleProps = Partial<{\n  constrainBlock: boolean;\n  constrainInline: boolean;\n  elevation: Elevation;\n}>;\n\nexport const popoverViewport: ComponentFunction<PopoverStyleProps> = ({ constrainBlock, constrainInline }, ...etc) =>\n  mx(\n    'rounded-md',\n    constrainBlock && 'max-bs-[--radix-popover-content-available-height] overflow-y-auto',\n    constrainInline && 'max-is-[--radix-popover-content-available-width] overflow-x-auto',\n    ...etc,\n  );\n\nexport const popoverContent: ComponentFunction<PopoverStyleProps> = ({ elevation }, ...etc) =>\n  mx(\n    'border border-separator rounded-md',\n    modalSurface,\n    surfaceShadow({ elevation: 'positioned' }),\n    surfaceZIndex({ elevation, level: 'menu' }),\n    focusRing,\n    ...etc,\n  );\n\nexport const popoverArrow: ComponentFunction<PopoverStyleProps> = (_props, ...etc) => mx('fill-separator', ...etc);\n\nexport const popoverTheme: Theme<PopoverStyleProps> = {\n  content: popoverContent,\n  viewport: popoverViewport,\n  arrow: popoverArrow,\n};\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport { type ComponentFunction, type Theme } from '@dxos/react-ui-types';\n\nimport { mx } from '../../util';\n\nexport type ScrollAreaStyleProps = {};\n\nexport const scrollAreaRoot: ComponentFunction<ScrollAreaStyleProps> = (_props, ...etc) =>\n  mx('overflow-hidden', ...etc);\n\nexport const scrollAreaViewport: ComponentFunction<ScrollAreaStyleProps> = (_props, ...etc) =>\n  mx('is-full bs-full [&>div]:table-fixed [&>div]:is-full', ...etc);\n\nexport const scrollAreaScrollbar: ComponentFunction<ScrollAreaStyleProps> = (_props, ...etc) =>\n  mx(\n    'flex select-none touch-none p-0.5 ease-out',\n    'data-[orientation=vertical]:is-1.5 sm:data-[orientation=vertical]:data-[variant=coarse]:is-3',\n    'data-[orientation=horizontal]:flex-col data-[orientation=horizontal]:bs-1.5 sm:data-[orientation=horizontal]:data-[variant=coarse]:bs-3',\n    'sm:data-[variant=coarse]:bg-separator rounded-full',\n    '[&>div]:bg-unAccent sm:[&[data-variant=coarse]>div]:bg-attention',\n    ...etc,\n  );\n\nexport const scrollAreaThumb: ComponentFunction<ScrollAreaStyleProps> = (_props, ...etc) =>\n  mx(\n    'flex-1 rounded-full relative',\n    \"before:content-[''] before:absolute before:top-1/2 before:left-1/2 before:-translate-x-1/2 before:-translate-y-1/2 before:w-full before:h-full before:min-w-[6px] before:min-h-[6px]\",\n    ...etc,\n  );\n\nexport const scrollAreaCorner: ComponentFunction<ScrollAreaStyleProps> = (_props, ...etc) => mx(...etc);\n\nexport const scrollAreaTheme: Theme<ScrollAreaStyleProps> = {\n  root: scrollAreaRoot,\n  viewport: scrollAreaViewport,\n  scrollbar: scrollAreaScrollbar,\n  thumb: scrollAreaThumb,\n  corner: scrollAreaCorner,\n};\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport { type ComponentFunction, type Elevation, type Theme } from '@dxos/react-ui-types';\n\nimport { mx } from '../../util';\nimport {\n  blockSeparator,\n  getSize,\n  ghostHighlighted,\n  modalSurface,\n  surfaceShadow,\n  separatorBorderColor,\n  surfaceZIndex,\n} from '../fragments';\n\nexport type SelectStyleProps = Partial<{\n  elevation: Elevation;\n}>;\n\nexport const selectContent: ComponentFunction<SelectStyleProps> = ({ elevation }, ...etc) => {\n  return mx(\n    'min-w-[--radix-select-trigger-width] rounded max-bs-[--radix-select-content-available-height] border border-separator',\n    modalSurface,\n    surfaceShadow({ elevation: 'positioned' }),\n    surfaceZIndex({ elevation, level: 'menu' }),\n    ...etc,\n  );\n};\n\nexport const selectViewport: ComponentFunction<SelectStyleProps> = (_props, ...etc) => mx(...etc);\n\nexport const selectItem: ComponentFunction<SelectStyleProps> = (_props, ...etc) =>\n  mx(\n    'flex items-center min-bs-[2rem] pli-3 plb-1 gap-2',\n    'text-baseText leading-none select-none outline-none',\n    '[&>svg]:invisible [&[data-state=checked]>svg]:visible',\n    ghostHighlighted,\n    ...etc,\n  );\n\nexport const selectItemIndicator: ComponentFunction<SelectStyleProps> = (_props, ...etc) => mx('items-center', ...etc);\n\nexport const selectArrow: ComponentFunction<SelectStyleProps> = (_props, ...etc) => mx('fill-separator', ...etc);\n\nexport const selectSeparator: ComponentFunction<SelectStyleProps> = (_props, ...etc) =>\n  mx(blockSeparator, separatorBorderColor, ...etc);\n\nexport const selectScrollButton: ComponentFunction<SelectStyleProps> = (_props, ...etc) =>\n  mx(modalSurface, 'flex items-center justify-center cursor-default bs-6 is-full', ...etc);\n\nexport const selectTriggerIcon: ComponentFunction<SelectStyleProps> = (_props, ...etc) => mx(getSize(2), ...etc);\n\nexport const selectTheme: Theme<SelectStyleProps> = {\n  content: selectContent,\n  viewport: selectViewport,\n  item: selectItem,\n  itemIndicator: selectItemIndicator,\n  arrow: selectArrow,\n  separator: selectSeparator,\n  scrollButton: selectScrollButton,\n  triggerIcon: selectTriggerIcon,\n};\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport { type ComponentFunction, type Theme } from '@dxos/react-ui-types';\n\nimport { mx } from '../../util';\nimport { blockSeparator, inlineSeparator, separatorBorderColor, subduedSeparatorBorderColor } from '../fragments';\n\nexport type SeparatorStyleProps = {\n  orientation?: 'horizontal' | 'vertical';\n  subdued?: boolean;\n};\n\nexport const separatorRoot: ComponentFunction<SeparatorStyleProps> = ({ orientation, subdued }, ...etc) =>\n  mx(\n    orientation === 'vertical' ? inlineSeparator : blockSeparator,\n    subdued ? subduedSeparatorBorderColor : separatorBorderColor,\n    ...etc,\n  );\n\nexport const separatorTheme: Theme<SeparatorStyleProps> = {\n  root: separatorRoot,\n};\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport type { ComponentFunction, Theme } from '@dxos/react-ui-types';\n\nimport { mx } from '../../util';\n\nexport type StatusStyleProps = {\n  indeterminate?: boolean;\n  variant?: 'default' | 'main-bottom';\n};\n\nexport const statusRoot: ComponentFunction<StatusStyleProps> = ({ variant = 'default' }, ...etc) =>\n  mx(\n    'bs-1 relative bg-hoverOverlay rounded-full overflow-hidden',\n    variant === 'main-bottom' ? 'is-full block' : 'is-20 inline-block',\n    ...etc,\n  );\n\nexport const statusBar: ComponentFunction<StatusStyleProps> = ({ indeterminate, variant = 'default' }, ...etc) =>\n  mx(\n    'absolute inset-block-0 block rounded-full',\n    variant === 'main-bottom' ? 'bg-accentSurface' : 'bg-unAccent',\n    indeterminate ? 'animate-progress-indeterminate' : 'inline-start-0',\n    ...etc,\n  );\n\nexport const statusTheme: Theme<StatusStyleProps> = {\n  root: statusRoot,\n  bar: statusBar,\n};\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport {\n  type ChromaticPalette,\n  type ComponentFunction,\n  type MessageValence,\n  type NeutralPalette,\n  type Theme,\n} from '@dxos/react-ui-types';\n\nimport { mx } from '../../util';\n\nexport type TagStyleProps = {\n  palette?: ChromaticPalette | NeutralPalette | MessageValence;\n};\n\nexport const tagRoot: ComponentFunction<TagStyleProps> = ({ palette = 'neutral' }, ...etc) => mx('dx-tag', ...etc);\n\nexport const tagTheme: Theme<TagStyleProps> = {\n  root: tagRoot,\n};\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport { type ComponentFunction, type Theme } from '@dxos/react-ui-types';\n\nimport { mx } from '../../util';\nimport { descriptionText, focusRing, modalSurface, surfaceShadow } from '../fragments';\n\nexport type ToastStyleProps = Partial<{\n  srOnly: boolean;\n}>;\n\nexport const toastViewport: ComponentFunction<ToastStyleProps> = (_props, ...etc) =>\n  mx(\n    // TODO(burdon): block-end should take into account status bar.\n    'z-40 fixed block-end-[calc(env(safe-area-inset-bottom)+1rem)] inset-start-[calc(env(safe-area-inset-left)+1rem)] inset-end-[calc(env(safe-area-inset-right)+1rem)] w-auto md:inline-end-[calc(env(safe-area-inset-right)+1rem)] md:inline-start-auto md:w-full md:max-w-sm',\n    'rounded-md flex flex-col gap-2',\n    ...etc,\n  );\n\nexport const toastRoot: ComponentFunction<ToastStyleProps> = (_props, ...etc) =>\n  mx(\n    'rounded-md flex p-2 gap-2',\n    modalSurface,\n    surfaceShadow({ elevation: 'toast' }),\n    'radix-state-open:animate-toast-slide-in-bottom md:radix-state-open:animate-toast-slide-in-right',\n    'radix-state-closed:animate-toast-hide',\n    'radix-swipe-end:animate-toast-swipe-out',\n    'translate-x-radix-toast-swipe-move-x',\n    'radix-swipe-cancel:translate-x-0 radix-swipe-cancel:duration-200 radix-swipe-cancel:ease-[ease]',\n    focusRing,\n    ...etc,\n  );\n\nexport const toastBody: ComponentFunction<ToastStyleProps> = (_props, ...etc) =>\n  mx('grow flex flex-col gap-1 justify-center pis-2', ...etc);\n\nexport const toastActions: ComponentFunction<ToastStyleProps> = (_props, ...etc) =>\n  mx('shrink-0 flex flex-col gap-1 justify-center', ...etc);\n\nexport const toastTitle: ComponentFunction<ToastStyleProps> = ({ srOnly }, ...etc) =>\n  mx('shrink-0 font-medium', srOnly && 'sr-only', ...etc);\n\nexport const toastDescription: ComponentFunction<ToastStyleProps> = ({ srOnly }, ...etc) =>\n  mx(descriptionText, 'shrink-0', srOnly && 'sr-only', ...etc);\n\nexport const toastTheme: Theme<ToastStyleProps> = {\n  viewport: toastViewport,\n  root: toastRoot,\n  body: toastBody,\n  title: toastTitle,\n  description: toastDescription,\n  actions: toastActions,\n};\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport { type ComponentFunction, type Theme } from '@dxos/react-ui-types';\n\nimport { mx } from '../../util';\n\nexport type ToolbarStyleProps = Partial<{ layoutManaged: boolean }>;\n\nexport const toolbarLayout =\n  'is-full shrink-0 flex flex-nowrap items-center gap-1 p-2 overflow-x-auto scrollbar-none contain-layout';\n\nexport const toolbarRoot: ComponentFunction<ToolbarStyleProps> = ({ layoutManaged }, ...etc) => {\n  return mx('bg-toolbarSurface dx-toolbar', !layoutManaged && toolbarLayout, ...etc);\n};\n\nexport const toolbarTheme: Theme<ToolbarStyleProps> = {\n  root: toolbarRoot,\n};\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport { type ComponentFunction, type Theme, type Elevation } from '@dxos/react-ui-types';\n\nimport { mx } from '../../util';\nimport { chromeText, surfaceShadow, popperMotion, surfaceZIndex } from '../fragments';\n\nexport type TooltipStyleProps = Partial<{\n  elevation: Elevation;\n}>;\n\nexport const tooltipContent: ComponentFunction<TooltipStyleProps> = ({ elevation }, ...etc) =>\n  mx(\n    'inline-flex items-center rounded-sm plb-1 pli-2 max-is-64 bg-inverseSurface text-inverseSurfaceText',\n    popperMotion,\n    surfaceShadow({ elevation: 'positioned' }),\n    surfaceZIndex({ elevation, level: 'tooltip' }),\n    chromeText,\n    ...etc,\n  );\n\nexport const tooltipArrow: ComponentFunction<TooltipStyleProps> = (_props, ...etc) => mx('fill-inverseSurface', ...etc);\n\nexport const tooltipTheme: Theme<TooltipStyleProps> = {\n  content: tooltipContent,\n  arrow: tooltipArrow,\n};\n", "//\n// Copyright 2024 DXOS.org\n//\n\nimport type { ComponentFunction, Theme } from '@dxos/react-ui-types';\n\nimport { mx } from '../../util';\n\nexport type TreegridStyleProps = Partial<{\n  level: number;\n  indent: boolean;\n}>;\n\nconst levelStyles = new Map<number, string>([\n  [1, '[&>.indent:first-of-type]:pis-0 font-medium'],\n  [2, '[&>.indent:first-of-type]:pis-0'],\n  [3, '[&>.indent:first-of-type]:pis-1'],\n  [4, '[&>.indent:first-of-type]:pis-2'],\n  [5, '[&>.indent:first-of-type]:pis-3'],\n  [6, '[&>.indent:first-of-type]:pis-4'],\n  [7, '[&>.indent:first-of-type]:pis-5'],\n  [8, '[&>.indent:first-of-type]:pis-6'],\n]);\n\nexport const treegridRoot: ComponentFunction<TreegridStyleProps> = (_, ...etc) => mx('grid', ...etc);\n\nexport const treegridRow: ComponentFunction<TreegridStyleProps> = ({ level = 1 }, ...etc) =>\n  mx('contents dx-focus-ring-inset', levelStyles.get(Math.min(Math.max(Math.round(level), 1), 8)), ...etc);\n\nexport const treegridCell: ComponentFunction<TreegridStyleProps> = ({ indent }, ...etc) =>\n  mx(indent && 'indent', ...etc);\n\nexport const treegridTheme: Theme<TreegridStyleProps> = {\n  root: treegridRoot,\n  row: treegridRow,\n  cell: treegridCell,\n};\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport { type ComponentFunction, type Theme } from '@dxos/react-ui-types';\nimport { get } from '@dxos/util';\n\nimport {\n  anchoredOverflowTheme,\n  avatarTheme,\n  breadcrumbTheme,\n  buttonTheme,\n  dialogTheme,\n  menuTheme,\n  iconTheme,\n  iconButtonTheme,\n  inputTheme,\n  linkTheme,\n  listTheme,\n  mainTheme,\n  messageTheme,\n  popoverTheme,\n  scrollAreaTheme,\n  selectTheme,\n  separatorTheme,\n  statusTheme,\n  tagTheme,\n  toastTheme,\n  toolbarTheme,\n  tooltipTheme,\n  treegridTheme,\n} from './components';\n\nexport const defaultTheme: Theme<Record<string, any>> = {\n  themeName: () => 'default',\n\n  anchoredOverflow: anchoredOverflowTheme,\n  avatar: avatarTheme,\n  breadcrumb: breadcrumbTheme,\n  button: buttonTheme,\n  dialog: dialogTheme,\n  icon: iconTheme,\n  iconButton: iconButtonTheme,\n  input: inputTheme,\n  link: linkTheme,\n  list: listTheme,\n  main: mainTheme,\n  message: messageTheme,\n  menu: menuTheme,\n  popover: popoverTheme,\n  select: selectTheme,\n  scrollArea: scrollAreaTheme,\n  separator: separatorTheme,\n  status: statusTheme,\n  tag: tagTheme,\n  toast: toastTheme,\n  toolbar: toolbarTheme,\n  tooltip: tooltipTheme,\n  treegrid: treegridTheme,\n};\n\nexport const bindTheme = <P extends Record<string, any>>(theme: Theme<Record<string, any>>) => {\n  return (path: string, defaultClassName: string, styleProps: P, ...options: any[]): string => {\n    const result: Theme<P> | ComponentFunction<P> = get(theme, path);\n    return typeof result === 'function' ? result(styleProps, ...options) : defaultClassName;\n  };\n};\n\nexport const defaultTx = bindTheme(defaultTheme);\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport { tailwindConfig, type TailwindConfig } from './config';\n\nconst tokens: TailwindConfig['theme'] = tailwindConfig({}).theme;\n\nexport * from './styles';\nexport * from './types';\nexport * from './util';\n\nexport { userDefaultTokenSet, hues } from './config/tokens';\n\nexport { tokens };\n"],
  "mappings": "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",
  "names": ["adapter", "reflectiveRelation", "initial", "slope", "method", "gamuts", "DEG_RAD", "Math", "PI", "hueKeyPoint", "hue", "hueDeg", "keyPoint", "sin", "lowerCp", "upperCp", "torsion", "huePalettes", "red", "orange", "amber", "yellow", "lime", "green", "emerald", "teal", "cyan", "sky", "blue", "indigo", "violet", "purple", "fuchsia", "pink", "rose", "systemPalettes", "neutral", "values", "primary", "physicalSeries", "physicalColors", "namespace", "definitions", "series", "accompanyingSeries", "conditions", "srgb", "p3", "rec2020", "Object", "entries", "reduce", "acc", "id", "gamut", "extends", "physicalValueRelation", "hueSememes", "Object", "keys", "huePalettes", "reduce", "acc", "palette", "light", "dark", "valenceAliasSememeStems", "valenceMapping", "emerald", "cyan", "amber", "rose", "primary", "fuchsia", "valenceAliases", "stem", "entries", "hue", "valences", "root", "map", "valence", "sheetSememes", "axisSurface", "light", "dark", "axisText", "axisSelectedSurface", "axisSelectedText", "gridCell", "gridCellSelected", "gridOverlay", "gridSelectionOverlay", "gridHighlight", "gridCommented", "gridCommentedActive", "sheetAliases", "activeSurface", "root", "getMapValue", "map", "key", "defaultValue", "value", "applyAlpha", "sememe", "alpha", "light", "dark", "DARK_ELEVATION_MIN", "DARK_ELEVATION_MAX", "DARK_CONTRAST_MIN", "DARK_CONTRAST_MAX", "LIGHT_ELEVATION_MIN", "LIGHT_ELEVATION_MAX", "LIGHT_CONTRAST_MIN", "LIGHT_CONTRAST_MAX", "ELEVATION_SCALE", "CONTRAST_SCALE", "darkElevationCadence", "depth", "Math", "round", "darkContrastCadence", "lightElevationCadence", "lightContrastCadence", "elevationCadence", "lightDepth", "darkDepth", "contrastCadence", "systemSememes", "baseSurface", "groupSurface", "modalSurface", "textInputSurfaceBase", "textInputSurfaceGroup", "textInputSurfaceModal", "inputSurfaceBase", "inputSurfaceGroup", "inputSurfaceModal", "hoverSurfaceBase", "hoverSurfaceGroup", "hoverSurfaceModal", "separatorBase", "separatorGroup", "separatorModal", "subduedSeparator", "unAccent", "unAccentHover", "hoverOverlay", "scrimSurface", "focusSurface", "inverseSurface", "accentSurfaceRelated", "accentSurfaceHover", "accentSurface", "baseText", "inverseSurfaceText", "description", "subdued", "accentText", "accentTextHover", "neutralFocusIndicator", "accentFocusIndicator", "accentSurfaceText", "aliasDefs", "deckSurface", "root", "textInputSurface", "group", "modal", "inputSurface", "hoverSurface", "separator", "activeSurface", "sidebarSurface", "headerSurface", "cardSurface", "toolbarSurface", "attention", "currentRelated", "systemAliases", "Object", "entries", "reduce", "aliases", "alias", "values", "forEach", "record", "list", "push", "groupAliases", "systemAliases", "groupSurface", "root", "modalAliases", "modalSurface", "aliasColors", "conditions", "group", "map", "alias", "join", "modal", "aliases", "sheetAliases", "valenceAliases", "namespace", "lengthsFacet", "physical", "namespace", "conditions", "root", "series", "line", "unit", "initial", "slope", "lacuna", "semantic", "sememes", "noLine", "hairLine", "thickLine", "trimXs", "trimSm", "trimMd", "trimLg", "alias", "fine", "coarse", "flush", "aliases", "maxSizesFacet", "size", "prose", "containerMaxWidth", "popoverMaxWidth", "callsSememes", "callActive", "light", "dark", "callAlert", "codemirrorSememes", "cmCodeblock", "light", "dark", "cmActiveLine", "cmSeparator", "cmCursor", "cmSelection", "cmFocusedSelection", "cmHighlight", "cmHighlightSurface", "cmComment", "cmCommentSurface", "semanticColors", "conditions", "light", "dark", "sememes", "callsSememes", "codemirrorSememes", "sheetSememes", "hueSememes", "systemSememes", "namespace", "tokenSet", "colors", "physical", "physicalColors", "semantic", "semanticColors", "alias", "aliasColors", "lengths", "lengthsFacet", "maxSizes", "maxSizesFacet", "hues", "Object", "keys", "huePalettes", "adapterConfig", "facet", "disposition", "tokenization", "borderWidth", "ringWidth", "ringOffsetWidth", "outlineWidth", "spacing", "userDefaultTokenSet", "definitions", "series", "neutral", "primary", "accompanyingSeries", "conditions", "namespace", "sememes", "systemSememes", "aliases", "systemAliases", "tokensTailwindConfig", "adapter", "tailwindContainers", "tailwindcssForms", "merge", "tailwindScrollbar", "defaultConfig", "tailwindcssLogical", "tailwindcssRadix", "extend", "extendTokens", "overrideTokens", "tokensTailwindConfig", "tailwindConfig", "env", "content", "extensions", "darkMode", "theme", "fontFamily", "body", "defaultConfig", "sans", "mono", "merge", "spacing", "prose", "containerMaxWidth", "popoverMaxWidth", "borderRadius", "none", "sm", "DEFAULT", "md", "lg", "screens", "raw", "fontSize", "xs", "lineHeight", "base", "xl", "boxShadow", "slider", "transitionProperty", "transitionTimingFunction", "keyframes", "slideDownAndFade", "from", "opacity", "transform", "to", "slideLeftAndFade", "slideUpAndFade", "slideRightAndFade", "fadeIn", "slideDown", "height", "slideUp", "left", "width", "animation", "spin", "shimmer", "colors", "inherit", "current", "transparent", "black", "white", "plugins", "tailwindcssLogical", "tailwindcssForms", "tailwindcssRadix", "tailwindContainers", "tailwindScrollbar", "mode", "future", "hoverOnlyWhenSupported", "coarseBlockSize", "coarseTextPadding", "coarseButtonPadding", "coarseDimensions", "coarseButtonDimensions", "fineBlockSize", "fineTextPadding", "fineButtonPadding", "fineDimensions", "fineButtonDimensions", "densityBlockSize", "density", "staticDisabled", "dataDisabled", "textBlockWidth", "contentShadow", "_", "surfaceShadow", "elevation", "surfaceZIndex", "level", "focusRing", "dropRing", "dropRingInner", "subduedFocus", "staticFocusRing", "group", "props", "elevation", "surfaceShadow", "hoverColors", "ghostHover", "subtleHover", "hoverableControls", "groupHoverControlItemWithTransition", "hoverableFocusedKeyboardControls", "hoverableFocusedWithinControls", "hoverableFocusedControls", "hoverableOpenControlItem", "hoverableControlItem", "staticHoverableControls", "hoverableControlItemTransition", "bounceLayout", "fixedInsetFlexLayout", "popperMotion", "separatorBorderColor", "subduedSeparatorBorderColor", "inlineSeparator", "blockSeparator", "ghostSelectedCurrent", "ghostHover", "ghostHighlighted", "ghostSelectedTrackingInterFromNormal", "ghostSelected", "ghostSelectedContainerMd", "staticGhostSelectedCurrent", "current", "selected", "staticGhostSelected", "shimmer", "strongShimmer", "baseSurface", "sidebarSurface", "sidebarBorder", "activeSurface", "groupBorder", "modalSurface", "attentionSurface", "accentSurface", "colors", "color", "bg", "text", "tag", "getHashColor", "type", "hash", "split", "reduce", "acc", "char", "charCodeAt", "length", "extendTailwindMerge", "validators", "mergeConfigs", "validators", "getLength", "validators", "isLength", "isArbitraryLength", "getLengthWithAuto", "getLengthWithEmpty", "getAny", "isAny", "getRounded", "isTshirtSize", "classGroupsConfig", "float", "clear", "resize", "text", "bs", "is", "mlb", "mli", "mbs", "mbe", "mis", "mie", "plb", "pli", "pbs", "pbe", "pis", "pie", "withLogical", "prevConfig", "mergeConfigs", "extend", "classGroups", "conflictingClassGroups", "p", "m", "overscroll", "rounded", "border", "mx", "extendTailwindMerge", "extend", "classGroups", "validators", "isArbitraryNumber", "withLogical", "sizeWidthMap", "Map", "sizeHeightMap", "sizes", "Set", "keys", "getSizeHeight", "get", "bind", "getSizeWidth", "getSize", "size", "mx", "computeSize", "value", "defaultSize", "has", "wholeSeries", "Math", "floor", "halfSeries", "doubleSeries", "quadrupleSeries", "sizeValue", "placeholderText", "staticPlaceholderText", "descriptionText", "descriptionTextPrimary", "descriptionMessage", "chromeText", "successText", "infoText", "warningText", "errorText", "valenceColorText", "valence", "undefined", "neutralMessageColors", "successMessageColors", "infoMessageColors", "warningMessageColors", "errorMessageColors", "messageValence", "anchoredOverflowRoot", "_props", "etc", "mx", "anchoredOverflowAnchor", "anchoredOverflowTheme", "root", "anchor", "avatarRoot", "size", "inGroup", "etc", "mx", "getSize", "avatarLabel", "srOnly", "avatarDescription", "descriptionText", "avatarFrame", "variant", "avatarStatusIcon", "status", "avatarRing", "animation", "avatarFallbackText", "_props", "avatarGroup", "avatarGroupLabel", "getSizeHeight", "avatarGroupDescription", "avatarTheme", "root", "label", "description", "statusIcon", "frame", "ring", "fallbackText", "group", "groupLabel", "groupDescription", "breadcrumbRoot", "_props", "etc", "mx", "breadcrumbList", "breadcrumbListItem", "breadcrumbCurrent", "breadcrumbSeparator", "breadcrumbTheme", "root", "list", "listItem", "current", "separator", "primaryButtonColors", "staticDefaultButtonColors", "defaultButtonColors", "mx", "ghostButtonColors", "ghostHover", "buttonRoot", "_props", "etc", "buttonGroup", "props", "buttonTheme", "root", "group", "dialogOverlay", "_props", "etc", "mx", "dialogContent", "inOverlayLayout", "dialogTitle", "srOnly", "dialogDescription", "descriptionText", "dialogTheme", "overlay", "content", "title", "description", "iconRoot", "size", "etc", "mx", "getSize", "iconTheme", "root", "iconButtonRoot", "_props", "etc", "mx", "iconButtonTheme", "root", "neutralInputValence", "successInputValence", "infoInputValence", "warningInputValence", "errorInputValence", "textInputSurfaceFocus", "textInputSurfaceHover", "booleanInputSurface", "booleanInputSurfaceHover", "inputTextLabel", "inputValence", "valence", "sharedSubduedInputStyles", "props", "density", "fineBlockSize", "coarseBlockSize", "placeholderText", "subduedFocus", "disabled", "staticDisabled", "sharedDefaultInputStyles", "fineDimensions", "coarseDimensions", "sharedStaticInputStyles", "focused", "validationValence", "staticFocusRing", "inputInput", "etc", "variant", "mx", "focusRing", "inputCheckbox", "size", "getSize", "inputCheckboxIndicator", "checked", "computeSize", "sizeValue", "inputSwitch", "getSizeHeight", "getSizeWidth", "inputSwitchThumb", "inputWithSegmentsInput", "inputLabel", "srOnly", "inputDescription", "descriptionText", "inputDescriptionAndValidation", "inputValidation", "valenceColorText", "inputTheme", "input", "inputWithSegments", "checkbox", "checkboxIndicator", "label", "description", "validation", "switch", "switchThumb", "descriptionAndValidation", "linkRoot", "variant", "etc", "mx", "focusRing", "linkTheme", "root", "listRoot", "_", "etc", "mx", "listItem", "collapsible", "listItemEndcap", "density", "getSize", "listItemHeading", "densityBlockSize", "listItemDragHandleIcon", "_props", "listItemOpenTrigger", "ghostHover", "focusRing", "listItemOpenTriggerIcon", "listTheme", "root", "item", "endcap", "heading", "dragHandleIcon", "openTrigger", "openTriggerIcon", "topbarBlockPaddingStart", "bottombarBlockPaddingEnd", "mainSidebar", "_", "etc", "mx", "mainPadding", "mainPaddingTransitions", "mainContent", "bounce", "mainIntrinsicSize", "mainOverlay", "mainTheme", "content", "sidebar", "overlay", "menuViewport", "_props", "etc", "mx", "menuContent", "elevation", "surfaceZIndex", "level", "surfaceShadow", "modalSurface", "popperMotion", "menuItem", "subduedFocus", "dataDisabled", "menuSeparator", "menuGroupLabel", "descriptionText", "menuArrow", "menuTheme", "content", "viewport", "item", "separator", "groupLabel", "arrow", "messageRoot", "valence", "etc", "mx", "messageValence", "messageTitle", "_", "messageIcon", "messageContent", "messageTheme", "root", "content", "icon", "title", "popoverViewport", "constrainBlock", "constrainInline", "etc", "mx", "popoverContent", "elevation", "modalSurface", "surfaceShadow", "surfaceZIndex", "level", "focusRing", "popoverArrow", "_props", "popoverTheme", "content", "viewport", "arrow", "scrollAreaRoot", "_props", "etc", "mx", "scrollAreaViewport", "scrollAreaScrollbar", "scrollAreaThumb", "scrollAreaCorner", "scrollAreaTheme", "root", "viewport", "scrollbar", "thumb", "corner", "selectContent", "elevation", "etc", "mx", "modalSurface", "surfaceShadow", "surfaceZIndex", "level", "selectViewport", "_props", "selectItem", "ghostHighlighted", "selectItemIndicator", "selectArrow", "selectSeparator", "blockSeparator", "separatorBorderColor", "selectScrollButton", "selectTriggerIcon", "getSize", "selectTheme", "content", "viewport", "item", "itemIndicator", "arrow", "separator", "scrollButton", "triggerIcon", "separatorRoot", "orientation", "subdued", "etc", "mx", "inlineSeparator", "blockSeparator", "subduedSeparatorBorderColor", "separatorBorderColor", "separatorTheme", "root", "statusRoot", "variant", "etc", "mx", "statusBar", "indeterminate", "statusTheme", "root", "bar", "tagRoot", "palette", "etc", "mx", "tagTheme", "root", "toastViewport", "_props", "etc", "mx", "toastRoot", "modalSurface", "surfaceShadow", "elevation", "focusRing", "toastBody", "toastActions", "toastTitle", "srOnly", "toastDescription", "descriptionText", "toastTheme", "viewport", "root", "body", "title", "description", "actions", "toolbarLayout", "toolbarRoot", "layoutManaged", "etc", "mx", "toolbarTheme", "root", "tooltipContent", "elevation", "etc", "mx", "popperMotion", "surfaceShadow", "surfaceZIndex", "level", "chromeText", "tooltipArrow", "_props", "tooltipTheme", "content", "arrow", "levelStyles", "Map", "treegridRoot", "_", "etc", "mx", "treegridRow", "level", "get", "Math", "min", "max", "round", "treegridCell", "indent", "treegridTheme", "root", "row", "cell", "get", "defaultTheme", "themeName", "anchoredOverflow", "anchoredOverflowTheme", "avatar", "avatarTheme", "breadcrumb", "breadcrumbTheme", "button", "buttonTheme", "dialog", "dialogTheme", "icon", "iconTheme", "iconButton", "iconButtonTheme", "input", "inputTheme", "link", "linkTheme", "list", "listTheme", "main", "mainTheme", "message", "messageTheme", "menu", "menuTheme", "popover", "popoverTheme", "select", "selectTheme", "scrollArea", "scrollAreaTheme", "separator", "separatorTheme", "status", "statusTheme", "tag", "tagTheme", "toast", "toastTheme", "toolbar", "toolbarTheme", "tooltip", "tooltipTheme", "treegrid", "treegridTheme", "bindTheme", "theme", "path", "defaultClassName", "styleProps", "options", "result", "get", "defaultTx", "tokens", "tailwindConfig", "theme"]
}
