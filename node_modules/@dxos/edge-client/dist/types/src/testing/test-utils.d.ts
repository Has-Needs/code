import WebSocket from 'isomorphic-ws';
import { Trigger } from '@dxos/async';
import { type Message } from '@dxos/protocols/buf/dxos/edge/messenger_pb';
import { WebSocketMuxer } from '../edge-ws-muxer';
export declare const DEFAULT_PORT = 8080;
type TestEdgeWsServerParams = {
    admitConnection?: Trigger;
    payloadDecoder?: (payload: Uint8Array) => any;
    messageHandler?: (payload: any) => Promise<Uint8Array | undefined>;
};
export declare const createTestEdgeWsServer: (port?: number, params?: TestEdgeWsServerParams) => Promise<{
    server: WebSocket.Server;
    messageSink: any[];
    messageSourceLog: any[];
    endpoint: string;
    cleanup: () => void;
    currentConnection: () => {
        ws: WebSocket;
        muxer: WebSocketMuxer;
    } | undefined;
    sendResponseMessage: (request: Message, responsePayload: Uint8Array) => void;
    sendMessage: (msg: Message) => Promise<void>;
    closeConnection: () => Promise<void>;
}>;
export {};
//# sourceMappingURL=test-utils.d.ts.map