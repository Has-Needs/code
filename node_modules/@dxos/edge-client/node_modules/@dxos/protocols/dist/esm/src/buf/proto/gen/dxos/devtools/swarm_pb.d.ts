import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import type { PublicKey } from "../keys_pb.js";
import type { Message } from "@bufbuild/protobuf";
/**
 * Describes the file dxos/devtools/swarm.proto.
 */
export declare const file_dxos_devtools_swarm: GenFile;
/**
 * @generated from message dxos.devtools.swarm.SwarmInfo
 */
export type SwarmInfo = Message<"dxos.devtools.swarm.SwarmInfo"> & {
    /**
     * @generated from field: dxos.keys.PublicKey id = 1;
     */
    id?: PublicKey;
    /**
     * @generated from field: dxos.keys.PublicKey topic = 2;
     */
    topic?: PublicKey;
    /**
     * @generated from field: optional string label = 3;
     */
    label?: string;
    /**
     * @generated from field: bool is_active = 4;
     */
    isActive: boolean;
    /**
     * @generated from field: repeated dxos.devtools.swarm.ConnectionInfo connections = 5;
     */
    connections: ConnectionInfo[];
};
/**
 * Describes the message dxos.devtools.swarm.SwarmInfo.
 * Use `create(SwarmInfoSchema)` to create a new message.
 */
export declare const SwarmInfoSchema: GenMessage<SwarmInfo>;
/**
 * @generated from message dxos.devtools.swarm.ConnectionInfo
 */
export type ConnectionInfo = Message<"dxos.devtools.swarm.ConnectionInfo"> & {
    /**
     * @generated from field: string state = 1;
     */
    state: string;
    /**
     * @generated from field: dxos.keys.PublicKey session_id = 2;
     */
    sessionId?: PublicKey;
    /**
     * @generated from field: dxos.keys.PublicKey remote_peer_id = 3;
     */
    remotePeerId?: PublicKey;
    /**
     * @generated from field: optional string transport = 4;
     */
    transport?: string;
    /**
     * @generated from field: repeated string protocol_extensions = 5;
     */
    protocolExtensions: string[];
    /**
     * @generated from field: repeated dxos.devtools.swarm.ConnectionEvent events = 6;
     */
    events: ConnectionEvent[];
    /**
     * @generated from field: repeated dxos.devtools.swarm.ConnectionInfo.StreamStats streams = 7;
     */
    streams: ConnectionInfo_StreamStats[];
    /**
     * @generated from field: optional string close_reason = 8;
     */
    closeReason?: string;
    /**
     * @generated from field: optional string identity = 9;
     */
    identity?: string;
    /**
     * @generated from field: optional uint32 readBufferSize = 10;
     */
    readBufferSize?: number;
    /**
     * @generated from field: optional uint32 writeBufferSize = 11;
     */
    writeBufferSize?: number;
    /**
     * @generated from field: optional google.protobuf.Timestamp last_update = 12;
     */
    lastUpdate?: Timestamp;
    /**
     * @generated from field: optional string transport_details = 13;
     */
    transportDetails?: string;
    /**
     * TODO(nf): uint64?
     *
     * @generated from field: optional uint32 transport_bytes_sent = 14;
     */
    transportBytesSent?: number;
    /**
     * @generated from field: optional uint32 transport_bytes_received = 15;
     */
    transportBytesReceived?: number;
    /**
     * @generated from field: optional uint32 transport_packets_sent = 16;
     */
    transportPacketsSent?: number;
    /**
     * @generated from field: optional uint32 transport_packets_received = 17;
     */
    transportPacketsReceived?: number;
};
/**
 * Describes the message dxos.devtools.swarm.ConnectionInfo.
 * Use `create(ConnectionInfoSchema)` to create a new message.
 */
export declare const ConnectionInfoSchema: GenMessage<ConnectionInfo>;
/**
 * @generated from message dxos.devtools.swarm.ConnectionInfo.StreamStats
 */
export type ConnectionInfo_StreamStats = Message<"dxos.devtools.swarm.ConnectionInfo.StreamStats"> & {
    /**
     * @generated from field: uint32 id = 1;
     */
    id: number;
    /**
     * @generated from field: string tag = 2;
     */
    tag: string;
    /**
     * @generated from field: optional string contentType = 5;
     */
    contentType?: string;
    /**
     * @generated from field: uint32 bytesSent = 3;
     */
    bytesSent: number;
    /**
     * @generated from field: uint32 bytesReceived = 4;
     */
    bytesReceived: number;
    /**
     * bytes per second.
     *
     * @generated from field: optional uint32 bytesSentRate = 6;
     */
    bytesSentRate?: number;
    /**
     * @generated from field: optional uint32 bytesReceivedRate = 7;
     */
    bytesReceivedRate?: number;
    /**
     * @generated from field: optional uint32 writeBufferSize = 8;
     */
    writeBufferSize?: number;
};
/**
 * Describes the message dxos.devtools.swarm.ConnectionInfo.StreamStats.
 * Use `create(ConnectionInfo_StreamStatsSchema)` to create a new message.
 */
export declare const ConnectionInfo_StreamStatsSchema: GenMessage<ConnectionInfo_StreamStats>;
/**
 * @generated from message dxos.devtools.swarm.ConnectionEvent
 */
export type ConnectionEvent = Message<"dxos.devtools.swarm.ConnectionEvent"> & {
    /**
     * @generated from field: string type = 1;
     */
    type: string;
    /**
     * @generated from field: optional string new_state = 2;
     */
    newState?: string;
    /**
     * @generated from field: optional string error = 3;
     */
    error?: string;
};
/**
 * Describes the message dxos.devtools.swarm.ConnectionEvent.
 * Use `create(ConnectionEventSchema)` to create a new message.
 */
export declare const ConnectionEventSchema: GenMessage<ConnectionEvent>;
//# sourceMappingURL=swarm_pb.d.ts.map