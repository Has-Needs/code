import { type PublicKey } from '@dxos/keys';
import { type Timeframe } from '@dxos/timeframe';
import { type CredentialsMessage, type FeedMessage } from './proto/gen/dxos/echo/feed.js';
import { type EchoObjectBatch } from './proto/gen/dxos/echo/object.js';
export type FeedMeta = {
    feedKey: PublicKey;
    seq: number;
};
export type FeedBlock<T> = {
    feedKey: PublicKey;
    seq: number;
    data: T;
};
export type FeedMessageBlock = FeedBlock<FeedMessage>;
export interface MutationMeta extends FeedMeta {
    memberKey: PublicKey;
}
export interface MutationMetaWithTimeframe extends MutationMeta {
    timeframe: Timeframe;
}
export interface IHaloStream {
    meta: FeedMeta;
    data: CredentialsMessage;
}
export interface IEchoStream {
    meta: MutationMetaWithTimeframe;
    batch: EchoObjectBatch;
}
export type ObjectId = string;
//# sourceMappingURL=types.d.ts.map