import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Any } from "@bufbuild/protobuf/wkt";
import type { Message as Message$1 } from "@bufbuild/protobuf";
/**
 * Describes the file dxos/mesh/protocol.proto.
 */
export declare const file_dxos_mesh_protocol: GenFile;
/**
 * TODO(burdon): Rename ProtoMessage.
 *
 * @generated from message dxos.mesh.protocol.Message
 */
export type Message = Message$1<"dxos.mesh.protocol.Message"> & {
    /**
     * TODO(burdon): nm???
     *
     * @generated from field: string nmId = 1;
     */
    nmId: string;
    /**
     * @generated from field: bool nmResponse = 2;
     */
    nmResponse: boolean;
    /**
     * @generated from field: bool nmEphemeral = 3;
     */
    nmEphemeral: boolean;
    /**
     * @generated from field: google.protobuf.Any nmData = 4;
     */
    nmData?: Any;
};
/**
 * Describes the message dxos.mesh.protocol.Message.
 * Use `create(MessageSchema)` to create a new message.
 */
export declare const MessageSchema: GenMessage<Message>;
/**
 * TODO(burdon): Rename ProtoError.
 *
 * @generated from message dxos.mesh.protocol.Error
 */
export type Error = Message$1<"dxos.mesh.protocol.Error"> & {
    /**
     * @generated from field: string code = 1;
     */
    code: string;
    /**
     * @generated from field: string message = 2;
     */
    message: string;
};
/**
 * Describes the message dxos.mesh.protocol.Error.
 * Use `create(ErrorSchema)` to create a new message.
 */
export declare const ErrorSchema: GenMessage<Error>;
/**
 * TODO(burdon): Rename ProtoBuffer.
 *
 * @generated from message dxos.mesh.protocol.Buffer
 */
export type Buffer = Message$1<"dxos.mesh.protocol.Buffer"> & {
    /**
     * @generated from field: bytes data = 1;
     */
    data: Uint8Array;
};
/**
 * Describes the message dxos.mesh.protocol.Buffer.
 * Use `create(BufferSchema)` to create a new message.
 */
export declare const BufferSchema: GenMessage<Buffer>;
//# sourceMappingURL=protocol_pb.d.ts.map