import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { EmptySchema, Timestamp } from "@bufbuild/protobuf/wkt";
import type { Invitation_AuthMethod } from "../client/invitation_pb.js";
import type { TimeframeVector } from "../echo/timeframe_pb.js";
import type { Credential, DeviceProfileDocument, ProfileDocument, SpaceMember_Role } from "./credentials_pb.js";
import type { PublicKey } from "../keys_pb.js";
import type { Message } from "@bufbuild/protobuf";
/**
 * Describes the file dxos/halo/invitations.proto.
 */
export declare const file_dxos_halo_invitations: GenFile;
/**
 * @generated from message dxos.halo.invitations.InvitationOptions
 */
export type InvitationOptions = Message<"dxos.halo.invitations.InvitationOptions"> & {
    /**
     * / Role of the peer.
     *
     * @generated from field: dxos.halo.invitations.InvitationOptions.Role role = 1;
     */
    role: InvitationOptions_Role;
};
/**
 * Describes the message dxos.halo.invitations.InvitationOptions.
 * Use `create(InvitationOptionsSchema)` to create a new message.
 */
export declare const InvitationOptionsSchema: GenMessage<InvitationOptions>;
/**
 * @generated from enum dxos.halo.invitations.InvitationOptions.Role
 */
export declare enum InvitationOptions_Role {
    /**
     * @generated from enum value: GUEST = 0;
     */
    GUEST = 0,
    /**
     * @generated from enum value: HOST = 1;
     */
    HOST = 1
}
/**
 * Describes the enum dxos.halo.invitations.InvitationOptions.Role.
 */
export declare const InvitationOptions_RoleSchema: GenEnum<InvitationOptions_Role>;
/**
 * @generated from message dxos.halo.invitations.IntroductionRequest
 */
export type IntroductionRequest = Message<"dxos.halo.invitations.IntroductionRequest"> & {
    /**
     * / Guest's profile.
     *
     * @generated from field: optional dxos.halo.credentials.ProfileDocument profile = 1;
     */
    profile?: ProfileDocument;
    /**
     * @generated from field: optional string invitation_id = 2;
     */
    invitationId?: string;
};
/**
 * Describes the message dxos.halo.invitations.IntroductionRequest.
 * Use `create(IntroductionRequestSchema)` to create a new message.
 */
export declare const IntroductionRequestSchema: GenMessage<IntroductionRequest>;
/**
 * @generated from message dxos.halo.invitations.IntroductionResponse
 */
export type IntroductionResponse = Message<"dxos.halo.invitations.IntroductionResponse"> & {
    /**
     * @generated from field: dxos.client.services.Invitation.AuthMethod auth_method = 1;
     */
    authMethod: Invitation_AuthMethod;
    /**
     * / Present when auth_method is KNOWN_PUBLIC_KEY.
     *
     * @generated from field: optional bytes challenge = 2;
     */
    challenge?: Uint8Array;
    /**
     * / Only present for testing invitation types.
     *
     * @generated from field: optional dxos.keys.PublicKey space_key = 100;
     */
    spaceKey?: PublicKey;
};
/**
 * Describes the message dxos.halo.invitations.IntroductionResponse.
 * Use `create(IntroductionResponseSchema)` to create a new message.
 */
export declare const IntroductionResponseSchema: GenMessage<IntroductionResponse>;
/**
 * @generated from message dxos.halo.invitations.AuthenticationRequest
 */
export type AuthenticationRequest = Message<"dxos.halo.invitations.AuthenticationRequest"> & {
    /**
     * / Present when auth_method is SHARED_SECRET.
     *
     * @generated from field: optional string auth_code = 1;
     */
    authCode?: string;
    /**
     * / Present when auth_method is KNOWN_PUBLIC_KEY.
     *
     * @generated from field: optional bytes signed_challenge = 2;
     */
    signedChallenge?: Uint8Array;
};
/**
 * Describes the message dxos.halo.invitations.AuthenticationRequest.
 * Use `create(AuthenticationRequestSchema)` to create a new message.
 */
export declare const AuthenticationRequestSchema: GenMessage<AuthenticationRequest>;
/**
 * @generated from message dxos.halo.invitations.AuthenticationResponse
 */
export type AuthenticationResponse = Message<"dxos.halo.invitations.AuthenticationResponse"> & {
    /**
     * @generated from field: optional dxos.halo.invitations.AuthenticationResponse.Status status = 1;
     */
    status?: AuthenticationResponse_Status;
};
/**
 * Describes the message dxos.halo.invitations.AuthenticationResponse.
 * Use `create(AuthenticationResponseSchema)` to create a new message.
 */
export declare const AuthenticationResponseSchema: GenMessage<AuthenticationResponse>;
/**
 * @generated from enum dxos.halo.invitations.AuthenticationResponse.Status
 */
export declare enum AuthenticationResponse_Status {
    /**
     * @generated from enum value: OK = 0;
     */
    OK = 0,
    /**
     * @generated from enum value: INVALID_OTP = 1;
     */
    INVALID_OTP = 1,
    /**
     * @generated from enum value: INVALID_OPT_ATTEMPTS = 2;
     */
    INVALID_OPT_ATTEMPTS = 2,
    /**
     * @generated from enum value: INTERNAL_ERROR = 3;
     */
    INTERNAL_ERROR = 3,
    /**
     * @generated from enum value: INVALID_SIGNATURE = 4;
     */
    INVALID_SIGNATURE = 4
}
/**
 * Describes the enum dxos.halo.invitations.AuthenticationResponse.Status.
 */
export declare const AuthenticationResponse_StatusSchema: GenEnum<AuthenticationResponse_Status>;
/**
 * @generated from message dxos.halo.invitations.DeviceAdmissionRequest
 */
export type DeviceAdmissionRequest = Message<"dxos.halo.invitations.DeviceAdmissionRequest"> & {
    /**
     * @generated from field: dxos.keys.PublicKey device_key = 1;
     */
    deviceKey?: PublicKey;
    /**
     * @generated from field: dxos.keys.PublicKey control_feed_key = 2;
     */
    controlFeedKey?: PublicKey;
    /**
     * @generated from field: dxos.keys.PublicKey data_feed_key = 3;
     */
    dataFeedKey?: PublicKey;
    /**
     * @generated from field: optional dxos.halo.credentials.DeviceProfileDocument profile = 4;
     */
    profile?: DeviceProfileDocument;
};
/**
 * Describes the message dxos.halo.invitations.DeviceAdmissionRequest.
 * Use `create(DeviceAdmissionRequestSchema)` to create a new message.
 */
export declare const DeviceAdmissionRequestSchema: GenMessage<DeviceAdmissionRequest>;
/**
 * @generated from message dxos.halo.invitations.SpaceAdmissionRequest
 */
export type SpaceAdmissionRequest = Message<"dxos.halo.invitations.SpaceAdmissionRequest"> & {
    /**
     * @generated from field: dxos.keys.PublicKey identity_key = 1;
     */
    identityKey?: PublicKey;
    /**
     * @generated from field: dxos.keys.PublicKey device_key = 2;
     */
    deviceKey?: PublicKey;
    /**
     * @generated from field: dxos.keys.PublicKey control_feed_key = 3;
     */
    controlFeedKey?: PublicKey;
    /**
     * @generated from field: dxos.keys.PublicKey data_feed_key = 4;
     */
    dataFeedKey?: PublicKey;
};
/**
 * Describes the message dxos.halo.invitations.SpaceAdmissionRequest.
 * Use `create(SpaceAdmissionRequestSchema)` to create a new message.
 */
export declare const SpaceAdmissionRequestSchema: GenMessage<SpaceAdmissionRequest>;
/**
 * @generated from message dxos.halo.invitations.DelegateSpaceInvitation
 */
export type DelegateSpaceInvitation = Message<"dxos.halo.invitations.DelegateSpaceInvitation"> & {
    /**
     * @generated from field: string invitation_id = 1;
     */
    invitationId: string;
    /**
     * @generated from field: dxos.client.services.Invitation.AuthMethod auth_method = 2;
     */
    authMethod: Invitation_AuthMethod;
    /**
     * @generated from field: dxos.keys.PublicKey swarm_key = 3;
     */
    swarmKey?: PublicKey;
    /**
     * @generated from field: dxos.halo.credentials.SpaceMember.Role role = 4;
     */
    role: SpaceMember_Role;
    /**
     * / Present for AuthMethod.KNOWN_PUBLIC_KEY, where guess needs to prove possession of a corresponding private key
     *
     * @generated from field: optional dxos.keys.PublicKey guest_key = 5;
     */
    guestKey?: PublicKey;
    /**
     * @generated from field: optional google.protobuf.Timestamp expires_on = 6;
     */
    expiresOn?: Timestamp;
    /**
     * @generated from field: bool multi_use = 7;
     */
    multiUse: boolean;
};
/**
 * Describes the message dxos.halo.invitations.DelegateSpaceInvitation.
 * Use `create(DelegateSpaceInvitationSchema)` to create a new message.
 */
export declare const DelegateSpaceInvitationSchema: GenMessage<DelegateSpaceInvitation>;
/**
 * @generated from message dxos.halo.invitations.CancelDelegatedInvitation
 */
export type CancelDelegatedInvitation = Message<"dxos.halo.invitations.CancelDelegatedInvitation"> & {
    /**
     * @generated from field: dxos.keys.PublicKey credential_id = 1;
     */
    credentialId?: PublicKey;
};
/**
 * Describes the message dxos.halo.invitations.CancelDelegatedInvitation.
 * Use `create(CancelDelegatedInvitationSchema)` to create a new message.
 */
export declare const CancelDelegatedInvitationSchema: GenMessage<CancelDelegatedInvitation>;
/**
 * @generated from message dxos.halo.invitations.AdmissionRequest
 */
export type AdmissionRequest = Message<"dxos.halo.invitations.AdmissionRequest"> & {
    /**
     * @generated from oneof dxos.halo.invitations.AdmissionRequest.kind
     */
    kind: {
        /**
         * @generated from field: dxos.halo.invitations.DeviceAdmissionRequest device = 1;
         */
        value: DeviceAdmissionRequest;
        case: "device";
    } | {
        /**
         * @generated from field: dxos.halo.invitations.SpaceAdmissionRequest space = 2;
         */
        value: SpaceAdmissionRequest;
        case: "space";
    } | {
        case: undefined;
        value?: undefined;
    };
};
/**
 * Describes the message dxos.halo.invitations.AdmissionRequest.
 * Use `create(AdmissionRequestSchema)` to create a new message.
 */
export declare const AdmissionRequestSchema: GenMessage<AdmissionRequest>;
/**
 * @generated from message dxos.halo.invitations.DeviceAdmissionCredentials
 */
export type DeviceAdmissionCredentials = Message<"dxos.halo.invitations.DeviceAdmissionCredentials"> & {
    /**
     * @generated from field: dxos.keys.PublicKey identity_key = 1;
     */
    identityKey?: PublicKey;
    /**
     * @generated from field: dxos.keys.PublicKey halo_space_key = 2;
     */
    haloSpaceKey?: PublicKey;
    /**
     * @generated from field: dxos.keys.PublicKey genesis_feed_key = 3;
     */
    genesisFeedKey?: PublicKey;
    /**
     * @generated from field: optional dxos.echo.timeframe.TimeframeVector control_timeframe = 4;
     */
    controlTimeframe?: TimeframeVector;
    /**
     * / Credential of type `AuthorizedDevice` that allows guest device to act as the identity it was added to.
     *
     * @generated from field: dxos.halo.credentials.Credential credential = 5;
     */
    credential?: Credential;
};
/**
 * Describes the message dxos.halo.invitations.DeviceAdmissionCredentials.
 * Use `create(DeviceAdmissionCredentialsSchema)` to create a new message.
 */
export declare const DeviceAdmissionCredentialsSchema: GenMessage<DeviceAdmissionCredentials>;
/**
 * @generated from message dxos.halo.invitations.SpaceAdmissionCredentials
 */
export type SpaceAdmissionCredentials = Message<"dxos.halo.invitations.SpaceAdmissionCredentials"> & {
    /**
     * / Credential of type `SpaceMember` that grants Guest's identity access to the space.
     *
     * @generated from field: dxos.halo.credentials.Credential credential = 1;
     */
    credential?: Credential;
    /**
     * / Hint to the guest about the current control timeframe.
     *
     * @generated from field: optional dxos.echo.timeframe.TimeframeVector control_timeframe = 2;
     */
    controlTimeframe?: TimeframeVector;
    /**
     * / Hint to the guest about the current data timeframe.
     *
     * @generated from field: optional dxos.echo.timeframe.TimeframeVector data_timeframe = 3;
     */
    dataTimeframe?: TimeframeVector;
};
/**
 * Describes the message dxos.halo.invitations.SpaceAdmissionCredentials.
 * Use `create(SpaceAdmissionCredentialsSchema)` to create a new message.
 */
export declare const SpaceAdmissionCredentialsSchema: GenMessage<SpaceAdmissionCredentials>;
/**
 * @generated from message dxos.halo.invitations.AdmissionResponse
 */
export type AdmissionResponse = Message<"dxos.halo.invitations.AdmissionResponse"> & {
    /**
     * @generated from oneof dxos.halo.invitations.AdmissionResponse.kind
     */
    kind: {
        /**
         * @generated from field: dxos.halo.invitations.DeviceAdmissionCredentials device = 1;
         */
        value: DeviceAdmissionCredentials;
        case: "device";
    } | {
        /**
         * @generated from field: dxos.halo.invitations.SpaceAdmissionCredentials space = 2;
         */
        value: SpaceAdmissionCredentials;
        case: "space";
    } | {
        case: undefined;
        value?: undefined;
    };
};
/**
 * Describes the message dxos.halo.invitations.AdmissionResponse.
 * Use `create(AdmissionResponseSchema)` to create a new message.
 */
export declare const AdmissionResponseSchema: GenMessage<AdmissionResponse>;
/**
 * / Host service for two peers exchanging an invitation.
 * TODO(wittjosiah): Handle invitations where guest is the initiatating peer.
 * TODO(dmaretskyi): Rename to InvitationExtensionService.
 *
 * @generated from service dxos.halo.invitations.InvitationHostService
 */
export declare const InvitationHostService: GenService<{
    /**
     * / Both peers must call this method before any other.
     *
     * @generated from rpc dxos.halo.invitations.InvitationHostService.Options
     */
    options: {
        methodKind: "unary";
        input: typeof InvitationOptionsSchema;
        output: typeof EmptySchema;
    };
    /**
     * / Introduce guest to the host. Only on the host.
     *
     * @generated from rpc dxos.halo.invitations.InvitationHostService.Introduce
     */
    introduce: {
        methodKind: "unary";
        input: typeof IntroductionRequestSchema;
        output: typeof IntroductionResponseSchema;
    };
    /**
     * / Authenticate request. Only on the host.
     *
     * @generated from rpc dxos.halo.invitations.InvitationHostService.Authenticate
     */
    authenticate: {
        methodKind: "unary";
        input: typeof AuthenticationRequestSchema;
        output: typeof AuthenticationResponseSchema;
    };
    /**
     * / Process admission credentials. Only on the host.
     *
     * @generated from rpc dxos.halo.invitations.InvitationHostService.Admit
     */
    admit: {
        methodKind: "unary";
        input: typeof AdmissionRequestSchema;
        output: typeof AdmissionResponseSchema;
    };
}>;
//# sourceMappingURL=invitations_pb.d.ts.map