"use strict";
//
// Copyright 2024 DXOS.org
//
Object.defineProperty(exports, "__esModule", { value: true });
exports.SwarmEvent_PeerLeftSchema = exports.SwarmEvent_PeerAvailableSchema = exports.SwarmEventSchema = exports.MessageSchema = exports.QueryRequestSchema = exports.LeaveRequestSchema = exports.JoinRequestSchema = exports.file_dxos_edge_signal = void 0;
const codegenv1_1 = require("@bufbuild/protobuf/codegenv1");
const wkt_1 = require("@bufbuild/protobuf/wkt");
const keys_pb_js_1 = require("../keys_pb.js");
const messenger_pb_js_1 = require("./messenger_pb.js");
/**
 * Describes the file dxos/edge/signal.proto.
 */
exports.file_dxos_edge_signal = (0, codegenv1_1.fileDesc)("ChZkeG9zL2VkZ2Uvc2lnbmFsLnByb3RvEhBkeG9zLmVkZ2Uuc2lnbmFsIlsKC0pvaW5SZXF1ZXN0EiMKBXRvcGljGAEgASgLMhQuZHhvcy5rZXlzLlB1YmxpY0tleRInCgRwZWVyGAIgASgLMhkuZHhvcy5lZGdlLm1lc3Nlbmdlci5QZWVyIlwKDExlYXZlUmVxdWVzdBIjCgV0b3BpYxgBIAEoCzIULmR4b3Mua2V5cy5QdWJsaWNLZXkSJwoEcGVlchgCIAEoCzIZLmR4b3MuZWRnZS5tZXNzZW5nZXIuUGVlciIzCgxRdWVyeVJlcXVlc3QSIwoFdG9waWMYASABKAsyFC5keG9zLmtleXMuUHVibGljS2V5IokBCgdNZXNzYWdlEikKBmF1dGhvchgBIAEoCzIZLmR4b3MuZWRnZS5tZXNzZW5nZXIuUGVlchIsCglyZWNpcGllbnQYAiABKAsyGS5keG9zLmVkZ2UubWVzc2VuZ2VyLlBlZXISJQoHcGF5bG9hZBgDIAEoCzIULmdvb2dsZS5wcm90b2J1Zi5BbnkizwMKClN3YXJtRXZlbnQSIwoFdG9waWMYASABKAsyFC5keG9zLmtleXMuUHVibGljS2V5EkQKDnBlZXJfYXZhaWxhYmxlGAIgASgLMiouZHhvcy5lZGdlLnNpZ25hbC5Td2FybUV2ZW50LlBlZXJBdmFpbGFibGVIABI6CglwZWVyX2xlZnQYAyABKAsyJS5keG9zLmVkZ2Uuc2lnbmFsLlN3YXJtRXZlbnQuUGVlckxlZnRIABrbAQoNUGVlckF2YWlsYWJsZRInCgRwZWVyGAEgASgLMhkuZHhvcy5lZGdlLm1lc3Nlbmdlci5QZWVyEikKBXNpbmNlGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIuCgV1bnRpbBgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBIAIgBARIiChVhbm5vdW5jZV9iYWNrX3RvX2hvc3QYBCABKAxIAYgBAUIICgZfdW50aWxCGAoWX2Fubm91bmNlX2JhY2tfdG9faG9zdBozCghQZWVyTGVmdBInCgRwZWVyGAEgASgLMhkuZHhvcy5lZGdlLm1lc3Nlbmdlci5QZWVyQgcKBWV2ZW50YgZwcm90bzM", [wkt_1.file_google_protobuf_any, wkt_1.file_google_protobuf_timestamp, keys_pb_js_1.file_dxos_keys, messenger_pb_js_1.file_dxos_edge_messenger]);
/**
 * Describes the message dxos.edge.signal.JoinRequest.
 * Use `create(JoinRequestSchema)` to create a new message.
 */
exports.JoinRequestSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_edge_signal, 0);
/**
 * Describes the message dxos.edge.signal.LeaveRequest.
 * Use `create(LeaveRequestSchema)` to create a new message.
 */
exports.LeaveRequestSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_edge_signal, 1);
/**
 * Describes the message dxos.edge.signal.QueryRequest.
 * Use `create(QueryRequestSchema)` to create a new message.
 */
exports.QueryRequestSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_edge_signal, 2);
/**
 * Describes the message dxos.edge.signal.Message.
 * Use `create(MessageSchema)` to create a new message.
 */
exports.MessageSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_edge_signal, 3);
/**
 * Describes the message dxos.edge.signal.SwarmEvent.
 * Use `create(SwarmEventSchema)` to create a new message.
 */
exports.SwarmEventSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_edge_signal, 4);
/**
 * Describes the message dxos.edge.signal.SwarmEvent.PeerAvailable.
 * Use `create(SwarmEvent_PeerAvailableSchema)` to create a new message.
 */
exports.SwarmEvent_PeerAvailableSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_edge_signal, 4, 0);
/**
 * Describes the message dxos.edge.signal.SwarmEvent.PeerLeft.
 * Use `create(SwarmEvent_PeerLeftSchema)` to create a new message.
 */
exports.SwarmEvent_PeerLeftSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_edge_signal, 4, 1);
//# sourceMappingURL=signal_pb.js.map