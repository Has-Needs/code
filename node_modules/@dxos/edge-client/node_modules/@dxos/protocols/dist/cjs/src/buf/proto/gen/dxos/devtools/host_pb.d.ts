import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { EmptySchema, Timestamp } from "@bufbuild/protobuf/wkt";
import type { SwarmInfo } from "./swarm_pb.js";
import type { FeedMessage } from "../echo/feed_pb.js";
import type { EchoMetadata } from "../echo/metadata_pb.js";
import type { SpaceSnapshot } from "../echo/snapshot_pb.js";
import type { TimeframeVector } from "../echo/timeframe_pb.js";
import type { BlobMeta } from "../echo/blob_pb.js";
import type { KeyRecord } from "../halo/keyring_pb.js";
import type { SignedMessage } from "../halo/signed_pb.js";
import type { PublicKey } from "../keys_pb.js";
import type { Message as Message$1, SignalState, SwarmEvent } from "../mesh/signal_pb.js";
import type { Message } from "@bufbuild/protobuf";
/**
 * Describes the file dxos/devtools/host.proto.
 */
export declare const file_dxos_devtools_host: GenFile;
/**
 * @generated from message dxos.devtools.host.Event
 */
export type Event = Message<"dxos.devtools.host.Event"> & {
    /**
     * @generated from oneof dxos.devtools.host.Event.payload
     */
    payload: {
        /**
         * @generated from field: dxos.devtools.host.ReadyEvent ready = 1;
         */
        value: ReadyEvent;
        case: "ready";
    } | {
        case: undefined;
        value?: undefined;
    };
};
/**
 * Describes the message dxos.devtools.host.Event.
 * Use `create(EventSchema)` to create a new message.
 */
export declare const EventSchema: GenMessage<Event>;
/**
 * @generated from message dxos.devtools.host.ReadyEvent
 */
export type ReadyEvent = Message<"dxos.devtools.host.ReadyEvent"> & {};
/**
 * Describes the message dxos.devtools.host.ReadyEvent.
 * Use `create(ReadyEventSchema)` to create a new message.
 */
export declare const ReadyEventSchema: GenMessage<ReadyEvent>;
/**
 * @generated from message dxos.devtools.host.GetConfigResponse
 */
export type GetConfigResponse = Message<"dxos.devtools.host.GetConfigResponse"> & {
    /**
     * JSON-encoded configuration object.
     *
     * @generated from field: string config = 1;
     */
    config: string;
};
/**
 * Describes the message dxos.devtools.host.GetConfigResponse.
 * Use `create(GetConfigResponseSchema)` to create a new message.
 */
export declare const GetConfigResponseSchema: GenMessage<GetConfigResponse>;
/**
 * @generated from message dxos.devtools.host.StorageInfo
 */
export type StorageInfo = Message<"dxos.devtools.host.StorageInfo"> & {
    /**
     * @generated from field: string type = 1;
     */
    type: string;
    /**
     * @generated from field: uint32 storage_usage = 2;
     */
    storageUsage: number;
    /**
     * @generated from field: uint32 origin_usage = 3;
     */
    originUsage: number;
    /**
     * @generated from field: uint32 usage_quota = 4;
     */
    usageQuota: number;
};
/**
 * Describes the message dxos.devtools.host.StorageInfo.
 * Use `create(StorageInfoSchema)` to create a new message.
 */
export declare const StorageInfoSchema: GenMessage<StorageInfo>;
/**
 * @generated from message dxos.devtools.host.EnableDebugLoggingRequest
 */
export type EnableDebugLoggingRequest = Message<"dxos.devtools.host.EnableDebugLoggingRequest"> & {
    /**
     * @generated from field: optional string namespaces = 1;
     */
    namespaces?: string;
};
/**
 * Describes the message dxos.devtools.host.EnableDebugLoggingRequest.
 * Use `create(EnableDebugLoggingRequestSchema)` to create a new message.
 */
export declare const EnableDebugLoggingRequestSchema: GenMessage<EnableDebugLoggingRequest>;
/**
 * @generated from message dxos.devtools.host.EnableDebugLoggingResponse
 */
export type EnableDebugLoggingResponse = Message<"dxos.devtools.host.EnableDebugLoggingResponse"> & {
    /**
     * @generated from field: optional string enabled_namespaces = 1;
     */
    enabledNamespaces?: string;
};
/**
 * Describes the message dxos.devtools.host.EnableDebugLoggingResponse.
 * Use `create(EnableDebugLoggingResponseSchema)` to create a new message.
 */
export declare const EnableDebugLoggingResponseSchema: GenMessage<EnableDebugLoggingResponse>;
/**
 * @generated from message dxos.devtools.host.DisableDebugLoggingRequest
 */
export type DisableDebugLoggingRequest = Message<"dxos.devtools.host.DisableDebugLoggingRequest"> & {
    /**
     * @generated from field: optional string namespaces = 1;
     */
    namespaces?: string;
};
/**
 * Describes the message dxos.devtools.host.DisableDebugLoggingRequest.
 * Use `create(DisableDebugLoggingRequestSchema)` to create a new message.
 */
export declare const DisableDebugLoggingRequestSchema: GenMessage<DisableDebugLoggingRequest>;
/**
 * @generated from message dxos.devtools.host.DisableDebugLoggingResponse
 */
export type DisableDebugLoggingResponse = Message<"dxos.devtools.host.DisableDebugLoggingResponse"> & {
    /**
     * @generated from field: optional string enabled_namespaces = 1;
     */
    enabledNamespaces?: string;
};
/**
 * Describes the message dxos.devtools.host.DisableDebugLoggingResponse.
 * Use `create(DisableDebugLoggingResponseSchema)` to create a new message.
 */
export declare const DisableDebugLoggingResponseSchema: GenMessage<DisableDebugLoggingResponse>;
/**
 * @generated from message dxos.devtools.host.SubscribeToKeyringKeysRequest
 */
export type SubscribeToKeyringKeysRequest = Message<"dxos.devtools.host.SubscribeToKeyringKeysRequest"> & {};
/**
 * Describes the message dxos.devtools.host.SubscribeToKeyringKeysRequest.
 * Use `create(SubscribeToKeyringKeysRequestSchema)` to create a new message.
 */
export declare const SubscribeToKeyringKeysRequestSchema: GenMessage<SubscribeToKeyringKeysRequest>;
/**
 * @generated from message dxos.devtools.host.SubscribeToKeyringKeysResponse
 */
export type SubscribeToKeyringKeysResponse = Message<"dxos.devtools.host.SubscribeToKeyringKeysResponse"> & {
    /**
     * @generated from field: repeated dxos.halo.keyring.KeyRecord keys = 1;
     */
    keys: KeyRecord[];
};
/**
 * Describes the message dxos.devtools.host.SubscribeToKeyringKeysResponse.
 * Use `create(SubscribeToKeyringKeysResponseSchema)` to create a new message.
 */
export declare const SubscribeToKeyringKeysResponseSchema: GenMessage<SubscribeToKeyringKeysResponse>;
/**
 * @generated from message dxos.devtools.host.SubscribeToCredentialMessagesRequest
 */
export type SubscribeToCredentialMessagesRequest = Message<"dxos.devtools.host.SubscribeToCredentialMessagesRequest"> & {
    /**
     * @generated from field: optional dxos.keys.PublicKey space_key = 1;
     */
    spaceKey?: PublicKey;
};
/**
 * Describes the message dxos.devtools.host.SubscribeToCredentialMessagesRequest.
 * Use `create(SubscribeToCredentialMessagesRequestSchema)` to create a new message.
 */
export declare const SubscribeToCredentialMessagesRequestSchema: GenMessage<SubscribeToCredentialMessagesRequest>;
/**
 * @generated from message dxos.devtools.host.SubscribeToCredentialMessagesResponse
 */
export type SubscribeToCredentialMessagesResponse = Message<"dxos.devtools.host.SubscribeToCredentialMessagesResponse"> & {
    /**
     * @generated from field: repeated dxos.halo.signed.SignedMessage messages = 1;
     */
    messages: SignedMessage[];
};
/**
 * Describes the message dxos.devtools.host.SubscribeToCredentialMessagesResponse.
 * Use `create(SubscribeToCredentialMessagesResponseSchema)` to create a new message.
 */
export declare const SubscribeToCredentialMessagesResponseSchema: GenMessage<SubscribeToCredentialMessagesResponse>;
/**
 * @generated from message dxos.devtools.host.ResetStorageRequest
 */
export type ResetStorageRequest = Message<"dxos.devtools.host.ResetStorageRequest"> & {};
/**
 * Describes the message dxos.devtools.host.ResetStorageRequest.
 * Use `create(ResetStorageRequestSchema)` to create a new message.
 */
export declare const ResetStorageRequestSchema: GenMessage<ResetStorageRequest>;
/**
 * @generated from message dxos.devtools.host.StoredSnapshotInfo
 */
export type StoredSnapshotInfo = Message<"dxos.devtools.host.StoredSnapshotInfo"> & {
    /**
     * @generated from field: string key = 1;
     */
    key: string;
    /**
     * @generated from field: uint32 size = 2;
     */
    size: number;
};
/**
 * Describes the message dxos.devtools.host.StoredSnapshotInfo.
 * Use `create(StoredSnapshotInfoSchema)` to create a new message.
 */
export declare const StoredSnapshotInfoSchema: GenMessage<StoredSnapshotInfo>;
/**
 * @generated from message dxos.devtools.host.GetBlobsResponse
 */
export type GetBlobsResponse = Message<"dxos.devtools.host.GetBlobsResponse"> & {
    /**
     * @generated from field: repeated dxos.echo.blob.BlobMeta blobs = 1;
     */
    blobs: BlobMeta[];
};
/**
 * Describes the message dxos.devtools.host.GetBlobsResponse.
 * Use `create(GetBlobsResponseSchema)` to create a new message.
 */
export declare const GetBlobsResponseSchema: GenMessage<GetBlobsResponse>;
/**
 * @generated from message dxos.devtools.host.GetSnapshotsResponse
 */
export type GetSnapshotsResponse = Message<"dxos.devtools.host.GetSnapshotsResponse"> & {
    /**
     * @generated from field: repeated dxos.devtools.host.StoredSnapshotInfo snapshots = 1;
     */
    snapshots: StoredSnapshotInfo[];
};
/**
 * Describes the message dxos.devtools.host.GetSnapshotsResponse.
 * Use `create(GetSnapshotsResponseSchema)` to create a new message.
 */
export declare const GetSnapshotsResponseSchema: GenMessage<GetSnapshotsResponse>;
/**
 * @generated from message dxos.devtools.host.SubscribeToMetadataResponse
 */
export type SubscribeToMetadataResponse = Message<"dxos.devtools.host.SubscribeToMetadataResponse"> & {
    /**
     * @generated from field: dxos.echo.metadata.EchoMetadata metadata = 1;
     */
    metadata?: EchoMetadata;
};
/**
 * Describes the message dxos.devtools.host.SubscribeToMetadataResponse.
 * Use `create(SubscribeToMetadataResponseSchema)` to create a new message.
 */
export declare const SubscribeToMetadataResponseSchema: GenMessage<SubscribeToMetadataResponse>;
/**
 * @generated from message dxos.devtools.host.SubscribeToSpacesRequest
 */
export type SubscribeToSpacesRequest = Message<"dxos.devtools.host.SubscribeToSpacesRequest"> & {
    /**
     * @generated from field: repeated dxos.keys.PublicKey space_keys = 1;
     */
    spaceKeys: PublicKey[];
};
/**
 * Describes the message dxos.devtools.host.SubscribeToSpacesRequest.
 * Use `create(SubscribeToSpacesRequestSchema)` to create a new message.
 */
export declare const SubscribeToSpacesRequestSchema: GenMessage<SubscribeToSpacesRequest>;
/**
 * @generated from message dxos.devtools.host.SubscribeToSpacesResponse
 */
export type SubscribeToSpacesResponse = Message<"dxos.devtools.host.SubscribeToSpacesResponse"> & {
    /**
     * @generated from field: repeated dxos.devtools.host.SubscribeToSpacesResponse.SpaceInfo spaces = 1;
     */
    spaces: SubscribeToSpacesResponse_SpaceInfo[];
};
/**
 * Describes the message dxos.devtools.host.SubscribeToSpacesResponse.
 * Use `create(SubscribeToSpacesResponseSchema)` to create a new message.
 */
export declare const SubscribeToSpacesResponseSchema: GenMessage<SubscribeToSpacesResponse>;
/**
 * @generated from message dxos.devtools.host.SubscribeToSpacesResponse.SpaceInfo
 */
export type SubscribeToSpacesResponse_SpaceInfo = Message<"dxos.devtools.host.SubscribeToSpacesResponse.SpaceInfo"> & {
    /**
     * @generated from field: dxos.keys.PublicKey key = 1;
     */
    key?: PublicKey;
    /**
     * @generated from field: bool is_open = 2;
     */
    isOpen: boolean;
    /**
     * @generated from field: optional dxos.echo.timeframe.TimeframeVector timeframe = 3;
     */
    timeframe?: TimeframeVector;
    /**
     * @generated from field: dxos.keys.PublicKey genesis_feed = 4;
     */
    genesisFeed?: PublicKey;
    /**
     * @generated from field: dxos.keys.PublicKey control_feed = 5;
     */
    controlFeed?: PublicKey;
    /**
     * @generated from field: dxos.keys.PublicKey data_feed = 6;
     */
    dataFeed?: PublicKey;
};
/**
 * Describes the message dxos.devtools.host.SubscribeToSpacesResponse.SpaceInfo.
 * Use `create(SubscribeToSpacesResponse_SpaceInfoSchema)` to create a new message.
 */
export declare const SubscribeToSpacesResponse_SpaceInfoSchema: GenMessage<SubscribeToSpacesResponse_SpaceInfo>;
/**
 * @generated from message dxos.devtools.host.SubscribeToItemsRequest
 */
export type SubscribeToItemsRequest = Message<"dxos.devtools.host.SubscribeToItemsRequest"> & {};
/**
 * Describes the message dxos.devtools.host.SubscribeToItemsRequest.
 * Use `create(SubscribeToItemsRequestSchema)` to create a new message.
 */
export declare const SubscribeToItemsRequestSchema: GenMessage<SubscribeToItemsRequest>;
/**
 * @generated from message dxos.devtools.host.SubscribeToItemsResponse
 */
export type SubscribeToItemsResponse = Message<"dxos.devtools.host.SubscribeToItemsResponse"> & {
    /**
     * JSON-encoded payload.
     *
     * @generated from field: string data = 1;
     */
    data: string;
};
/**
 * Describes the message dxos.devtools.host.SubscribeToItemsResponse.
 * Use `create(SubscribeToItemsResponseSchema)` to create a new message.
 */
export declare const SubscribeToItemsResponseSchema: GenMessage<SubscribeToItemsResponse>;
/**
 * TODO(burdon): How to filter by space?
 *
 * @generated from message dxos.devtools.host.SubscribeToFeedsRequest
 */
export type SubscribeToFeedsRequest = Message<"dxos.devtools.host.SubscribeToFeedsRequest"> & {
    /**
     * @generated from field: repeated dxos.keys.PublicKey feed_keys = 1;
     */
    feedKeys: PublicKey[];
};
/**
 * Describes the message dxos.devtools.host.SubscribeToFeedsRequest.
 * Use `create(SubscribeToFeedsRequestSchema)` to create a new message.
 */
export declare const SubscribeToFeedsRequestSchema: GenMessage<SubscribeToFeedsRequest>;
/**
 * @generated from message dxos.devtools.host.SubscribeToFeedsResponse
 */
export type SubscribeToFeedsResponse = Message<"dxos.devtools.host.SubscribeToFeedsResponse"> & {
    /**
     * @generated from field: repeated dxos.devtools.host.SubscribeToFeedsResponse.Feed feeds = 1;
     */
    feeds: SubscribeToFeedsResponse_Feed[];
};
/**
 * Describes the message dxos.devtools.host.SubscribeToFeedsResponse.
 * Use `create(SubscribeToFeedsResponseSchema)` to create a new message.
 */
export declare const SubscribeToFeedsResponseSchema: GenMessage<SubscribeToFeedsResponse>;
/**
 * @generated from message dxos.devtools.host.SubscribeToFeedsResponse.FeedOwner
 */
export type SubscribeToFeedsResponse_FeedOwner = Message<"dxos.devtools.host.SubscribeToFeedsResponse.FeedOwner"> & {
    /**
     * @generated from field: dxos.keys.PublicKey identity = 1;
     */
    identity?: PublicKey;
    /**
     * @generated from field: dxos.keys.PublicKey device = 2;
     */
    device?: PublicKey;
};
/**
 * Describes the message dxos.devtools.host.SubscribeToFeedsResponse.FeedOwner.
 * Use `create(SubscribeToFeedsResponse_FeedOwnerSchema)` to create a new message.
 */
export declare const SubscribeToFeedsResponse_FeedOwnerSchema: GenMessage<SubscribeToFeedsResponse_FeedOwner>;
/**
 * @generated from message dxos.devtools.host.SubscribeToFeedsResponse.Feed
 */
export type SubscribeToFeedsResponse_Feed = Message<"dxos.devtools.host.SubscribeToFeedsResponse.Feed"> & {
    /**
     * @generated from field: dxos.keys.PublicKey feed_key = 1;
     */
    feedKey?: PublicKey;
    /**
     * @generated from field: int32 length = 2;
     */
    length: number;
    /**
     * @generated from field: int32 bytes = 3;
     */
    bytes: number;
    /**
     * / Bitfield of downloaded blocks.
     *
     * @generated from field: bytes downloaded = 4;
     */
    downloaded: Uint8Array;
    /**
     * @generated from field: optional dxos.devtools.host.SubscribeToFeedsResponse.FeedOwner owner = 5;
     */
    owner?: SubscribeToFeedsResponse_FeedOwner;
};
/**
 * Describes the message dxos.devtools.host.SubscribeToFeedsResponse.Feed.
 * Use `create(SubscribeToFeedsResponse_FeedSchema)` to create a new message.
 */
export declare const SubscribeToFeedsResponse_FeedSchema: GenMessage<SubscribeToFeedsResponse_Feed>;
/**
 * @generated from message dxos.devtools.host.SubscribeToFeedBlocksRequest
 */
export type SubscribeToFeedBlocksRequest = Message<"dxos.devtools.host.SubscribeToFeedBlocksRequest"> & {
    /**
     * @generated from field: optional dxos.keys.PublicKey space_key = 1;
     */
    spaceKey?: PublicKey;
    /**
     * @generated from field: optional dxos.keys.PublicKey feed_key = 2;
     */
    feedKey?: PublicKey;
    /**
     * @generated from field: optional int32 max_blocks = 3;
     */
    maxBlocks?: number;
};
/**
 * Describes the message dxos.devtools.host.SubscribeToFeedBlocksRequest.
 * Use `create(SubscribeToFeedBlocksRequestSchema)` to create a new message.
 */
export declare const SubscribeToFeedBlocksRequestSchema: GenMessage<SubscribeToFeedBlocksRequest>;
/**
 * @generated from message dxos.devtools.host.SubscribeToFeedBlocksResponse
 */
export type SubscribeToFeedBlocksResponse = Message<"dxos.devtools.host.SubscribeToFeedBlocksResponse"> & {
    /**
     * @generated from field: repeated dxos.devtools.host.SubscribeToFeedBlocksResponse.Block blocks = 1;
     */
    blocks: SubscribeToFeedBlocksResponse_Block[];
};
/**
 * Describes the message dxos.devtools.host.SubscribeToFeedBlocksResponse.
 * Use `create(SubscribeToFeedBlocksResponseSchema)` to create a new message.
 */
export declare const SubscribeToFeedBlocksResponseSchema: GenMessage<SubscribeToFeedBlocksResponse>;
/**
 * @generated from message dxos.devtools.host.SubscribeToFeedBlocksResponse.Block
 */
export type SubscribeToFeedBlocksResponse_Block = Message<"dxos.devtools.host.SubscribeToFeedBlocksResponse.Block"> & {
    /**
     * @generated from field: dxos.keys.PublicKey feed_key = 1;
     */
    feedKey?: PublicKey;
    /**
     * @generated from field: int32 seq = 2;
     */
    seq: number;
    /**
     * @generated from field: dxos.echo.feed.FeedMessage data = 3;
     */
    data?: FeedMessage;
};
/**
 * Describes the message dxos.devtools.host.SubscribeToFeedBlocksResponse.Block.
 * Use `create(SubscribeToFeedBlocksResponse_BlockSchema)` to create a new message.
 */
export declare const SubscribeToFeedBlocksResponse_BlockSchema: GenMessage<SubscribeToFeedBlocksResponse_Block>;
/**
 * @generated from message dxos.devtools.host.GetSpaceSnapshotRequest
 */
export type GetSpaceSnapshotRequest = Message<"dxos.devtools.host.GetSpaceSnapshotRequest"> & {
    /**
     * @generated from field: dxos.keys.PublicKey space_key = 1;
     */
    spaceKey?: PublicKey;
};
/**
 * Describes the message dxos.devtools.host.GetSpaceSnapshotRequest.
 * Use `create(GetSpaceSnapshotRequestSchema)` to create a new message.
 */
export declare const GetSpaceSnapshotRequestSchema: GenMessage<GetSpaceSnapshotRequest>;
/**
 * @generated from message dxos.devtools.host.GetSpaceSnapshotResponse
 */
export type GetSpaceSnapshotResponse = Message<"dxos.devtools.host.GetSpaceSnapshotResponse"> & {
    /**
     * @generated from field: optional dxos.echo.snapshot.SpaceSnapshot snapshot = 1;
     */
    snapshot?: SpaceSnapshot;
};
/**
 * Describes the message dxos.devtools.host.GetSpaceSnapshotResponse.
 * Use `create(GetSpaceSnapshotResponseSchema)` to create a new message.
 */
export declare const GetSpaceSnapshotResponseSchema: GenMessage<GetSpaceSnapshotResponse>;
/**
 * @generated from message dxos.devtools.host.SaveSpaceSnapshotRequest
 */
export type SaveSpaceSnapshotRequest = Message<"dxos.devtools.host.SaveSpaceSnapshotRequest"> & {
    /**
     * @generated from field: dxos.keys.PublicKey space_key = 1;
     */
    spaceKey?: PublicKey;
};
/**
 * Describes the message dxos.devtools.host.SaveSpaceSnapshotRequest.
 * Use `create(SaveSpaceSnapshotRequestSchema)` to create a new message.
 */
export declare const SaveSpaceSnapshotRequestSchema: GenMessage<SaveSpaceSnapshotRequest>;
/**
 * @generated from message dxos.devtools.host.SaveSpaceSnapshotResponse
 */
export type SaveSpaceSnapshotResponse = Message<"dxos.devtools.host.SaveSpaceSnapshotResponse"> & {
    /**
     * @generated from field: optional dxos.echo.snapshot.SpaceSnapshot snapshot = 1;
     */
    snapshot?: SpaceSnapshot;
};
/**
 * Describes the message dxos.devtools.host.SaveSpaceSnapshotResponse.
 * Use `create(SaveSpaceSnapshotResponseSchema)` to create a new message.
 */
export declare const SaveSpaceSnapshotResponseSchema: GenMessage<SaveSpaceSnapshotResponse>;
/**
 * @generated from message dxos.devtools.host.ClearSnapshotsRequest
 */
export type ClearSnapshotsRequest = Message<"dxos.devtools.host.ClearSnapshotsRequest"> & {};
/**
 * Describes the message dxos.devtools.host.ClearSnapshotsRequest.
 * Use `create(ClearSnapshotsRequestSchema)` to create a new message.
 */
export declare const ClearSnapshotsRequestSchema: GenMessage<ClearSnapshotsRequest>;
/**
 * @generated from message dxos.devtools.host.GetNetworkPeersRequest
 */
export type GetNetworkPeersRequest = Message<"dxos.devtools.host.GetNetworkPeersRequest"> & {
    /**
     * @generated from field: bytes topic = 1;
     */
    topic: Uint8Array;
};
/**
 * Describes the message dxos.devtools.host.GetNetworkPeersRequest.
 * Use `create(GetNetworkPeersRequestSchema)` to create a new message.
 */
export declare const GetNetworkPeersRequestSchema: GenMessage<GetNetworkPeersRequest>;
/**
 * @generated from message dxos.devtools.host.GetNetworkPeersResponse
 */
export type GetNetworkPeersResponse = Message<"dxos.devtools.host.GetNetworkPeersResponse"> & {
    /**
     * @generated from field: repeated dxos.devtools.host.GetNetworkPeersResponse.PeerInfo peers = 1;
     */
    peers: GetNetworkPeersResponse_PeerInfo[];
};
/**
 * Describes the message dxos.devtools.host.GetNetworkPeersResponse.
 * Use `create(GetNetworkPeersResponseSchema)` to create a new message.
 */
export declare const GetNetworkPeersResponseSchema: GenMessage<GetNetworkPeersResponse>;
/**
 * @generated from message dxos.devtools.host.GetNetworkPeersResponse.PeerInfo
 */
export type GetNetworkPeersResponse_PeerInfo = Message<"dxos.devtools.host.GetNetworkPeersResponse.PeerInfo"> & {
    /**
     * @generated from field: dxos.keys.PublicKey id = 1;
     */
    id?: PublicKey;
    /**
     * PeerState enum.
     *
     * @generated from field: string state = 2;
     */
    state: string;
    /**
     * @generated from field: repeated bytes connections = 3;
     */
    connections: Uint8Array[];
};
/**
 * Describes the message dxos.devtools.host.GetNetworkPeersResponse.PeerInfo.
 * Use `create(GetNetworkPeersResponse_PeerInfoSchema)` to create a new message.
 */
export declare const GetNetworkPeersResponse_PeerInfoSchema: GenMessage<GetNetworkPeersResponse_PeerInfo>;
/**
 * @generated from message dxos.devtools.host.SubscribeToNetworkTopicsResponse
 */
export type SubscribeToNetworkTopicsResponse = Message<"dxos.devtools.host.SubscribeToNetworkTopicsResponse"> & {
    /**
     * @generated from field: repeated dxos.devtools.host.SubscribeToNetworkTopicsResponse.Topic topics = 1;
     */
    topics: SubscribeToNetworkTopicsResponse_Topic[];
};
/**
 * Describes the message dxos.devtools.host.SubscribeToNetworkTopicsResponse.
 * Use `create(SubscribeToNetworkTopicsResponseSchema)` to create a new message.
 */
export declare const SubscribeToNetworkTopicsResponseSchema: GenMessage<SubscribeToNetworkTopicsResponse>;
/**
 * @generated from message dxos.devtools.host.SubscribeToNetworkTopicsResponse.Topic
 */
export type SubscribeToNetworkTopicsResponse_Topic = Message<"dxos.devtools.host.SubscribeToNetworkTopicsResponse.Topic"> & {
    /**
     * @generated from field: dxos.keys.PublicKey topic = 1;
     */
    topic?: PublicKey;
    /**
     * @generated from field: optional string label = 2;
     */
    label?: string;
};
/**
 * Describes the message dxos.devtools.host.SubscribeToNetworkTopicsResponse.Topic.
 * Use `create(SubscribeToNetworkTopicsResponse_TopicSchema)` to create a new message.
 */
export declare const SubscribeToNetworkTopicsResponse_TopicSchema: GenMessage<SubscribeToNetworkTopicsResponse_Topic>;
/**
 * @generated from message dxos.devtools.host.SubscribeToSignalStatusResponse
 */
export type SubscribeToSignalStatusResponse = Message<"dxos.devtools.host.SubscribeToSignalStatusResponse"> & {
    /**
     * @generated from field: repeated dxos.devtools.host.SubscribeToSignalStatusResponse.SignalServer servers = 1;
     */
    servers: SubscribeToSignalStatusResponse_SignalServer[];
};
/**
 * Describes the message dxos.devtools.host.SubscribeToSignalStatusResponse.
 * Use `create(SubscribeToSignalStatusResponseSchema)` to create a new message.
 */
export declare const SubscribeToSignalStatusResponseSchema: GenMessage<SubscribeToSignalStatusResponse>;
/**
 * @generated from message dxos.devtools.host.SubscribeToSignalStatusResponse.SignalServer
 */
export type SubscribeToSignalStatusResponse_SignalServer = Message<"dxos.devtools.host.SubscribeToSignalStatusResponse.SignalServer"> & {
    /**
     * @generated from field: string host = 1;
     */
    host: string;
    /**
     * @generated from field: dxos.mesh.signal.SignalState state = 2;
     */
    state: SignalState;
    /**
     * @generated from field: optional string error = 3;
     */
    error?: string;
    /**
     * Number of milliseconds before reconnection.
     * TODO(dmaretskyi): Represent as absolute timestamp.
     *
     * @generated from field: int32 reconnect_in = 4;
     */
    reconnectIn: number;
    /**
     * @generated from field: google.protobuf.Timestamp connection_started = 5;
     */
    connectionStarted?: Timestamp;
    /**
     * @generated from field: google.protobuf.Timestamp last_state_change = 6;
     */
    lastStateChange?: Timestamp;
};
/**
 * Describes the message dxos.devtools.host.SubscribeToSignalStatusResponse.SignalServer.
 * Use `create(SubscribeToSignalStatusResponse_SignalServerSchema)` to create a new message.
 */
export declare const SubscribeToSignalStatusResponse_SignalServerSchema: GenMessage<SubscribeToSignalStatusResponse_SignalServer>;
/**
 * @generated from message dxos.devtools.host.SignalResponse
 */
export type SignalResponse = Message<"dxos.devtools.host.SignalResponse"> & {
    /**
     * @generated from oneof dxos.devtools.host.SignalResponse.data
     */
    data: {
        /**
         * @generated from field: dxos.mesh.signal.SwarmEvent swarm_event = 1;
         */
        value: SwarmEvent;
        case: "swarmEvent";
    } | {
        /**
         * @generated from field: dxos.mesh.signal.Message message = 2;
         */
        value: Message$1;
        case: "message";
    } | {
        case: undefined;
        value?: undefined;
    };
    /**
     * @generated from field: google.protobuf.Timestamp received_at = 3;
     */
    receivedAt?: Timestamp;
    /**
     * @generated from field: optional bytes topic = 4;
     */
    topic?: Uint8Array;
};
/**
 * Describes the message dxos.devtools.host.SignalResponse.
 * Use `create(SignalResponseSchema)` to create a new message.
 */
export declare const SignalResponseSchema: GenMessage<SignalResponse>;
/**
 * @generated from message dxos.devtools.host.SubscribeToSwarmInfoRequest
 */
export type SubscribeToSwarmInfoRequest = Message<"dxos.devtools.host.SubscribeToSwarmInfoRequest"> & {};
/**
 * Describes the message dxos.devtools.host.SubscribeToSwarmInfoRequest.
 * Use `create(SubscribeToSwarmInfoRequestSchema)` to create a new message.
 */
export declare const SubscribeToSwarmInfoRequestSchema: GenMessage<SubscribeToSwarmInfoRequest>;
/**
 * @generated from message dxos.devtools.host.SubscribeToSwarmInfoResponse
 */
export type SubscribeToSwarmInfoResponse = Message<"dxos.devtools.host.SubscribeToSwarmInfoResponse"> & {
    /**
     * @generated from field: repeated dxos.devtools.swarm.SwarmInfo data = 1;
     */
    data: SwarmInfo[];
};
/**
 * Describes the message dxos.devtools.host.SubscribeToSwarmInfoResponse.
 * Use `create(SubscribeToSwarmInfoResponseSchema)` to create a new message.
 */
export declare const SubscribeToSwarmInfoResponseSchema: GenMessage<SubscribeToSwarmInfoResponse>;
/**
 *
 * General
 *
 *
 * @generated from service dxos.devtools.host.DevtoolsHost
 */
export declare const DevtoolsHost: GenService<{
    /**
     * Subscribe to server-to-client events.
     *
     * @generated from rpc dxos.devtools.host.DevtoolsHost.Events
     */
    events: {
        methodKind: "server_streaming";
        input: typeof EmptySchema;
        output: typeof EventSchema;
    };
    /**
     * Get client config.
     *
     * @generated from rpc dxos.devtools.host.DevtoolsHost.GetConfig
     */
    getConfig: {
        methodKind: "unary";
        input: typeof EmptySchema;
        output: typeof GetConfigResponseSchema;
    };
    /**
     * @generated from rpc dxos.devtools.host.DevtoolsHost.GetStorageInfo
     */
    getStorageInfo: {
        methodKind: "unary";
        input: typeof EmptySchema;
        output: typeof StorageInfoSchema;
    };
    /**
     * @generated from rpc dxos.devtools.host.DevtoolsHost.ResetStorage
     */
    resetStorage: {
        methodKind: "unary";
        input: typeof ResetStorageRequestSchema;
        output: typeof EmptySchema;
    };
    /**
     * @generated from rpc dxos.devtools.host.DevtoolsHost.GetBlobs
     */
    getBlobs: {
        methodKind: "unary";
        input: typeof EmptySchema;
        output: typeof GetBlobsResponseSchema;
    };
    /**
     * @generated from rpc dxos.devtools.host.DevtoolsHost.GetSnapshots
     */
    getSnapshots: {
        methodKind: "unary";
        input: typeof EmptySchema;
        output: typeof GetSnapshotsResponseSchema;
    };
    /**
     * TODO(burdon): Single RPC with action.
     *
     * @generated from rpc dxos.devtools.host.DevtoolsHost.EnableDebugLogging
     */
    enableDebugLogging: {
        methodKind: "unary";
        input: typeof EnableDebugLoggingRequestSchema;
        output: typeof EnableDebugLoggingResponseSchema;
    };
    /**
     * @generated from rpc dxos.devtools.host.DevtoolsHost.DisableDebugLogging
     */
    disableDebugLogging: {
        methodKind: "unary";
        input: typeof EnableDebugLoggingRequestSchema;
        output: typeof EnableDebugLoggingResponseSchema;
    };
    /**
     * @generated from rpc dxos.devtools.host.DevtoolsHost.SubscribeToKeyringKeys
     */
    subscribeToKeyringKeys: {
        methodKind: "server_streaming";
        input: typeof SubscribeToKeyringKeysRequestSchema;
        output: typeof SubscribeToKeyringKeysResponseSchema;
    };
    /**
     * @generated from rpc dxos.devtools.host.DevtoolsHost.SubscribeToCredentialMessages
     */
    subscribeToCredentialMessages: {
        methodKind: "server_streaming";
        input: typeof SubscribeToCredentialMessagesRequestSchema;
        output: typeof SubscribeToCredentialMessagesResponseSchema;
    };
    /**
     * @generated from rpc dxos.devtools.host.DevtoolsHost.SubscribeToSpaces
     */
    subscribeToSpaces: {
        methodKind: "server_streaming";
        input: typeof SubscribeToSpacesRequestSchema;
        output: typeof SubscribeToSpacesResponseSchema;
    };
    /**
     * @generated from rpc dxos.devtools.host.DevtoolsHost.SubscribeToItems
     */
    subscribeToItems: {
        methodKind: "server_streaming";
        input: typeof SubscribeToItemsRequestSchema;
        output: typeof SubscribeToItemsResponseSchema;
    };
    /**
     * @generated from rpc dxos.devtools.host.DevtoolsHost.SubscribeToFeeds
     */
    subscribeToFeeds: {
        methodKind: "server_streaming";
        input: typeof SubscribeToFeedsRequestSchema;
        output: typeof SubscribeToFeedsResponseSchema;
    };
    /**
     * @generated from rpc dxos.devtools.host.DevtoolsHost.SubscribeToFeedBlocks
     */
    subscribeToFeedBlocks: {
        methodKind: "server_streaming";
        input: typeof SubscribeToFeedBlocksRequestSchema;
        output: typeof SubscribeToFeedBlocksResponseSchema;
    };
    /**
     * @generated from rpc dxos.devtools.host.DevtoolsHost.SubscribeToMetadata
     */
    subscribeToMetadata: {
        methodKind: "server_streaming";
        input: typeof EmptySchema;
        output: typeof SubscribeToMetadataResponseSchema;
    };
    /**
     * @generated from rpc dxos.devtools.host.DevtoolsHost.GetSpaceSnapshot
     */
    getSpaceSnapshot: {
        methodKind: "unary";
        input: typeof GetSpaceSnapshotRequestSchema;
        output: typeof GetSpaceSnapshotResponseSchema;
    };
    /**
     * @generated from rpc dxos.devtools.host.DevtoolsHost.SaveSpaceSnapshot
     */
    saveSpaceSnapshot: {
        methodKind: "unary";
        input: typeof SaveSpaceSnapshotRequestSchema;
        output: typeof SaveSpaceSnapshotResponseSchema;
    };
    /**
     * @generated from rpc dxos.devtools.host.DevtoolsHost.ClearSnapshots
     */
    clearSnapshots: {
        methodKind: "unary";
        input: typeof ClearSnapshotsRequestSchema;
        output: typeof EmptySchema;
    };
    /**
     * @generated from rpc dxos.devtools.host.DevtoolsHost.GetNetworkPeers
     */
    getNetworkPeers: {
        methodKind: "unary";
        input: typeof GetNetworkPeersRequestSchema;
        output: typeof GetNetworkPeersResponseSchema;
    };
    /**
     * @generated from rpc dxos.devtools.host.DevtoolsHost.SubscribeToNetworkTopics
     */
    subscribeToNetworkTopics: {
        methodKind: "server_streaming";
        input: typeof EmptySchema;
        output: typeof SubscribeToNetworkTopicsResponseSchema;
    };
    /**
     * @generated from rpc dxos.devtools.host.DevtoolsHost.SubscribeToSignalStatus
     */
    subscribeToSignalStatus: {
        methodKind: "server_streaming";
        input: typeof EmptySchema;
        output: typeof SubscribeToSignalStatusResponseSchema;
    };
    /**
     * @generated from rpc dxos.devtools.host.DevtoolsHost.SubscribeToSignal
     */
    subscribeToSignal: {
        methodKind: "server_streaming";
        input: typeof EmptySchema;
        output: typeof SignalResponseSchema;
    };
    /**
     * @generated from rpc dxos.devtools.host.DevtoolsHost.SubscribeToSwarmInfo
     */
    subscribeToSwarmInfo: {
        methodKind: "server_streaming";
        input: typeof SubscribeToSwarmInfoRequestSchema;
        output: typeof SubscribeToSwarmInfoResponseSchema;
    };
}>;
//# sourceMappingURL=host_pb.d.ts.map