import type { Stream, RequestOptions } from "@dxos/codec-protobuf";
import substitutions from "../../../substitutions.js";
import * as dxos_agent_dashboard from "../agent/dashboard.js";
import * as dxos_agent_echoproxy from "../agent/echoproxy.js";
import * as dxos_agent_epoch from "../agent/epoch.js";
import * as dxos_agent_functions from "../agent/functions.js";
import * as dxos_bot from "../bot.js";
import * as dxos_client_services from "../client/services.js";
import * as dxos_config from "../config.js";
import * as dxos_devtools_swarm from "./swarm.js";
import * as dxos_echo_blob from "../echo/blob.js";
import * as dxos_echo_feed from "../echo/feed.js";
import * as dxos_echo_filter from "../echo/filter.js";
import * as dxos_echo_indexing from "../echo/indexing.js";
import * as dxos_echo_metadata from "../echo/metadata.js";
import * as dxos_echo_model_document from "../echo/model/document.js";
import * as dxos_echo_model_messenger from "../echo/model/messenger.js";
import * as dxos_echo_model_text from "../echo/model/text.js";
import * as dxos_echo_object from "../echo/object.js";
import * as dxos_echo_query from "../echo/query.js";
import * as dxos_echo_service from "../echo/service.js";
import * as dxos_echo_snapshot from "../echo/snapshot.js";
import * as dxos_echo_timeframe from "../echo/timeframe.js";
import * as dxos_edge_calls from "../edge/calls.js";
import * as dxos_edge_messenger from "../edge/messenger.js";
import * as dxos_edge_signal from "../edge/signal.js";
import * as dxos_error from "../error.js";
import * as dxos_gravity from "../gravity.js";
import * as dxos_halo_credentials from "../halo/credentials.js";
import * as dxos_halo_credentials_auth from "../halo/credentials/auth.js";
import * as dxos_halo_credentials_greet from "../halo/credentials/greet.js";
import * as dxos_halo_credentials_identity from "../halo/credentials/identity.js";
import * as dxos_halo_invitations from "../halo/invitations.js";
import * as dxos_halo_keyring from "../halo/keyring.js";
import * as dxos_halo_keys from "../halo/keys.js";
import * as dxos_halo_signed from "../halo/signed.js";
import * as dxos_iframe from "../iframe.js";
import * as dxos_keys from "../keys.js";
import * as dxos_mesh_bridge from "../mesh/bridge.js";
import * as dxos_mesh_broadcast from "../mesh/broadcast.js";
import * as dxos_mesh_messaging from "../mesh/messaging.js";
import * as dxos_mesh_muxer from "../mesh/muxer.js";
import * as dxos_mesh_presence from "../mesh/presence.js";
import * as dxos_mesh_protocol from "../mesh/protocol.js";
import * as dxos_mesh_replicator from "../mesh/replicator.js";
import * as dxos_mesh_signal from "../mesh/signal.js";
import * as dxos_mesh_swarm from "../mesh/swarm.js";
import * as dxos_mesh_teleport from "../mesh/teleport.js";
import * as dxos_mesh_teleport_auth from "../mesh/teleport/auth.js";
import * as dxos_mesh_teleport_automerge from "../mesh/teleport/automerge.js";
import * as dxos_mesh_teleport_blobsync from "../mesh/teleport/blobsync.js";
import * as dxos_mesh_teleport_control from "../mesh/teleport/control.js";
import * as dxos_mesh_teleport_gossip from "../mesh/teleport/gossip.js";
import * as dxos_mesh_teleport_notarization from "../mesh/teleport/notarization.js";
import * as dxos_mesh_teleport_replicator from "../mesh/teleport/replicator.js";
import * as dxos_registry from "../registry.js";
import * as dxos_rpc from "../rpc.js";
import * as dxos_service_agentmanager from "../service/agentmanager.js";
import * as dxos_service_publisher from "../service/publisher.js";
import * as dxos_service_supervisor from "../service/supervisor.js";
import * as dxos_service_tunnel from "../service/tunnel.js";
import * as dxos_tracing from "../tracing.js";
import * as dxos_type from "../type.js";
import * as dxos_value from "../value.js";
import * as example_testing_data from "../../example/testing/data.js";
import * as example_testing_rpc from "../../example/testing/rpc.js";
import * as google_protobuf from "../../google/protobuf.js";
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/diagnostics.proto}
 */
export interface Services {
    spaces?: SpaceStats[];
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/diagnostics.proto}
 */
export interface SpaceStats {
    key: ReturnType<(typeof substitutions)["dxos.keys.PublicKey"]["decode"]>;
    peers?: PeerStats[];
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/diagnostics.proto}
 */
export interface PeerStats {
    controlFeed: FeedStats;
    dataFeed: FeedStats;
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/diagnostics.proto}
 */
export interface FeedStats {
    key: ReturnType<(typeof substitutions)["dxos.keys.PublicKey"]["decode"]>;
    length: number;
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface DevtoolsHost {
    events: (request: void, options?: RequestOptions) => Stream<Event>;
    getConfig: (request: void, options?: RequestOptions) => Promise<GetConfigResponse>;
    getStorageInfo: (request: void, options?: RequestOptions) => Promise<StorageInfo>;
    resetStorage: (request: ResetStorageRequest, options?: RequestOptions) => Promise<void>;
    getBlobs: (request: void, options?: RequestOptions) => Promise<GetBlobsResponse>;
    getSnapshots: (request: void, options?: RequestOptions) => Promise<GetSnapshotsResponse>;
    enableDebugLogging: (request: EnableDebugLoggingRequest, options?: RequestOptions) => Promise<EnableDebugLoggingResponse>;
    disableDebugLogging: (request: EnableDebugLoggingRequest, options?: RequestOptions) => Promise<EnableDebugLoggingResponse>;
    subscribeToKeyringKeys: (request: SubscribeToKeyringKeysRequest, options?: RequestOptions) => Stream<SubscribeToKeyringKeysResponse>;
    subscribeToCredentialMessages: (request: SubscribeToCredentialMessagesRequest, options?: RequestOptions) => Stream<SubscribeToCredentialMessagesResponse>;
    subscribeToSpaces: (request: SubscribeToSpacesRequest, options?: RequestOptions) => Stream<SubscribeToSpacesResponse>;
    subscribeToItems: (request: SubscribeToItemsRequest, options?: RequestOptions) => Stream<SubscribeToItemsResponse>;
    subscribeToFeeds: (request: SubscribeToFeedsRequest, options?: RequestOptions) => Stream<SubscribeToFeedsResponse>;
    subscribeToFeedBlocks: (request: SubscribeToFeedBlocksRequest, options?: RequestOptions) => Stream<SubscribeToFeedBlocksResponse>;
    subscribeToMetadata: (request: void, options?: RequestOptions) => Stream<SubscribeToMetadataResponse>;
    getSpaceSnapshot: (request: GetSpaceSnapshotRequest, options?: RequestOptions) => Promise<GetSpaceSnapshotResponse>;
    saveSpaceSnapshot: (request: SaveSpaceSnapshotRequest, options?: RequestOptions) => Promise<SaveSpaceSnapshotResponse>;
    clearSnapshots: (request: ClearSnapshotsRequest, options?: RequestOptions) => Promise<void>;
    getNetworkPeers: (request: GetNetworkPeersRequest, options?: RequestOptions) => Promise<GetNetworkPeersResponse>;
    subscribeToNetworkTopics: (request: void, options?: RequestOptions) => Stream<SubscribeToNetworkTopicsResponse>;
    subscribeToSignalStatus: (request: void, options?: RequestOptions) => Stream<SubscribeToSignalStatusResponse>;
    subscribeToSignal: (request: void, options?: RequestOptions) => Stream<SignalResponse>;
    subscribeToSwarmInfo: (request: SubscribeToSwarmInfoRequest, options?: RequestOptions) => Stream<SubscribeToSwarmInfoResponse>;
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface Event {
    ready?: ReadyEvent;
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface ReadyEvent {
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface GetConfigResponse {
    config: string;
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface StorageInfo {
    type: string;
    storageUsage: number;
    originUsage: number;
    usageQuota: number;
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface EnableDebugLoggingRequest {
    /**
     * Options:
     *   - proto3_optional = true
     */
    namespaces?: string;
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface EnableDebugLoggingResponse {
    /**
     * Options:
     *   - proto3_optional = true
     */
    enabledNamespaces?: string;
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface DisableDebugLoggingRequest {
    /**
     * Options:
     *   - proto3_optional = true
     */
    namespaces?: string;
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface DisableDebugLoggingResponse {
    /**
     * Options:
     *   - proto3_optional = true
     */
    enabledNamespaces?: string;
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface SubscribeToKeyringKeysRequest {
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface SubscribeToKeyringKeysResponse {
    keys?: dxos_halo_keyring.KeyRecord[];
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface SubscribeToCredentialMessagesRequest {
    /**
     * Options:
     *   - proto3_optional = true
     */
    spaceKey?: ReturnType<(typeof substitutions)["dxos.keys.PublicKey"]["decode"]>;
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface SubscribeToCredentialMessagesResponse {
    messages?: dxos_halo_signed.SignedMessage[];
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface ResetStorageRequest {
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface StoredSnapshotInfo {
    key: string;
    size: number;
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface GetBlobsResponse {
    blobs?: dxos_echo_blob.BlobMeta[];
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface GetSnapshotsResponse {
    snapshots?: StoredSnapshotInfo[];
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface SubscribeToMetadataResponse {
    metadata: dxos_echo_metadata.EchoMetadata;
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface SubscribeToSpacesRequest {
    spaceKeys?: ReturnType<(typeof substitutions)["dxos.keys.PublicKey"]["decode"]>[];
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface SubscribeToSpacesResponse {
    spaces?: SubscribeToSpacesResponse.SpaceInfo[];
}
export namespace SubscribeToSpacesResponse {
    /**
     * Defined in:
     *   {@link file://./../../../dxos/devtools/host.proto}
     */
    export interface SpaceInfo {
        key: ReturnType<(typeof substitutions)["dxos.keys.PublicKey"]["decode"]>;
        isOpen: boolean;
        /**
         * Options:
         *   - proto3_optional = true
         */
        timeframe?: ReturnType<(typeof substitutions)["dxos.echo.timeframe.TimeframeVector"]["decode"]>;
        genesisFeed: ReturnType<(typeof substitutions)["dxos.keys.PublicKey"]["decode"]>;
        controlFeed: ReturnType<(typeof substitutions)["dxos.keys.PublicKey"]["decode"]>;
        dataFeed: ReturnType<(typeof substitutions)["dxos.keys.PublicKey"]["decode"]>;
    }
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface SubscribeToItemsRequest {
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface SubscribeToItemsResponse {
    data: string;
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface SubscribeToFeedsRequest {
    feedKeys?: ReturnType<(typeof substitutions)["dxos.keys.PublicKey"]["decode"]>[];
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface SubscribeToFeedsResponse {
    feeds?: SubscribeToFeedsResponse.Feed[];
}
export namespace SubscribeToFeedsResponse {
    /**
     * Defined in:
     *   {@link file://./../../../dxos/devtools/host.proto}
     */
    export interface FeedOwner {
        identity: ReturnType<(typeof substitutions)["dxos.keys.PublicKey"]["decode"]>;
        device: ReturnType<(typeof substitutions)["dxos.keys.PublicKey"]["decode"]>;
    }
    /**
     * Defined in:
     *   {@link file://./../../../dxos/devtools/host.proto}
     */
    export interface Feed {
        feedKey: ReturnType<(typeof substitutions)["dxos.keys.PublicKey"]["decode"]>;
        length: number;
        bytes: number;
        /**
         * Bitfield of downloaded blocks.
         */
        downloaded: Uint8Array;
        /**
         * Options:
         *   - proto3_optional = true
         */
        owner?: SubscribeToFeedsResponse.FeedOwner;
    }
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface SubscribeToFeedBlocksRequest {
    /**
     * Options:
     *   - proto3_optional = true
     */
    spaceKey?: ReturnType<(typeof substitutions)["dxos.keys.PublicKey"]["decode"]>;
    /**
     * Options:
     *   - proto3_optional = true
     */
    feedKey?: ReturnType<(typeof substitutions)["dxos.keys.PublicKey"]["decode"]>;
    /**
     * Options:
     *   - proto3_optional = true
     */
    maxBlocks?: number;
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface SubscribeToFeedBlocksResponse {
    blocks?: SubscribeToFeedBlocksResponse.Block[];
}
export namespace SubscribeToFeedBlocksResponse {
    /**
     * Defined in:
     *   {@link file://./../../../dxos/devtools/host.proto}
     */
    export interface Block {
        feedKey: ReturnType<(typeof substitutions)["dxos.keys.PublicKey"]["decode"]>;
        seq: number;
        data: dxos_echo_feed.FeedMessage;
    }
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface GetSpaceSnapshotRequest {
    spaceKey: ReturnType<(typeof substitutions)["dxos.keys.PublicKey"]["decode"]>;
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface GetSpaceSnapshotResponse {
    /**
     * Options:
     *   - proto3_optional = true
     */
    snapshot?: dxos_echo_snapshot.SpaceSnapshot;
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface SaveSpaceSnapshotRequest {
    spaceKey: ReturnType<(typeof substitutions)["dxos.keys.PublicKey"]["decode"]>;
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface SaveSpaceSnapshotResponse {
    /**
     * Options:
     *   - proto3_optional = true
     */
    snapshot?: dxos_echo_snapshot.SpaceSnapshot;
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface ClearSnapshotsRequest {
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface GetNetworkPeersRequest {
    topic: Uint8Array;
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface GetNetworkPeersResponse {
    peers?: GetNetworkPeersResponse.PeerInfo[];
}
export namespace GetNetworkPeersResponse {
    /**
     * Defined in:
     *   {@link file://./../../../dxos/devtools/host.proto}
     */
    export interface PeerInfo {
        id: ReturnType<(typeof substitutions)["dxos.keys.PublicKey"]["decode"]>;
        state: string;
        connections?: Uint8Array[];
    }
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface SubscribeToNetworkTopicsResponse {
    topics?: SubscribeToNetworkTopicsResponse.Topic[];
}
export namespace SubscribeToNetworkTopicsResponse {
    /**
     * Defined in:
     *   {@link file://./../../../dxos/devtools/host.proto}
     */
    export interface Topic {
        topic: ReturnType<(typeof substitutions)["dxos.keys.PublicKey"]["decode"]>;
        /**
         * Options:
         *   - proto3_optional = true
         */
        label?: string;
    }
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface SubscribeToSignalStatusResponse {
    servers?: SubscribeToSignalStatusResponse.SignalServer[];
}
export namespace SubscribeToSignalStatusResponse {
    /**
     * Defined in:
     *   {@link file://./../../../dxos/devtools/host.proto}
     */
    export interface SignalServer {
        host: string;
        state: dxos_mesh_signal.SignalState;
        /**
         * Options:
         *   - proto3_optional = true
         */
        error?: string;
        reconnectIn: number;
        connectionStarted: ReturnType<(typeof substitutions)["google.protobuf.Timestamp"]["decode"]>;
        lastStateChange: ReturnType<(typeof substitutions)["google.protobuf.Timestamp"]["decode"]>;
    }
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface SignalResponse {
    swarmEvent?: dxos_mesh_signal.SwarmEvent;
    message?: dxos_mesh_signal.Message;
    receivedAt: ReturnType<(typeof substitutions)["google.protobuf.Timestamp"]["decode"]>;
    /**
     * Options:
     *   - proto3_optional = true
     */
    topic?: Uint8Array;
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface SubscribeToSwarmInfoRequest {
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/devtools/host.proto}
 */
export interface SubscribeToSwarmInfoResponse {
    data?: dxos_devtools_swarm.SwarmInfo[];
}
