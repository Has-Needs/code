export type IdOrder = string[];
/**
 * Uses an array of string id’s to order a map of objects, returning an array of those objects. Objects not listed by
 * the array of id’s occur later in the resulting array of objects based on the map’s key order.
 * @param objectMap
 * @param order
 */
export declare const inferObjectOrder: <T = any>(objectMap: Record<string, T>, order?: IdOrder) => T[];
/**
 * Uses an array of string id’s to order a map of objects, returning a new map with the keys in the prescribed order.
 * Objects not listed by the array of id’s occur later in the resulting array of objects based on the map’s key order.
 * @param objectMap
 * @param order
 */
export declare const inferRecordOrder: <T = any>(objectMap: Record<string, T>, order?: IdOrder) => Record<string, T>;
//# sourceMappingURL=order.d.ts.map