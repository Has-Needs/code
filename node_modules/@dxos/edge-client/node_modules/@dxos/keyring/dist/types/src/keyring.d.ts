import { Event } from '@dxos/async';
import { type ProtoCodec } from '@dxos/codec-protobuf';
import { type Signer } from '@dxos/crypto';
import { PublicKey } from '@dxos/keys';
import { type KeyRecord } from '@dxos/protocols/proto/dxos/halo/keyring';
import { type Directory } from '@dxos/random-access-storage';
declare const KeyRecord: ProtoCodec<KeyRecord>;
/**
 * Manages keys.
 */
export declare class Keyring implements Signer {
    private readonly _storage;
    private readonly _keyCache;
    readonly keysUpdate: Event<void>;
    constructor(_storage?: Directory);
    sign(key: PublicKey, message: Uint8Array): Promise<Uint8Array>;
    createKey(): Promise<PublicKey>;
    private _getKey;
    private _setKey;
    deleteKey(key: PublicKey): Promise<void>;
    list(): Promise<KeyRecord[]>;
    importKeyPair(keyPair: CryptoKeyPair): Promise<PublicKey>;
}
export {};
//# sourceMappingURL=keyring.d.ts.map