/**
 * Lets types provide custom formatters for the Chrome Devtools.
 *
 * https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html
 * NOTE: Must be enabled in chrome devtools preferences.
 *
 * @example
 * ```typescript
 * class MyType {
 *  get [devtoolsFormatter] (): DevtoolsFormatter {
 *    ...
 *  }
 * ```
 */
export declare const devtoolsFormatter: unique symbol;
export type JsonML = [string, Record<string, any>?, ...(JsonML | string)[]];
export interface DevtoolsFormatter {
    /**
     * NOTE: Make sure to do an instance check and return null if the object is not of the correct type.
     */
    header: (config?: any) => JsonML | null;
    hasBody?: (config?: any) => boolean;
    body?: (config?: any) => JsonML | null;
}
/**
 * Types that implement this interface can provide custom formatters for the Chrome Devtools.
 *
 * https://firefox-source-docs.mozilla.org/devtools-user/custom_formatters/index.html
 */
export interface CustomDevtoolsFormattable {
    get [devtoolsFormatter](): DevtoolsFormatter;
}
//# sourceMappingURL=devtools-formatter.d.ts.map