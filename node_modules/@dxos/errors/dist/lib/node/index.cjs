"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var node_exports = {};
__export(node_exports, {
  AbortedError: () => AbortedError,
  ApiError: () => ApiError,
  BaseError: () => BaseError,
  InternalError: () => InternalError,
  SystemError: () => SystemError,
  TimeoutError: () => TimeoutError,
  UnimplementedError: () => UnimplementedError
});
module.exports = __toCommonJS(node_exports);
var BaseError = class _BaseError extends Error {
  static extend(code) {
    return class extends _BaseError {
      static {
        this.code = code;
      }
      static is(error) {
        return typeof error === "object" && error !== null && "code" in error && error.code === code;
      }
      constructor(message, options) {
        super(code, message, options);
      }
    };
  }
  #code;
  #context;
  constructor(code, message, options) {
    super(message, options);
    this.#code = code;
    this.#context = options?.context ?? {};
    Object.setPrototypeOf(this, new.target.prototype);
  }
  get name() {
    return this.#code;
  }
  get code() {
    return this.#code;
  }
  get context() {
    return this.#context;
  }
};
var TimeoutError = class extends BaseError.extend("TIMEOUT") {
};
var AbortedError = class extends BaseError.extend("ABORTED") {
};
var UnimplementedError = class extends BaseError.extend("UNIMPLEMENTED") {
};
var ApiError = class extends BaseError.extend("API_ERROR") {
};
var SystemError = class extends BaseError.extend("SYSTEM_ERROR") {
};
var InternalError = class extends BaseError.extend("INTERNAL_ERROR") {
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  AbortedError,
  ApiError,
  BaseError,
  InternalError,
  SystemError,
  TimeoutError,
  UnimplementedError
});
//# sourceMappingURL=index.cjs.map
