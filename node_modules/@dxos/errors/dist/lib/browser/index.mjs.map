{
  "version": 3,
  "sources": ["../../../src/base.ts", "../../../src/errors.ts"],
  "sourcesContent": ["//\n// Copyright 2025 DXOS.org\n//\n\nexport type BaseErrorOptions = {\n  /**\n   * The cause of the error.\n   * An instance of Error.\n   */\n  cause?: unknown;\n\n  /**\n   * Structured details about the error.\n   */\n  context?: Record<string, unknown>;\n};\n\nexport class BaseError extends Error {\n  static extend(code: string) {\n    return class extends BaseError {\n      static code = code;\n\n      static is(error: unknown): error is BaseError {\n        return typeof error === 'object' && error !== null && 'code' in error && error.code === code;\n      }\n\n      constructor(message: string, options?: BaseErrorOptions) {\n        super(code, message, options);\n      }\n    };\n  }\n\n  #code: string;\n  #context: Record<string, unknown>;\n\n  constructor(code: string, message: string, options?: BaseErrorOptions) {\n    super(message, options);\n\n    this.#code = code;\n    this.#context = options?.context ?? {};\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n\n  override get name() {\n    return this.#code;\n  }\n\n  get code() {\n    return this.#code;\n  }\n\n  get context() {\n    return this.#context;\n  }\n}\n", "//\n// Copyright 2025 DXOS.org\n//\n\nimport { BaseError } from './base';\n\nexport class TimeoutError extends BaseError.extend('TIMEOUT') {}\n\nexport class AbortedError extends BaseError.extend('ABORTED') {}\n\nexport class UnimplementedError extends BaseError.extend('UNIMPLEMENTED') {}\n\nexport class ApiError extends BaseError.extend('API_ERROR') {}\n\nexport class SystemError extends BaseError.extend('SYSTEM_ERROR') {}\n\nexport class InternalError extends BaseError.extend('INTERNAL_ERROR') {}\n"],
  "mappings": ";AAiBO,IAAMA,YAAN,MAAMA,mBAAkBC,MAAAA;EAC7B,OAAOC,OAAOC,MAAc;AAC1B,WAAO,cAAcH,WAAAA;MACnB;aAAOG,OAAOA;;MAEd,OAAOC,GAAGC,OAAoC;AAC5C,eAAO,OAAOA,UAAU,YAAYA,UAAU,QAAQ,UAAUA,SAASA,MAAMF,SAASA;MAC1F;MAEA,YAAYG,SAAiBC,SAA4B;AACvD,cAAMJ,MAAMG,SAASC,OAAAA;MACvB;IACF;EACF;EAEA;EACA;EAEA,YAAYJ,MAAcG,SAAiBC,SAA4B;AACrE,UAAMD,SAASC,OAAAA;AAEf,SAAK,QAAQJ;AACb,SAAK,WAAWI,SAASC,WAAW,CAAC;AACrCC,WAAOC,eAAe,MAAM,WAAWC,SAAS;EAClD;EAEA,IAAaC,OAAO;AAClB,WAAO,KAAK;EACd;EAEA,IAAIT,OAAO;AACT,WAAO,KAAK;EACd;EAEA,IAAIK,UAAU;AACZ,WAAO,KAAK;EACd;AACF;;;AChDO,IAAMK,eAAN,cAA2BC,UAAUC,OAAO,SAAA,EAAA;AAAY;AAExD,IAAMC,eAAN,cAA2BF,UAAUC,OAAO,SAAA,EAAA;AAAY;AAExD,IAAME,qBAAN,cAAiCH,UAAUC,OAAO,eAAA,EAAA;AAAkB;AAEpE,IAAMG,WAAN,cAAuBJ,UAAUC,OAAO,WAAA,EAAA;AAAc;AAEtD,IAAMI,cAAN,cAA0BL,UAAUC,OAAO,cAAA,EAAA;AAAiB;AAE5D,IAAMK,gBAAN,cAA4BN,UAAUC,OAAO,gBAAA,EAAA;AAAmB;",
  "names": ["BaseError", "Error", "extend", "code", "is", "error", "message", "options", "context", "Object", "setPrototypeOf", "prototype", "name", "TimeoutError", "BaseError", "extend", "AbortedError", "UnimplementedError", "ApiError", "SystemError", "InternalError"]
}
