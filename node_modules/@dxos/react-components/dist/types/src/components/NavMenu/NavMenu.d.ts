import * as NavigationMenuPrimitive from '@radix-ui/react-navigation-menu';
import React, { ComponentProps, ReactNode } from 'react';
import { TooltipContentProps } from '../Tooltip';
interface NavMenuItemSharedProps {
    children: ReactNode;
    active?: boolean;
    separator?: false;
}
export interface NavMenuLinkItemProps extends NavMenuItemSharedProps {
    triggerLinkProps: Omit<ComponentProps<typeof NavigationMenuPrimitive.Link>, 'children'>;
    children: ReactNode;
}
export interface NavMenuTooltipLinkItemProps extends NavMenuLinkItemProps {
    tooltip: Omit<TooltipContentProps, 'children'>;
}
export interface NavMenuInvokerItemProps extends NavMenuItemSharedProps {
    content: ReactNode;
    children: ReactNode;
}
export interface NavMenuSeparatorProps {
    separator: true;
}
export declare type NavMenuItem = NavMenuTooltipLinkItemProps | NavMenuLinkItemProps | NavMenuInvokerItemProps | NavMenuSeparatorProps;
export interface NavMenuSlots {
    root?: Omit<ComponentProps<typeof NavigationMenuPrimitive.Root>, 'children'>;
    viewport?: Omit<ComponentProps<typeof NavigationMenuPrimitive.Viewport>, 'children'>;
    list?: Omit<ComponentProps<typeof NavigationMenuPrimitive.List>, 'children'>;
    indicator?: Omit<ComponentProps<typeof NavigationMenuPrimitive.Indicator>, 'children'>;
    indicatorIcon?: Pick<ComponentProps<'div'>, 'className'>;
}
export interface NavMenuProps {
    items: NavMenuItem[];
    slots?: NavMenuSlots;
    variant?: 'horizontal' | 'vertical';
}
export declare const NavMenuLink: React.ForwardRefExoticComponent<NavigationMenuPrimitive.NavigationMenuLinkProps & React.RefAttributes<HTMLAnchorElement>>;
export declare const NavMenuSeparatorItem: (_props: NavMenuSeparatorProps) => JSX.Element;
export declare const NavMenu: ({ items, slots, variant }: NavMenuProps) => JSX.Element;
export {};
//# sourceMappingURL=NavMenu.d.ts.map