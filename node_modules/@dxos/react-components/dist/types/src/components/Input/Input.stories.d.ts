import '@dxosTheme';
declare const _default: {
    component: import("react").ForwardRefExoticComponent<import("./InputProps").InputProps & import("react").RefAttributes<HTMLInputElement | HTMLTextAreaElement>>;
    argTypes: {
        description: {
            control: string;
        };
        validationValence: {
            control: string;
            options: string[];
        };
        size: {
            control: string;
            options: string[];
        };
    };
};
export default _default;
export declare const Default: {
    args: {
        label: string;
        placeholder: string;
        disabled: boolean;
        description: undefined;
        labelVisuallyHidden: boolean;
        descriptionVisuallyHidden: boolean;
        validationMessage: string;
        validationValence: undefined;
        length: number;
    };
};
export declare const DensityFine: {
    args: {
        label: string;
        placeholder: string;
        disabled: boolean;
        description: undefined;
        labelVisuallyHidden: boolean;
        descriptionVisuallyHidden: boolean;
        validationMessage: string;
        validationValence: undefined;
        length: number;
        density: string;
    };
};
export declare const Subdued: {
    args: {
        label: string;
        placeholder: string;
        disabled: boolean;
        description: undefined;
        labelVisuallyHidden: boolean;
        descriptionVisuallyHidden: boolean;
        validationMessage: string;
        validationValence: undefined;
        length: number;
        variant: string;
    };
};
export declare const Disabled: {
    args: {
        label: string;
        placeholder: string;
        disabled: boolean;
    };
};
export declare const LabelVisuallyHidden: {
    args: {
        label: string;
        labelVisuallyHidden: boolean;
        placeholder: string;
    };
};
export declare const InputWithDescription: {
    args: {
        label: string;
        placeholder: string;
        description: string;
    };
};
export declare const InputWithErrorAndDescription: {
    args: {
        label: string;
        placeholder: string;
        description: string;
        validationValence: string;
        validationMessage: string;
    };
};
export declare const InputWithValidationAndDescription: {
    args: {
        label: string;
        placeholder: string;
        description: string;
        validationValence: string;
        validationMessage: string;
    };
};
export declare const PinInput: {
    args: {
        label: string;
        size: string;
        length: number;
        description: string;
        placeholder: string;
    };
};
//# sourceMappingURL=Input.stories.d.ts.map