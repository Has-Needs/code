import React from 'react';
import { ListItemCollapsibleContentProps, ListItemHeadingProps, ListItemProps, ListProps } from '../List';
declare type TreeProps = ListProps;
declare type TreeItemProps = ListItemProps;
declare const TreeRoot: (props: TreeProps) => JSX.Element;
declare const TreeBranch: React.ForwardRefExoticComponent<Omit<ListProps, "labelId"> & {
    __listScope?: import("@radix-ui/react-context").Scope<any>;
} & React.RefAttributes<HTMLOListElement>>;
declare const TreeItem: (props: ListItemProps) => JSX.Element;
declare type TreeItemHeadingProps = ListItemHeadingProps;
declare const TreeItemHeading: ({ children, className, asChild, __listScope, ...props }: ListItemHeadingProps) => JSX.Element;
declare type TreeItemBodyProps = ListItemCollapsibleContentProps;
declare const TreeItemBody: React.ForwardRefExoticComponent<import("@radix-ui/react-collapsible").CollapsibleContentProps & React.RefAttributes<HTMLDivElement>>;
export { TreeRoot, TreeBranch, TreeItem, TreeItemHeading, TreeItemBody };
export type { TreeProps, TreeItemProps, TreeItemHeadingProps, TreeItemBodyProps };
//# sourceMappingURL=Tree.d.ts.map