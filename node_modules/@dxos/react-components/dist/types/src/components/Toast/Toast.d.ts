import * as ToastPrimitive from '@radix-ui/react-toast';
import { ComponentProps, ReactHTMLElement, ReactNode } from 'react';
export interface ToastSlots {
    root?: Omit<ComponentProps<typeof ToastPrimitive.Root>, 'children'>;
    heading?: Omit<ComponentProps<'div'>, 'children'>;
    headingInner?: Omit<ComponentProps<'div'>, 'children'>;
    title?: Omit<ComponentProps<typeof ToastPrimitive.Title>, 'children'>;
    description?: Omit<ComponentProps<typeof ToastPrimitive.Description>, 'children'>;
    actions?: Omit<ComponentProps<'div'>, 'children'>;
}
export interface ToastProps extends Omit<ComponentProps<typeof ToastPrimitive.Root>, 'title'> {
    title: ReactNode;
    openTrigger?: string | Omit<ReactHTMLElement<HTMLElement>, 'ref'>;
    closeTrigger?: ReactNode;
    actionTriggers?: {
        altText: string;
        trigger: ReactNode;
    }[];
    titleVisuallyHidden?: boolean;
    description?: ReactNode;
    initiallyOpen?: boolean;
    slots?: ToastSlots;
}
export declare const Toast: ({ title, titleVisuallyHidden, description, openTrigger, closeTrigger, actionTriggers, initiallyOpen, slots }: ToastProps) => JSX.Element;
//# sourceMappingURL=Toast.d.ts.map