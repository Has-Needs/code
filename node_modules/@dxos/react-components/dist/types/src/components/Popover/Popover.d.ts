import { X } from '@phosphor-icons/react';
import * as PopoverPrimitive from '@radix-ui/react-popover';
import { ComponentProps, ReactNode } from 'react';
export interface PopoverSlots {
    content?: Omit<ComponentProps<typeof PopoverPrimitive.Content>, 'children'>;
    arrow?: Pick<ComponentProps<typeof PopoverPrimitive.Arrow>, 'className'>;
    close?: Omit<ComponentProps<typeof PopoverPrimitive.Close>, 'children'>;
    closeIcon?: ComponentProps<typeof X>;
    trigger?: Omit<ComponentProps<typeof PopoverPrimitive.Trigger>, 'children'>;
}
export interface PopoverProps {
    openTrigger: ReactNode;
    children: ReactNode;
    closeLabel?: string;
    initiallyOpen?: boolean;
    mountAsSibling?: boolean;
    triggerIsInToolbar?: boolean;
    slots?: PopoverSlots;
}
export declare const Popover: ({ openTrigger, children, closeLabel, initiallyOpen, mountAsSibling, triggerIsInToolbar, slots }: PopoverProps) => JSX.Element;
//# sourceMappingURL=Popover.d.ts.map