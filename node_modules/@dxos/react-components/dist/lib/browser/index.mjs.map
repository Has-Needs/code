{
  "version": 3,
  "sources": ["../../../src/index.ts", "../../../src/components/Alert/Alert.tsx", "../../../src/hooks/useId.ts", "../../../src/hooks/useDensityContext.ts", "../../../src/hooks/useForwardedRef.ts", "../../../src/hooks/useElevationContext.ts", "../../../src/hooks/useThemeContext.ts", "../../../src/hooks/useIsFocused.ts", "../../../src/hooks/useMediaQuery.ts", "../../../src/hooks/useTranslationsContext.ts", "../../../src/components/ThemeProvider/TranslationsProvider.tsx", "../../../src/components/Loading/Loading.tsx", "../../../src/util/mx.ts", "../../../src/util/withLogical.ts", "../../../src/util/hasIosKeyboard.ts", "../../../src/util/dnd.ts", "../../../src/styles/active.ts", "../../../src/styles/density.ts", "../../../src/styles/disabled.ts", "../../../src/styles/focus.ts", "../../../src/styles/group.ts", "../../../src/styles/hover.ts", "../../../src/styles/ornament.ts", "../../../src/styles/shimmer.ts", "../../../src/styles/size.ts", "../../../src/styles/text.ts", "../../../src/styles/valence.ts", "../../../src/styles/input.ts", "../../../src/components/Avatar/Avatar.tsx", "../../../src/components/Button/Button.tsx", "../../../src/components/Button/buttonStyles.ts", "../../../src/components/Button/ButtonGroup.tsx", "../../../src/components/ElevationProvider/ElevationProvider.tsx", "../../../src/components/Checkbox/Checkbox.tsx", "../../../src/components/CompoundButton/CompoundButton.tsx", "../../../src/components/DensityProvider/DensityProvider.tsx", "../../../src/components/Dialog/Dialog.tsx", "../../../src/components/Tooltip/Tooltip.tsx", "../../../src/components/Dialog/dialogStyles.ts", "../../../src/components/DropdownMenu/DropdownMenu.tsx", "../../../src/components/DropdownMenu/dropdownMenuStyles.ts", "../../../src/components/Group/Group.tsx", "../../../src/components/Heading/Heading.tsx", "../../../src/components/List/List.tsx", "../../../src/components/List/listStyles.ts", "../../../src/components/Input/Input.tsx", "../../../src/components/Input/BarePinInput.tsx", "../../../src/components/Input/BareTextInput.tsx", "../../../src/components/Input/BareTextareaInput.tsx", "../../../src/components/NavMenu/NavMenu.tsx", "../../../src/components/Popover/Popover.tsx", "../../../src/components/QrCode/QrCode.tsx", "../../../src/components/Tag/Tag.tsx", "../../../src/components/Toast/Toast.tsx", "../../../src/components/ThemeProvider/ThemeProvider.tsx", "../../../src/components/Tree/JsonTree.tsx", "../../../src/components/Tree/Tree.tsx", "../../../src/components/TreeView/TreeView.tsx", "../../../src/components/Select/Select.tsx", "../../../src/components/Searchbar/Searchbar.tsx", "../../../src/config/tailwind.ts"],
  "sourcesContent": ["//\n// Copyright 2022 DXOS.org\n//\n\nexport { useTranslation, Trans } from 'react-i18next';\n\nexport * from './components';\nexport * from './config';\nexport * from './hooks';\nexport * from './props';\nexport * from './styles';\nexport * from './util';\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport React, { ComponentProps, ReactNode } from 'react';\n\nimport { useId, useButtonShadow } from '../../hooks';\nimport { MessageValence } from '../../props';\nimport { alertValence } from '../../styles';\nimport { mx } from '../../util';\n\nexport interface AlertSlots {\n  root?: Omit<ComponentProps<'div'>, 'children'>;\n  title?: Omit<ComponentProps<'p'>, 'children'>;\n}\n\nexport interface AlertProps {\n  title: ReactNode;\n  assertive?: boolean;\n  valence?: MessageValence;\n  children?: ReactNode;\n  slots?: AlertSlots;\n}\n\nexport const Alert = ({ title, children, assertive, valence, slots = {} }: AlertProps) => {\n  const labelId = useId('alertLabel');\n  const shadow = useButtonShadow();\n  return (\n    <div\n      {...slots.root}\n      role={assertive ? 'alert' : 'group'}\n      aria-labelledby={labelId}\n      className={mx('p-3 rounded-md max-is-full overflow-auto', shadow, alertValence(valence), slots.root?.className)}\n    >\n      <p {...slots.title} id={labelId} className={mx('font-medium mb-2', slots.title?.className)}>\n        {title}\n      </p>\n      {children}\n    </div>\n  );\n};\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport alea from 'alea';\nimport { useMemo } from 'react';\n\ninterface PrngFactory {\n  new (seed?: string): () => number;\n}\n\nconst Alea: PrngFactory = alea as unknown as PrngFactory;\n\nconst prng = new Alea('@dxos/react-components');\n\nexport const randomString = (n = 4) =>\n  prng()\n    .toString(16)\n    .slice(2, n + 2);\n\nexport const useId = (namespace: string, n?: number) => useMemo(() => `${namespace}-${randomString(n)}`, []);\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport { useContext } from 'react';\n\nimport { DensityContext } from '../components';\nimport { Density } from '../props';\n\nexport const useDensityContext = (propsDensity?: Density) => {\n  const { density } = useContext(DensityContext);\n  return propsDensity ?? density;\n};\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport { useRef, useEffect } from 'react';\n\nexport const useForwardedRef = <T>(ref: React.ForwardedRef<T>) => {\n  const innerRef = useRef<T>(null);\n\n  useEffect(() => {\n    if (!ref) {\n      return;\n    }\n    if (typeof ref === 'function') {\n      ref(innerRef.current);\n    } else {\n      ref.current = innerRef.current;\n    }\n  });\n\n  return innerRef;\n};\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport { useContext } from 'react';\n\nimport { ElevationContext } from '../components';\nimport { Elevation } from '../props';\nimport { useThemeContext } from './useThemeContext';\n\nexport const useElevationContext = () => useContext(ElevationContext);\n\nexport const useButtonShadow = (propsElevation?: Elevation) => {\n  const { elevation } = useElevationContext();\n  const { themeVariant } = useThemeContext();\n  const resolvedElevation = propsElevation ?? elevation;\n  return themeVariant === 'os'\n    ? 'shadow-none'\n    : resolvedElevation === 'group'\n    ? 'shadow'\n    : resolvedElevation === 'chrome'\n    ? 'shadow-none'\n    : 'shadow-md';\n};\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport { useContext } from 'react';\n\nimport { ThemeContext } from '../components';\n\nexport const useThemeContext = () => useContext(ThemeContext);\n", "//\n// Copyright 2022 DXOS.org\n//\n\n// Based upon the useIsFocused hook which is part of the `rci` project:\n/// https://github.com/leonardodino/rci/blob/main/packages/use-is-focused\n\nimport { useEffect, useRef, useState, RefObject } from 'react';\n\nexport const useIsFocused = (inputRef: RefObject<HTMLInputElement>) => {\n  const [isFocused, setIsFocused] = useState<boolean | undefined>(undefined);\n  const isFocusedRef = useRef<boolean | undefined>(isFocused);\n\n  isFocusedRef.current = isFocused;\n\n  useEffect(() => {\n    const input = inputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const onFocus = () => setIsFocused(true);\n    const onBlur = () => setIsFocused(false);\n    input.addEventListener('focus', onFocus);\n    input.addEventListener('blur', onBlur);\n\n    if (isFocusedRef.current === undefined) {\n      setIsFocused(document.activeElement === input);\n    }\n\n    return () => {\n      input.removeEventListener('focus', onFocus);\n      input.removeEventListener('blur', onBlur);\n    };\n  }, [inputRef, setIsFocused]);\n\n  return isFocused;\n};\n", "//\n// Copyright 2023 DXOS.org\n//\n\n// This hook is based on Chakra UIâ€™s `useMediaQuery`: https://github.com/chakra-ui/chakra-ui/blob/main/packages/components/media-query/src/use-media-query.ts\n\nimport { useEffect, useState } from 'react';\n\nexport type UseMediaQueryOptions = {\n  fallback?: boolean | boolean[];\n  ssr?: boolean;\n};\n\n// todo (thure): This should be derived from the same source of truth as the Tailwind theme config\nconst breakpointMediaQueries: Record<string, string> = {\n  sm: '(min-width: 640px)',\n  md: '(min-width: 768px)',\n  lg: '(min-width: 1024px)',\n  xl: '(min-width: 1280px)',\n  '2xl': '(min-width: 1536px)'\n};\n\n/**\n * React hook that tracks state of a CSS media query\n *\n * @param query the media query to match, or a recognized breakpoint token\n * @param options the media query options { fallback, ssr }\n *\n * @see Docs https://chakra-ui.com/docs/hooks/use-media-query\n */\nexport const useMediaQuery = (query: string | string[], options: UseMediaQueryOptions = {}): boolean[] => {\n  const { ssr = true, fallback } = options;\n\n  const queries = (Array.isArray(query) ? query : [query]).map((query) =>\n    query in breakpointMediaQueries ? breakpointMediaQueries[query] : query\n  );\n\n  let fallbackValues = Array.isArray(fallback) ? fallback : [fallback];\n  fallbackValues = fallbackValues.filter((v) => v != null) as boolean[];\n\n  const [value, setValue] = useState(() => {\n    return queries.map((query, index) => ({\n      media: query,\n      matches: ssr ? !!fallbackValues[index] : document.defaultView?.matchMedia(query).matches\n    }));\n  });\n\n  useEffect(() => {\n    setValue(\n      queries.map((query) => ({\n        media: query,\n        matches: document.defaultView?.matchMedia(query).matches\n      }))\n    );\n\n    const mql = queries.map((query) => document.defaultView?.matchMedia(query));\n\n    const handler = (evt: MediaQueryListEvent) => {\n      setValue((prev) => {\n        return prev.slice().map((item) => {\n          if (item.media === evt.media) {\n            return { ...item, matches: evt.matches };\n          }\n          return item;\n        });\n      });\n    };\n\n    mql.forEach((mql) => {\n      if (typeof mql?.addListener === 'function') {\n        mql?.addListener(handler);\n      } else {\n        mql?.addEventListener('change', handler);\n      }\n    });\n\n    return () => {\n      mql.forEach((mql) => {\n        if (typeof mql?.removeListener === 'function') {\n          mql?.removeListener(handler);\n        } else {\n          mql?.removeEventListener('change', handler);\n        }\n      });\n    };\n  }, [document.defaultView]);\n\n  return value.map((item) => !!item.matches);\n};\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport { useContext } from 'react';\n\nimport { TranslationsContext } from '../components/ThemeProvider/TranslationsProvider';\n\nexport const useTranslationsContext = () => useContext(TranslationsContext);\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport i18Next, { Resource } from 'i18next';\nimport React, { ReactNode, useEffect, createContext, useState, Suspense } from 'react';\nimport { initReactI18next } from 'react-i18next';\n\nimport { Loading } from '../Loading';\n\nconst initialLng = 'en-US';\nconst initialNs = 'dxos-common';\n\nexport const resources = {\n  [initialLng]: {\n    [initialNs]: {\n      'loading translations': 'Loading translationsâ€¦'\n    }\n  }\n} as const;\n\nvoid i18Next.use(initReactI18next).init({\n  resources,\n  lng: initialLng,\n  defaultNS: initialNs,\n  interpolation: {\n    escapeValue: false\n  }\n});\n\nexport interface TranslationsProviderProps {\n  children?: ReactNode;\n  fallback?: ReactNode;\n  resourceExtensions?: Resource[];\n  appNs?: string;\n}\n\nexport const TranslationsContext = createContext({\n  appNs: initialNs\n});\n\nexport const TranslationsProvider = ({\n  fallback = <Loading label={resources[initialLng][initialNs]['loading translations']} />,\n  resourceExtensions,\n  children,\n  appNs\n}: TranslationsProviderProps) => {\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    setLoaded(false);\n    if (resourceExtensions && resourceExtensions.length) {\n      resourceExtensions.forEach((resource) => {\n        Object.keys(resource).forEach((language) => {\n          Object.keys(resource[language]).forEach((ns) => {\n            i18Next.addResourceBundle(language, ns, resource[language][ns]);\n          });\n        });\n      });\n    }\n    setLoaded(true);\n  }, [resourceExtensions]);\n\n  // TODO(thure): This is not ideal, but i18next was causing `Suspense` to not render the fallback even when the child was asking for namespaces yet to be added.\n  // TODO(burdon): Fallbacks should only appear after a short delay, and if the displayed then be visible for 500mx to avoid startup flickering.\n  return (\n    <TranslationsContext.Provider value={{ appNs: appNs ?? initialNs }}>\n      <Suspense fallback={fallback}>{loaded ? children : fallback}</Suspense>\n    </TranslationsContext.Provider>\n  );\n};\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport React, { ComponentProps } from 'react';\n\nimport { useId } from '../../hooks';\nimport { mx } from '../../util';\n\nexport type LoadingSize = 'sm' | 'md' | 'lg' | 'xl';\n\nexport type LoadingColor = 'primary' | 'neutral';\n\nexport interface LoadingSlots {\n  root?: Omit<ComponentProps<'div'>, 'children'>;\n  svg?: Pick<ComponentProps<'svg'>, 'className'>;\n}\n\nexport interface LoadingProps {\n  label: string;\n  size?: LoadingSize;\n  color?: LoadingColor;\n  slots?: LoadingSlots;\n}\n\nconst sizeMap = new Map<LoadingSize, string>([\n  ['sm', 'w-4 h-4'],\n  ['md', 'w-8 h-8'],\n  ['lg', 'w-12 h-12'],\n  ['xl', 'w-16 h-16']\n]);\n\nexport const Loading = ({ size, color, label, slots = {} }: LoadingProps) => {\n  const labelId = useId('loading-label');\n  const sizeClassName = sizeMap.get(size ?? 'md');\n  return (\n    <div\n      {...slots.root}\n      className={mx('flex justify-center p-4', slots.root?.className)}\n      role='status'\n      aria-labelledby={labelId}\n    >\n      <svg\n        role='none'\n        className={mx(\n          sizeClassName,\n          'text-neutral-200/50 animate-spin dark:text-neutral-600/50',\n          color === 'neutral' ? 'fill-neutral-400' : 'fill-primary-400',\n          slots.svg?.className\n        )}\n        viewBox='0 0 100 101'\n        fill='none'\n        xmlns='http://www.w3.org/2000/svg'\n      >\n        <path\n          d='M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z'\n          fill='currentColor'\n        />\n        <path\n          d='M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z'\n          fill='currentFill'\n        />\n      </svg>\n      <span className='sr-only' id={labelId}>\n        {label}\n      </span>\n    </div>\n  );\n};\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport { extendTailwindMerge, validators } from 'tailwind-merge';\n\nimport { withLogical } from './withLogical';\n\nexport const mx = extendTailwindMerge(\n  {\n    classGroups: {\n      fontFamily: ['font-body', 'font-display', 'font-mono'],\n      fontWeight: [\n        // App weights\n        'font-thin',\n        'font-extralight',\n        'font-light',\n        'font-normal',\n        'font-medium',\n        'font-semibold',\n        'font-bold',\n        'font-extrabold',\n        'font-black',\n        // OS weights\n        'font-system-thin',\n        'font-system-extralight',\n        'font-system-light',\n        'font-system-normal',\n        'font-system-medium',\n        'font-system-semibold',\n        'font-system-bold',\n        'font-system-extrabold',\n        'font-system-black',\n        // Arbitrary numbers\n        validators.isArbitraryNumber\n      ]\n    }\n  },\n  withLogical\n);\n", "//\n// Copyright 2022 DXOS.org\n//\n\n// This tailwind-merge plugin is based upon https://github.com/vltansky/tailwind-merge-logical-plugin\n\nimport { Config, mergeConfigs, validators } from 'tailwind-merge';\n\nexport const withLogical = (prevConfig: Config): Config => {\n  const getLength = () => [validators.isLength] as const;\n  const getLengthWithAuto = () => ['auto', validators.isLength] as const;\n  const getLengthWithEmpty = () => ['', validators.isLength] as const;\n  const getAny = () => [validators.isAny] as const;\n  const getRounded = () =>\n    ['none', '', 'sm', 'md', 'lg', 'xl', '2xl', '3xl', 'full', validators.isArbitraryLength] as const;\n\n  return mergeConfigs(prevConfig, {\n    classGroups: {\n      float: [{ float: ['start', 'end'] }],\n      clear: [{ clear: ['start', 'end'] }],\n      resize: [{ resize: ['block ', 'inline'] }],\n      'text-alignment': [{ text: ['start', 'end'] }],\n      'logical.overscroll-b': [{ 'overscroll-b': ['auto ', 'contain', 'auto'] }],\n      'logical.overscroll-i': [{ 'overscroll-b': ['auto ', 'contain', 'auto'] }],\n      'logical.bs': [{ bs: getLength() }],\n      'logical.min-bs': [{ 'min-bs': getLength() }],\n      'logical.max-bs': [{ 'max-bs': getLength() }],\n      'logical.is': [{ is: getLength() }],\n      'logical.min-is': [{ 'min-is': getLength() }],\n      'logical.max-is': [{ 'max-is': getLength() }],\n      'logical.mlb': [{ mlb: getLength() }],\n      'logical.mli': [{ mli: getLength() }],\n      'logical.mbs': [{ mbs: getLength() }],\n      'logical.mbe': [{ mbe: getLength() }],\n      'logical.mis': [{ mis: getLength() }],\n      'logical.mie': [{ mie: getLength() }],\n      'logical.plb': [{ plb: getLength() }],\n      'logical.pli': [{ pli: getLength() }],\n      'logical.pbs': [{ pbs: getLength() }],\n      'logical.pbe': [{ pbe: getLength() }],\n      'logical.pis': [{ pis: getLength() }],\n      'logical.pie': [{ pie: getLength() }],\n      'logical.space-b': [{ 'space-b': getLength() }],\n      'logical.space-i': [{ 'space-i': getLength() }],\n      'logical.inset-block': [{ 'inset-block': getLengthWithAuto() }],\n      'logical.inset-inline': [{ 'inset-inline': getLengthWithAuto() }],\n      'logical.block-start': [{ 'block-start': getLengthWithAuto() }],\n      'logical.block-end': [{ 'block-end': getLengthWithAuto() }],\n      'logical.inline-start': [{ 'inline-start': getLengthWithAuto() }],\n      'logical.inline-end': [{ 'inline-end': getLengthWithAuto() }],\n      'logical.border-bs': [{ 'border-bs': getLengthWithEmpty() }],\n      'logical.border-be': [{ 'border-be': getLengthWithEmpty() }],\n      'logical.border-is': [{ 'border-is': getLengthWithEmpty() }],\n      'logical.border-ie': [{ 'border-ie': getLengthWithEmpty() }],\n      'logical.border-color-bs': [{ 'border-bs': getAny() }],\n      'logical.border-color-be': [{ 'border-be': getAny() }],\n      'logical.border-color-is': [{ 'border-is': getAny() }],\n      'logical.border-color-ie': [{ 'border-ie': getAny() }],\n      'logical.rounded-bs': [{ 'rounded-bs': getRounded() }],\n      'logical.rounded-be': [{ 'rounded-be': getRounded() }],\n      'logical.rounded-is': [{ 'rounded-is': getRounded() }],\n      'logical.rounded-ie': [{ 'rounded-ie': getRounded() }],\n      'logical.rounded-ss': [{ 'rounded-ss': getRounded() }],\n      'logical.rounded-se': [{ 'rounded-se': getRounded() }],\n      'logical.rounded-es': [{ 'rounded-es': getRounded() }],\n      'logical.rounded-ee': [{ 'rounded-ee': getRounded() }],\n      'logical.divide-b': [{ 'divide-b': getLengthWithEmpty() }],\n      'logical.divide-i': [{ 'divide-i': getLengthWithEmpty() }]\n    },\n    conflictingClassGroups: {\n      'inset-block': ['logical.block-start', 'logical.block-end'],\n      'inset-inline': ['logical.inline-start', 'logical.inline-end'],\n      p: ['logical.plb', 'logical.pli', 'logical.pbs', 'logical.pbe', 'logical.pis', 'logical.pie'],\n      pli: ['logical.pis', 'logical.pie'],\n      plb: ['logical.pbs', 'logical.pbe'],\n      m: ['logical.mlb', 'logical.mli', 'logical.mbs', 'logical.mbe', 'logical.mis', 'logical.mie'],\n      mli: ['logical.mis', 'logical.mie'],\n      mlb: ['logical.mbs', 'logical.mbe'],\n      overscroll: ['overscroll-i', 'overscroll-b'],\n      rounded: [\n        'logical.rounded-bs',\n        'logical.rounded-be',\n        'logical.rounded-is',\n        'logical.rounded-ie',\n        'logical.rounded-ss',\n        'logical.rounded-se',\n        'logical.rounded-es',\n        'logical.rounded-ee'\n      ],\n      'logical.rounded-bs': ['logical.rounded-ss', 'logical.rounded-se'],\n      'logical.rounded-be': ['logical.rounded-es', 'logical.rounded-ee'],\n      'logical.rounded-is': ['logical.rounded-ss', 'logical.rounded-es'],\n      'logical.rounded-ie': ['logical.rounded-ee', 'logical.rounded-se'],\n      'border-color': [\n        'logical.border-color-bs',\n        'logical.border-color-be',\n        'logical.border-color-is',\n        'logical.border-color-ie'\n      ],\n      border: ['logical.border-bs', 'logical.border-be', 'logical.border-is', 'logical.border-ie']\n    }\n  });\n};\n", "//\n// Copyright 2023 DXOS.org\n//\n\nexport const hasIosKeyboard = () => {\n  // TODO(thure): UA sniffing is never good, however I havenâ€™t found a better way to query for whether the on-screen keyboard will appear on `focus` outside of a click handler.\n  return !!navigator.userAgent.match(/iP(ad|od|hone).+Safari/);\n};\n", "//\n// Copyright 2023 DXOS.org\n//\n\nexport { arrayMove, arraySwap } from '@dnd-kit/sortable';\nexport type { DragEndEvent, DragStartEvent, DragCancelEvent, DragMoveEvent, DragOverEvent } from '@dnd-kit/core';\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport { mx } from '../util';\n\nexport const defaultActive = mx(\n  'radix-state-open:outline-2 radix-state-open:outline-offset-1 radix-state-open:outline-primary-300 radix-state-open:outline-offset-transparent dark:radix-state-open:outline-primary-400 dark:radix-state-open:outline-offset-transparent',\n  'radix-state-on:outline-2 radix-state-on:outline-offset-1 radix-state-on:outline-primary-300 radix-state-on:outline-offset-transparent dark:radix-state-on:outline-primary-400 dark:radix-state-on:outline-offset-transparent',\n  'radix-state-instant-open:outline-2 radix-state-instant-open:outline-offset-1 radix-state-instant-open:outline-primary-300 radix-state-instant-open:outline-offset-transparent dark:radix-state-instant-open:outline-primary-400 dark:radix-state-instant-open:outline-offset-transparent'\n);\n\nconst sideInset = {\n  be: 'after:rounded-be after:bs-[2px] after:block-end-0 after:inline-start-0 after:inline-end-0'\n};\n\nexport const osActive = (side: keyof typeof sideInset) =>\n  mx(\n    'relative after:content-[\"\"] after:absolute after:bg-current after:opacity-0 after:transition-opacity after:duration-100 after:linear overflow-hidden',\n    sideInset[side],\n    'radix-state-open:after:opacity-100'\n  );\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport { Density } from '../props';\n\nexport const coarseBlockSize = 'min-bs-[40px]';\nexport const coarseTextPadding = 'pli-3';\nexport const coarseButtonPadding = 'pli-4';\nexport const defaultCoarse = `${coarseBlockSize} ${coarseTextPadding}`;\nexport const buttonCoarse = `${coarseBlockSize} ${coarseButtonPadding}`;\nexport const fineBlockSize = 'min-bs-[32px]';\nexport const fineTextPadding = 'pli-2';\nexport const fineButtonPadding = 'pli-2.5';\nexport const defaultFine = `${fineBlockSize} ${fineTextPadding}`;\nexport const buttonFine = `${fineBlockSize} ${fineButtonPadding}`;\nexport const densityBlockSize = (density: Density = 'coarse') => (density === 'fine' ? fineBlockSize : coarseBlockSize);\n", "//\n// Copyright 2022 DXOS.org\n//\n\nexport const defaultDisabled = 'opacity-40 cursor-not-allowed shadow-none';\nexport const dataDisabled = 'data-[disabled]:opacity-40 data-[disabled]:cursor-not-allowed';\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport { ThemeVariant } from '../components';\n\n/**\n * @deprecated use {@link themeVariantFocus} instead.\n */\nexport const defaultFocus =\n  'focus:outline-none focus-visible:z-[1] focus-visible:hover:outline-none dark:focus-visible:hover:outline-none focus-visible:ring-2 focus-visible:ring-offset-0 focus-visible:ring-primary-350 focus-visible:ring-offset-white dark:focus-visible:ring-primary-450 dark:focus-visible:ring-offset-black';\n\n/**\n * @deprecated\n */\nexport const subduedFocus = 'focus:outline-none focus-visible:outline-none';\n\n/**\n * @deprecated use {@link themeVariantFocus} instead.\n */\nexport const osFocus =\n  'focus:outline-none focus-visible:z-[1] focus-visible:hover:outline-none dark:focus-visible:hover:outline-none focus-visible:ring-2 focus-visible:ring-offset-0 focus-visible:ring-primary-350 focus-visible:ring-offset-white dark:focus-visible:ring-primary-450 dark:focus-visible:ring-offset-black';\n\n/**\n * @deprecated\n */\nexport const themeVariantFocus = (themeVariant: ThemeVariant) => (themeVariant === 'os' ? osFocus : defaultFocus);\n\n/**\n * @deprecated\n */\nexport const themeVariantSubduedFocus = (_themeVariant: ThemeVariant) => subduedFocus;\n\nexport const focus = (\n  { variant, disabled }: { variant?: 'default' | 'subdued' | 'static'; disabled?: boolean } = {},\n  themeVariant: ThemeVariant = 'app'\n) => {\n  return disabled\n    ? ''\n    : variant === 'static'\n    ? staticFocus\n    : variant === 'subdued'\n    ? themeVariantSubduedFocus(themeVariant)\n    : themeVariantFocus(themeVariant);\n};\n\nexport const staticFocus =\n  'ring-2 ring-offset-0 ring-primary-350 ring-offset-white dark:ring-primary-450 dark:ring-offset-black';\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport { Elevation } from '../props';\nimport { mx } from '../util';\n\nconst elevationClassNameMap = new Map<Elevation, string>([\n  ['base', 'shadow-none'],\n  ['group', 'shadow-md'],\n  ['chrome', 'shadow-xl']\n]);\n\nexport const defaultGroup = ({\n  elevation,\n  rounding,\n  spacing\n}: {\n  elevation: Elevation;\n  rounding?: string;\n  spacing?: string;\n}) => {\n  return mx(\n    rounding ?? 'rounded-lg',\n    spacing ?? 'p-4',\n    elevation === 'base'\n      ? 'bg-transparent border border-neutral-200 dark:border-neutral-700'\n      : 'bg-white dark:bg-neutral-800',\n    elevationClassNameMap.get(elevation)\n  );\n};\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport { ThemeContextValue } from '../components';\n\nexport const hover = (\n  { disabled }: { disabled?: boolean } = {},\n  themeVariant: ThemeContextValue['themeVariant'] = 'app'\n) => {\n  return (\n    !disabled &&\n    (themeVariant === 'os'\n      ? 'transition-colors duration-100 linear hover:bg-white/75 dark:hover:bg-neutral-750/75'\n      : 'transition-colors duration-100 linear hover:text-black dark:hover:text-white hover:bg-neutral-25 dark:hover:bg-neutral-750')\n  );\n};\n", "//\n// Copyright 2022 DXOS.org\n//\n\nexport const defaultInlineSeparator = 'border-is border-neutral-300 dark:border-neutral-700';\nexport const defaultBlockSeparator = 'border-bs border-neutral-300 dark:border-neutral-700';\n", "//\n// Copyright 2022 DXOS.org\n//\n\nexport const defaultShimmer =\n  'relative before:absolute before:inset-0 before:-translate-x-full before:animate-shimmer before:bg-gradient-to-r before:from-transparent before:via-neutral-100/10 before:to-transparent isolate overflow-hidden';\n\nexport const strongShimmer =\n  'relative before:absolute before:inset-0 before:-translate-x-full before:animate-shimmer before:bg-gradient-to-r before:from-transparent before:via-primary-100/80 before:to-transparent isolate overflow-hidden';\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport { Size } from '../props';\nimport { mx } from '../util';\n\nexport const sizeWidthMap = new Map<Size, string>([\n  [0, 'w-0'],\n  ['px', 'w-px'],\n  [0.5, 'w-0.5'],\n  [1, 'w-1'],\n  [1.5, 'w-1.5'],\n  [2, 'w-2'],\n  [2.5, 'w-2.5'],\n  [3, 'w-3'],\n  [3.5, 'w-3.5'],\n  [4, 'w-4'],\n  [5, 'w-5'],\n  [6, 'w-6'],\n  [7, 'w-7'],\n  [8, 'w-8'],\n  [9, 'w-9'],\n  [10, 'w-10'],\n  [11, 'w-11'],\n  [12, 'w-12'],\n  [14, 'w-14'],\n  [16, 'w-16'],\n  [20, 'w-20'],\n  [24, 'w-24'],\n  [28, 'w-28'],\n  [32, 'w-32'],\n  [36, 'w-36'],\n  [40, 'w-40'],\n  [44, 'w-44'],\n  [48, 'w-48'],\n  [52, 'w-52'],\n  [56, 'w-56'],\n  [60, 'w-60'],\n  [64, 'w-64'],\n  [72, 'w-72'],\n  [80, 'w-80'],\n  [96, 'w-96']\n]);\n\nexport const sizeHeightMap = new Map<Size, string>([\n  [0, 'h-0'],\n  ['px', 'h-px'],\n  [0.5, 'h-0.5'],\n  [1, 'h-1'],\n  [1.5, 'h-1.5'],\n  [2, 'h-2'],\n  [2.5, 'h-2.5'],\n  [3, 'h-3'],\n  [3.5, 'h-3.5'],\n  [4, 'h-4'],\n  [5, 'h-5'],\n  [6, 'h-6'],\n  [7, 'h-7'],\n  [8, 'h-8'],\n  [9, 'h-9'],\n  [10, 'h-10'],\n  [11, 'h-11'],\n  [12, 'h-12'],\n  [14, 'h-14'],\n  [16, 'h-16'],\n  [20, 'h-20'],\n  [24, 'h-24'],\n  [28, 'h-28'],\n  [32, 'h-32'],\n  [36, 'h-36'],\n  [40, 'h-40'],\n  [44, 'h-44'],\n  [48, 'h-48'],\n  [52, 'h-52'],\n  [56, 'h-56'],\n  [60, 'h-60'],\n  [64, 'h-64'],\n  [72, 'h-72'],\n  [80, 'h-80'],\n  [96, 'h-96']\n]);\n\nexport const getSizeHeight = sizeHeightMap.get.bind(sizeHeightMap);\nexport const getSizeWidth = sizeWidthMap.get.bind(sizeWidthMap);\nexport const getSize = (size: Size) => mx(getSizeHeight(size), getSizeWidth(size));\n", "//\n// Copyright 2022 DXOS.org\n//\n\nexport const defaultPlaceholder = 'placeholder-neutral-500 dark:placeholder-neutral-400';\n\nexport const defaultDescription = 'text-xs leading-3 font-normal text-neutral-650 dark:text-neutral-300';\nexport const primaryDescription = 'text-xs font-normal text-white/90';\n\nexport const defaultTooltip = 'text-xs font-normal text-neutral-900 dark:text-neutral-50';\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport { ThemeContextValue } from '../components';\nimport { MessageValence } from '../props';\n\nexport const successText = 'text-xs font-medium text-success-550 dark:text-success-300';\nexport const infoText = 'text-xs font-medium text-info-550 dark:text-info-300';\nexport const warningText = 'text-xs font-medium text-warning-550 dark:text-warning-300';\nexport const errorText = 'text-xs font-medium text-error-550 dark:text-error-300';\n\nexport const valenceColorText = (valence?: MessageValence) => {\n  switch (valence) {\n    case 'success':\n      return successText;\n    case 'info':\n      return infoText;\n    case 'warning':\n      return warningText;\n    case 'error':\n      return errorText;\n    default:\n      return undefined;\n  }\n};\n\nexport const neutralInputValence = '';\nexport const successInputValence = 'shadow-success-500/50 dark:shadow-success-600/50';\nexport const infoInputValence = 'shadow-info-500/50 dark:shadow-info-600/50';\nexport const warningInputValence = 'shadow-warning-500/50 dark:shadow-warning-600/50';\nexport const errorInputValence = 'shadow-error-500/50 dark:shadow-error-600/50';\n\nexport const inputValence = (valence?: MessageValence, themeVariant: ThemeContextValue['themeVariant'] = 'app') => {\n  switch (valence) {\n    case 'success':\n      return successInputValence;\n    case 'info':\n      return infoInputValence;\n    case 'warning':\n      return warningInputValence;\n    case 'error':\n      return errorInputValence;\n    default:\n      return themeVariant === 'os'\n        ? 'border-transparent focus-visible:border-transparent dark:focus-visible:border-transparent'\n        : neutralInputValence;\n  }\n};\n\nexport const neutralAlertColors = '';\nexport const successAlertColors =\n  'shadow-success-500/50 dark:shadow-success-500/50 text-success-600 dark:text-success-100 bg-success-50 dark:bg-success-900';\nexport const infoAlertColors =\n  'shadow-info-500/50 dark:shadow-info-500/50 text-info-600 dark:text-info-100 bg-info-50 dark:bg-info-900';\nexport const warningAlertColors =\n  'shadow-warning-500/50 dark:shadow-warning-500/50 text-warning-600 dark:text-warning-100 bg-warning-50 dark:bg-warning-900';\nexport const errorAlertColors =\n  'shadow-error-500/50 dark:shadow-error-500/50 text-error-600 dark:text-error-100 bg-error-50 dark:bg-error-900';\n\nexport const alertValence = (valence?: MessageValence) => {\n  switch (valence) {\n    case 'success':\n      return successAlertColors;\n    case 'info':\n      return infoAlertColors;\n    case 'warning':\n      return warningAlertColors;\n    case 'error':\n      return errorAlertColors;\n    default:\n      return neutralAlertColors;\n  }\n};\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport { ThemeContextValue } from '../components';\nimport { Density, MessageValence } from '../props';\nimport { mx } from '../util';\nimport { coarseBlockSize, defaultCoarse, defaultFine, fineBlockSize } from './density';\nimport { defaultDisabled } from './disabled';\nimport { staticFocus, focus } from './focus';\nimport { hover } from './hover';\nimport { defaultPlaceholder } from './text';\nimport { inputValence } from './valence';\n\nexport const defaultInput = (\n  props: {\n    disabled?: boolean;\n    density?: Density;\n    validationValence?: MessageValence;\n  } = {},\n  themeVariant: ThemeContextValue['themeVariant'] = 'app'\n) => {\n  const { disabled, validationValence } = props;\n  return mx(\n    'text-neutral-900 dark:text-white',\n    themeVariant === 'os'\n      ? 'rounded-sm text-sm bg-white/50 dark:bg-neutral-750/50'\n      : 'rounded text-base bg-white/50 focus-visible:bg-white/50 dark:bg-neutral-700/50 dark:focus-visible:bg-neutral-700/50',\n    props.density === 'fine' ? defaultFine : defaultCoarse,\n    focus({ ...props, variant: 'default' }, themeVariant),\n    defaultPlaceholder,\n    hover({ disabled }, themeVariant),\n    inputValence(validationValence, themeVariant),\n    disabled && defaultDisabled\n  );\n};\n\nexport const subduedInput = (\n  props: {\n    disabled?: boolean;\n    density?: Density;\n    validationValence?: MessageValence;\n  } = {},\n  themeVariant: ThemeContextValue['themeVariant'] = 'app'\n) => {\n  return mx(\n    'bg-transparent text-current',\n    props.density === 'fine' ? fineBlockSize : coarseBlockSize,\n    focus({ ...props, variant: 'subdued' }, themeVariant),\n    defaultPlaceholder\n  );\n};\n\nexport const staticInput = ({\n  disabled,\n  focused,\n  validationValence\n}: {\n  disabled?: boolean;\n  focused?: boolean;\n  density?: Density;\n  validationValence?: MessageValence;\n}) => {\n  return mx(\n    defaultPlaceholder,\n    'text-base rounded bg-white/50 text-neutral-900 dark:bg-neutral-700/50 dark:text-white',\n    inputValence(validationValence),\n    disabled && defaultDisabled,\n    focused && staticFocus\n  );\n};\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport { Circle, Moon } from '@phosphor-icons/react';\nimport * as AvatarPrimitive from '@radix-ui/react-avatar';\nimport * as PortalPrimitive from '@radix-ui/react-portal';\nimport { toSvg } from 'jdenticon';\nimport React, {\n  cloneElement,\n  ComponentProps,\n  ForwardedRef,\n  forwardRef,\n  PropsWithChildren,\n  ReactHTMLElement,\n  ReactNode,\n  useMemo\n} from 'react';\n\nimport { useId } from '../../hooks';\nimport { Size } from '../../props';\nimport { getSize } from '../../styles';\nimport { mx } from '../../util';\n\nexport interface AvatarSlots {\n  root?: Omit<ComponentProps<typeof AvatarPrimitive.Root>, 'children'>;\n  image?: ComponentProps<'image'>;\n  fallback?: Omit<ComponentProps<typeof AvatarPrimitive.Fallback>, 'children'>;\n  labels?: Omit<ComponentProps<'div'>, 'children'>;\n}\n\ninterface SharedAvatarProps {\n  fallbackValue: string;\n  label?: string | Omit<ReactHTMLElement<HTMLElement>, 'ref'>;\n  description?: string | Omit<ReactHTMLElement<HTMLElement>, 'ref'>;\n  labelId?: string;\n  descriptionId?: string;\n  size?: Size;\n  variant?: 'square' | 'circle';\n  status?: 'active' | 'inactive';\n  mediaSrc?: string;\n  mediaAlt?: string;\n  children?: ReactNode;\n  slots?: AvatarSlots;\n}\n\ninterface DirectlyLabeledAvatarProps extends Omit<SharedAvatarProps, 'label'> {\n  label: string | Omit<ReactHTMLElement<HTMLElement>, 'ref'>;\n}\n\ninterface IdLabeledAvatarProps extends Omit<SharedAvatarProps, 'labelId'> {\n  labelId: string;\n}\n\nexport type AvatarProps = DirectlyLabeledAvatarProps | IdLabeledAvatarProps;\n\nexport const Avatar = forwardRef(\n  (\n    {\n      mediaSrc,\n      mediaAlt,\n      fallbackValue,\n      label,\n      labelId: propsLabelId,\n      descriptionId: propsDescriptionId,\n      description,\n      variant = 'square',\n      status,\n      size = 10,\n      slots = {}\n    }: PropsWithChildren<AvatarProps>,\n    ref: ForwardedRef<HTMLSpanElement>\n  ) => {\n    const labelId = propsLabelId ?? useId('avatarLabel');\n    const descriptionId = propsDescriptionId ?? useId('avatarDescription');\n    const maskId = useId('mask');\n    const svgId = useId('mask');\n    const fallbackSrc = useMemo(\n      () =>\n        `data:image/svg+xml;utf8,${encodeURIComponent(\n          toSvg(fallbackValue, size === 'px' ? 1 : size * 4, { padding: 0 })\n        )}`,\n      [fallbackValue]\n    );\n\n    const imageSizeNumber = size === 'px' ? 1 : size * 4;\n    const statusIconSize = size > 9 ? 4 : size < 6 ? 2 : 3;\n    const maskSize = statusIconSize * 4 + 2;\n    const maskCenter = imageSizeNumber - (statusIconSize * 4) / 2;\n\n    return (\n      <>\n        <AvatarPrimitive.Root\n          {...slots.root}\n          className={mx('relative inline-flex', getSize(size), slots.root?.className)}\n          aria-labelledby={labelId}\n          {...((description || propsDescriptionId) && { 'aria-describedby': descriptionId })}\n          ref={ref}\n        >\n          <svg\n            viewBox={`0 0 ${imageSizeNumber} ${imageSizeNumber}`}\n            width={imageSizeNumber}\n            height={imageSizeNumber}\n            id={svgId}\n            className='is-full bs-full'\n          >\n            <defs>\n              <mask id={maskId}>\n                {variant === 'circle' ? (\n                  <circle fill='white' cx='50%' cy='50%' r='50%' />\n                ) : (\n                  <rect fill='white' width='100%' height='100%' />\n                )}\n                {status && (\n                  <circle\n                    fill='black'\n                    cx={`${(100 * maskCenter) / imageSizeNumber}%`}\n                    cy={`${(100 * maskCenter) / imageSizeNumber}%`}\n                    r={`${(50 * maskSize) / imageSizeNumber}%`}\n                  />\n                )}\n              </mask>\n            </defs>\n            {mediaSrc && (\n              <AvatarPrimitive.Image asChild>\n                <image href={mediaSrc} width='100%' height='100%' {...slots.image} mask={`url(#${maskId})`} />\n              </AvatarPrimitive.Image>\n            )}\n            <AvatarPrimitive.Fallback delayMs={0} {...slots.fallback} asChild>\n              <image href={fallbackSrc} width='100%' height='100%' mask={`url(#${maskId})`} />\n            </AvatarPrimitive.Fallback>\n          </svg>\n          {status === 'active' && (\n            <Circle\n              className={mx(\n                getSize(statusIconSize),\n                'absolute block-end-0 inline-end-0 text-success-500 dark:text-success-400'\n              )}\n              weight='fill'\n            />\n          )}\n          {status === 'inactive' && (\n            <Moon\n              mirrored\n              className={mx(\n                getSize(statusIconSize),\n                'absolute block-end-0 inline-end-0 text-warning-500 dark:text-warning-400'\n              )}\n              weight='fill'\n            />\n          )}\n        </AvatarPrimitive.Root>\n        <div role='none' {...slots.labels} className={mx('contents', slots?.labels?.className)}>\n          {!propsLabelId &&\n            label &&\n            (typeof label === 'string' ? (\n              <PortalPrimitive.Root asChild>\n                <span id={labelId} className='sr-only'>\n                  {label}\n                </span>\n              </PortalPrimitive.Root>\n            ) : (\n              cloneElement(label, { id: labelId })\n            ))}\n          {!propsDescriptionId &&\n            description &&\n            (typeof description === 'string' ? (\n              <span id={descriptionId}>{description}</span>\n            ) : (\n              cloneElement(description, { id: descriptionId })\n            ))}\n        </div>\n      </>\n    );\n  }\n);\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport React, { forwardRef } from 'react';\n\nimport { useButtonShadow, useDensityContext, useThemeContext } from '../../hooks';\nimport { mx } from '../../util';\nimport { ButtonProps } from './ButtonProps';\nimport { buttonStyles } from './buttonStyles';\n\nexport const Button = forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ children, density: propsDensity, elevation, variant = 'default', ...rootSlot }, ref) => {\n    const { themeVariant } = useThemeContext();\n    const shadow = useButtonShadow();\n    const density = useDensityContext(propsDensity);\n    return (\n      <button\n        ref={ref}\n        {...rootSlot}\n        className={mx(\n          buttonStyles({ density, variant, disabled: rootSlot.disabled }, themeVariant),\n          !rootSlot.disabled && (variant === 'default' || variant === 'primary') && shadow,\n          rootSlot.className\n        )}\n        {...(rootSlot.disabled && { disabled: true })}\n      >\n        {children}\n      </button>\n    );\n  }\n);\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport { defaultDisabled, hover, defaultActive, osActive, focus, buttonFine, buttonCoarse } from '../../styles';\nimport { mx } from '../../util';\nimport { ThemeContextValue } from '../ThemeProvider';\nimport { ButtonProps } from './ButtonProps';\n\nexport const primaryAppButtonColors =\n  'bg-primary-550 dark:bg-primary-550 text-white hover:bg-primary-600 dark:hover:bg-primary-600 hover:text-white dark:hover:text-white';\nexport const defaultAppButtonColors = 'bg-white text-neutral-800 dark:bg-neutral-800 dark:text-neutral-50';\nexport const defaultOsButtonColors = 'bg-white/50 text-neutral-900 dark:bg-neutral-750/50 dark:text-neutral-50';\nexport const ghostAppButtonColors =\n  'hover:bg-transparent dark:hover:bg-transparent hover:text-primary-500 dark:hover:text-primary-300';\n\nexport const buttonStyles = (\n  props: Partial<ButtonProps> = {},\n  themeVariant: ThemeContextValue['themeVariant'] = 'app'\n) => {\n  const isOsTheme = themeVariant === 'os';\n  const resolvedVariant = props.variant ?? 'default';\n  return mx(\n    'inline-flex select-none items-center justify-center transition-color duration-100',\n    props.density === 'fine' ? buttonFine : buttonCoarse,\n    isOsTheme ? 'rounded font-system-medium text-xs' : 'rounded-md font-medium text-sm',\n    hover(props, themeVariant),\n    !isOsTheme && resolvedVariant !== 'outline' && ' hover:border-transparent dark:hover:border-transparent',\n    resolvedVariant === 'default' && (isOsTheme ? defaultOsButtonColors : defaultAppButtonColors),\n    !props.disabled && resolvedVariant === 'ghost' && ghostAppButtonColors,\n    resolvedVariant === 'primary' && primaryAppButtonColors,\n    resolvedVariant === 'outline' &&\n      'text-neutral-700 border border-neutral-600 dark:border-neutral-300 dark:text-neutral-150',\n    focus({ disabled: props.disabled }, themeVariant),\n    props.disabled && defaultDisabled,\n    // Register all radix states\n    'group',\n    isOsTheme ? osActive('be') : defaultActive\n  );\n};\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport React, { ComponentProps, ReactNode } from 'react';\n\nimport { useButtonShadow } from '../../hooks/';\nimport { mx } from '../../util';\nimport { ElevationProvider } from '../ElevationProvider';\n\nexport interface ButtonGroupProps extends ComponentProps<'div'> {\n  children?: ReactNode;\n}\n\nexport const ButtonGroup = ({ children, ...divProps }: ButtonGroupProps) => {\n  const shadow = useButtonShadow();\n  return (\n    <div role='none' {...divProps} className={mx(shadow, 'rounded-md', divProps.className)}>\n      <ElevationProvider elevation='chrome'>{children}</ElevationProvider>\n    </div>\n  );\n};\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport React, { createContext, PropsWithChildren } from 'react';\n\nimport { Elevation } from '../../props';\n\nexport interface ElevationContextValue {\n  elevation?: Elevation;\n}\n\nexport type ElevationProviderProps = PropsWithChildren<{\n  elevation?: Elevation;\n}>;\n\nexport const ElevationContext = createContext<ElevationContextValue>({ elevation: 'base' });\n\nexport const ElevationProvider = ({ elevation, children }: ElevationProviderProps) => (\n  <ElevationContext.Provider value={{ elevation }}>{children}</ElevationContext.Provider>\n);\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport { Check } from '@phosphor-icons/react';\nimport * as CheckboxPrimitive from '@radix-ui/react-checkbox';\nimport React, { ComponentPropsWithoutRef } from 'react';\n\nimport { useThemeContext } from '../../hooks';\nimport { getSize, themeVariantFocus } from '../../styles';\nimport { mx } from '../../util';\n\ntype SharedCheckboxProps = Pick<\n  ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>,\n  'defaultChecked' | 'checked' | 'onCheckedChange' | 'className'\n>;\n\nexport type CheckboxProps = SharedCheckboxProps & ({ labelId: string } | { id: string });\n\nexport const Checkbox = (props: CheckboxProps) => {\n  const { themeVariant } = useThemeContext();\n  const { defaultChecked, checked, onCheckedChange, className } = props;\n  return (\n    <CheckboxPrimitive.Root\n      {...('id' in props && { id: props.id })}\n      {...('labelId' in props && { 'aria-labelledby': props.labelId })}\n      {...{ defaultChecked, checked, onCheckedChange }}\n      className={mx(\n        getSize(5),\n        'flex items-center justify-center rounded text-white',\n        'radix-state-checked:bg-primary-600 radix-state-unchecked:bg-neutral-200 dark:radix-state-unchecked:bg-neutral-700',\n        themeVariantFocus(themeVariant),\n        className\n      )}\n    >\n      <CheckboxPrimitive.Indicator>\n        <Check weight='bold' className={getSize(4)} />\n      </CheckboxPrimitive.Indicator>\n    </CheckboxPrimitive.Root>\n  );\n};\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport React, { ComponentPropsWithoutRef, ReactNode } from 'react';\n\nimport { useButtonShadow, useId, useThemeContext } from '../../hooks';\nimport { defaultDescription, primaryDescription } from '../../styles';\nimport { mx } from '../../util';\nimport { ButtonProps, buttonStyles } from '../Button';\n\nexport interface CompoundButtonSlots {\n  root: ComponentPropsWithoutRef<'button'>;\n  middle: ComponentPropsWithoutRef<'div'>;\n  label: ComponentPropsWithoutRef<'p'>;\n  description: ComponentPropsWithoutRef<'p'>;\n}\n\nexport interface CompoundButtonProps extends ButtonProps {\n  children?: ReactNode;\n  description?: ReactNode;\n  before?: ReactNode;\n  after?: ReactNode;\n  slots?: Partial<CompoundButtonSlots>;\n}\n\nexport const CompoundButton = ({\n  children,\n  description,\n  before,\n  after,\n  variant = 'default',\n  elevation,\n  slots = {},\n  ...buttonProps\n}: Omit<CompoundButtonProps, 'density'>) => {\n  const labelId = useId('compoundButton-label');\n  const descriptionId = useId('compoundButton-description');\n  const { themeVariant } = useThemeContext();\n  const shadow = useButtonShadow(elevation);\n  return (\n    <button\n      {...buttonProps}\n      {...slots.root}\n      className={mx(\n        buttonStyles({ ...buttonProps, variant }, themeVariant),\n        shadow,\n        'flex items-center gap-4 plb-2.5',\n        slots.root?.className\n      )}\n      aria-labelledby={labelId}\n      {...(description && { 'aria-describedby': descriptionId })}\n    >\n      {before && (\n        <div role='none' className='grow-0'>\n          {before}\n        </div>\n      )}\n      <div role='none' {...slots.middle} className={mx('grow flex flex-col gap-1 text-left', slots.middle?.className)}>\n        <p {...slots.label} id={labelId} className={mx(slots.label?.className)}>\n          {children}\n        </p>\n        {description && (\n          <p\n            id={descriptionId}\n            {...slots.description}\n            className={mx(\n              'text-xs mbe-1',\n              variant === 'primary' ? primaryDescription : defaultDescription,\n              themeVariant === 'os' ? 'font-system-normal' : 'font-normal',\n              slots.description?.className\n            )}\n          >\n            {description}\n          </p>\n        )}\n      </div>\n      {after && (\n        <div role='none' className='grow-0'>\n          {after}\n        </div>\n      )}\n    </button>\n  );\n};\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport React, { createContext, PropsWithChildren } from 'react';\n\nimport { Density } from '../../props';\n\nexport interface DensityContextValue {\n  density?: Density;\n}\n\nexport type DensityProviderProps = PropsWithChildren<{\n  density?: Density;\n}>;\n\nexport const DensityContext = createContext<DensityContextValue>({ density: 'coarse' });\n\nexport const DensityProvider = ({ density, children }: DensityProviderProps) => (\n  <DensityContext.Provider value={{ density }}>{children}</DensityContext.Provider>\n);\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport { Transition } from '@headlessui/react';\nimport { X } from '@phosphor-icons/react';\nimport * as DialogPrimitive from '@radix-ui/react-dialog';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport React, { ComponentProps, ComponentPropsWithoutRef, Fragment, ReactNode } from 'react';\n\nimport { defaultDescription, defaultFocus, hover, getSize } from '../../styles';\nimport { mx } from '../../util';\nimport { ElevationProvider } from '../ElevationProvider';\nimport { TooltipRoot, TooltipContent, TooltipTrigger } from '../Tooltip';\nimport { defaultOverlay } from './dialogStyles';\n\nexport interface DialogSlots {\n  overlay?: Pick<ComponentProps<typeof DialogPrimitive.Overlay>, 'className'>;\n  content?: Omit<ComponentProps<typeof DialogPrimitive.Content>, 'children'>;\n  title?: Omit<ComponentProps<typeof DialogPrimitive.Content>, 'children'>;\n  description?: Omit<ComponentProps<typeof DialogPrimitive.Description>, 'children'>;\n  close?: Pick<ComponentProps<typeof DialogPrimitive.Close>, 'className'>;\n  closeIcon?: ComponentProps<typeof X>;\n  closeTriggers?: Omit<ComponentProps<'div'>, 'children'>;\n}\n\nexport interface DialogProps\n  extends Pick<ComponentPropsWithoutRef<typeof DialogPrimitive.Root>, 'open' | 'defaultOpen' | 'onOpenChange'> {\n  title: ReactNode;\n  openTrigger?: ReactNode;\n  closeTriggers?: [ReactNode, ...ReactNode[]];\n  titleVisuallyHidden?: boolean;\n  description?: ReactNode;\n  children?: ReactNode;\n  closeLabel?: string;\n  mountAsSibling?: boolean;\n  slots?: DialogSlots;\n}\n\nexport const Dialog = ({\n  title,\n  titleVisuallyHidden,\n  description,\n  openTrigger,\n  closeTriggers,\n  children,\n  closeLabel,\n  mountAsSibling,\n  open: propsOpen,\n  defaultOpen: propsDefaultOpen,\n  onOpenChange: propsOnOpenChange,\n  slots = {}\n}: DialogProps) => {\n  const [open = false, setOpen] = useControllableState({\n    prop: propsOpen,\n    defaultProp: propsDefaultOpen,\n    onChange: propsOnOpenChange\n  });\n\n  const dialogOverlayAndContent = (\n    <Transition.Root show={open}>\n      <Transition.Child\n        as={Fragment}\n        enter='linear duration-300'\n        enterFrom='opacity-0'\n        enterTo='opacity-100'\n        leave='linear duration-200'\n        leaveFrom='opacity-100'\n        leaveTo='opacity-0'\n      >\n        <DialogPrimitive.Overlay\n          forceMount\n          {...slots.overlay}\n          className={mx(defaultOverlay, slots.overlay?.className)}\n        />\n      </Transition.Child>\n      <Transition.Child\n        as={Fragment}\n        enter='ease-out duration-300'\n        enterFrom='opacity-0 scale-95'\n        enterTo='opacity-100 scale-100'\n        leave='ease-in duration-200'\n        leaveFrom='opacity-100 scale-100'\n        leaveTo='opacity-0 scale-95'\n      >\n        <DialogPrimitive.Content\n          forceMount\n          onOpenAutoFocus={(event) => event.preventDefault()}\n          onCloseAutoFocus={(event) => event.preventDefault()}\n          {...slots.content}\n          className={mx(\n            'flex flex-col',\n            'fixed z-50',\n            'w-[95vw] max-w-md rounded-xl p-4 md:w-full',\n            'top-[50%] left-[50%] -translate-x-[50%] -translate-y-[50%]',\n            'shadow-2xl bg-white dark:bg-neutral-800 elevated-buttons',\n            defaultFocus,\n            slots.content?.className\n          )}\n        >\n          <ElevationProvider elevation='chrome'>\n            <DialogPrimitive.Title\n              {...slots.title}\n              className={mx(\n                'shrink-0',\n                'text-xl font-system-medium text-neutral-900 dark:text-neutral-100 rounded-md',\n                titleVisuallyHidden && 'sr-only',\n                defaultFocus,\n                slots?.title?.className\n              )}\n              tabIndex={0}\n            >\n              {title}\n            </DialogPrimitive.Title>\n            {description && (\n              <DialogPrimitive.Description\n                {...slots.description}\n                className={mx('mt-2', defaultDescription, slots.description?.className)}\n              >\n                {description}\n              </DialogPrimitive.Description>\n            )}\n\n            {children}\n\n            {closeLabel && (\n              <TooltipRoot>\n                <TooltipContent className='z-[51]'>{closeLabel}</TooltipContent>\n                <TooltipTrigger asChild>\n                  <DialogPrimitive.Close\n                    className={mx(\n                      'absolute top-3.5 right-3.5 inline-flex items-center justify-center rounded-sm p-1',\n                      defaultFocus,\n                      hover(),\n                      slots.close?.className\n                    )}\n                  >\n                    <X\n                      className={mx(\n                        getSize(4),\n                        'text-neutral-500 hover:text-neutral-700 dark:text-neutral-500 dark:hover:text-neutral-400',\n                        slots.closeIcon?.className\n                      )}\n                    />\n                  </DialogPrimitive.Close>\n                </TooltipTrigger>\n              </TooltipRoot>\n            )}\n            {closeTriggers && (\n              <div\n                {...slots.closeTriggers}\n                className={mx('flex flex-wrap justify-end gap-4', slots.closeTriggers?.className)}\n              >\n                {closeTriggers.map((closeTrigger, key) => (\n                  <DialogPrimitive.Close key={key} asChild>\n                    {closeTrigger}\n                  </DialogPrimitive.Close>\n                ))}\n              </div>\n            )}\n          </ElevationProvider>\n        </DialogPrimitive.Content>\n      </Transition.Child>\n    </Transition.Root>\n  );\n\n  return (\n    <DialogPrimitive.Root open={open} onOpenChange={setOpen}>\n      {openTrigger && <DialogPrimitive.Trigger asChild>{openTrigger}</DialogPrimitive.Trigger>}\n      {mountAsSibling ? (\n        dialogOverlayAndContent\n      ) : (\n        <DialogPrimitive.Portal forceMount>{dialogOverlayAndContent}</DialogPrimitive.Portal>\n      )}\n    </DialogPrimitive.Root>\n  );\n};\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport * as TooltipPrimitive from '@radix-ui/react-tooltip';\nimport type { TooltipContentProps, TooltipTriggerProps, TooltipProps } from '@radix-ui/react-tooltip';\nimport React, { forwardRef } from 'react';\n\nimport { defaultTooltip } from '../../styles';\nimport { mx } from '../../util';\n\ntype TooltipRootProps = TooltipProps;\n\nconst TooltipRoot = TooltipPrimitive.Root;\n\nconst TooltipContent = forwardRef<HTMLDivElement, TooltipContentProps>(\n  ({ children, className, ...props }, forwardedRef) => {\n    return (\n      <TooltipPrimitive.Portal>\n        <TooltipPrimitive.Content\n          forceMount\n          {...props}\n          className={mx(\n            'inline-flex items-center rounded-md plb-2 pli-3',\n            'shadow-lg bg-white dark:bg-neutral-800',\n            defaultTooltip,\n            className\n          )}\n          ref={forwardedRef}\n        >\n          <TooltipPrimitive.Arrow className='fill-white dark:fill-neutral-800' />\n          {children}\n        </TooltipPrimitive.Content>\n      </TooltipPrimitive.Portal>\n    );\n  }\n);\n\nconst TooltipTrigger = TooltipPrimitive.Trigger;\n\nexport { TooltipRoot, TooltipContent, TooltipTrigger };\n\nexport type { TooltipContentProps, TooltipTriggerProps, TooltipRootProps };\n", "//\n// Copyright 2023 DXOS.org\n//\n\nexport const defaultOverlay = 'fixed inset-0 z-20 bg-transparent';\n", "//\n// Copyright 2023 DXOS.org\n//\nimport * as DropdownMenuPrimitive from '@radix-ui/react-dropdown-menu';\nimport {\n  DropdownMenuCheckboxItemProps,\n  DropdownMenuItemProps,\n  DropdownMenuSubContentProps\n} from '@radix-ui/react-dropdown-menu';\nimport React, { ComponentPropsWithoutRef, forwardRef, ReactNode } from 'react';\n\nimport { useThemeContext } from '../../hooks';\nimport { dataDisabled } from '../../styles';\nimport { mx } from '../../util';\nimport { defaultDropdownMenuItem } from './dropdownMenuStyles';\n\nexport interface DropdownMenuSlots {\n  root?: ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Root>;\n  trigger?: ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Trigger>;\n  content?: ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>;\n}\n\nexport interface DropdownMenuProps {\n  trigger?: ReactNode;\n  children?: ReactNode;\n  slots?: DropdownMenuSlots;\n}\n\nexport const DropdownMenuItem = forwardRef<HTMLDivElement, DropdownMenuItemProps>(\n  ({ className, ...props }: DropdownMenuItemProps, forwardedRef) => {\n    const { themeVariant } = useThemeContext();\n    return (\n      <DropdownMenuPrimitive.Item\n        ref={forwardedRef}\n        {...props}\n        className={mx(defaultDropdownMenuItem(themeVariant), dataDisabled, className)}\n      />\n    );\n  }\n);\n\nexport const DropdownMenuSeparator = ({\n  className,\n  ...props\n}: ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>) => {\n  return (\n    <DropdownMenuPrimitive.Separator\n      {...props}\n      className={mx('my-1 h-px bg-neutral-200 dark:bg-neutral-700', className)}\n    />\n  );\n};\n\nexport const DropdownMenuLabel = ({\n  className,\n  ...props\n}: ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label>) => {\n  return (\n    <DropdownMenuPrimitive.Label\n      {...props}\n      className={mx('select-none px-2 py-2 text-sm text-neutral-900 dark:text-neutral-100', className)}\n    />\n  );\n};\n\nexport const DropdownMenuCheckboxItem = forwardRef<HTMLDivElement, DropdownMenuCheckboxItemProps>(\n  ({ className, ...props }: DropdownMenuCheckboxItemProps, forwardedRef) => {\n    const { themeVariant } = useThemeContext();\n    return (\n      <DropdownMenuPrimitive.CheckboxItem\n        ref={forwardedRef}\n        {...props}\n        className={mx(defaultDropdownMenuItem(themeVariant), className)}\n      />\n    );\n  }\n);\n\nexport const DropdownMenuSubTrigger = ({\n  className,\n  ...props\n}: ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger>) => {\n  const { themeVariant } = useThemeContext();\n  return (\n    <DropdownMenuPrimitive.SubTrigger {...props} className={mx(defaultDropdownMenuItem(themeVariant), className)} />\n  );\n};\n\nexport const DropdownMenuSubContent = forwardRef<HTMLDivElement, DropdownMenuSubContentProps>(\n  ({ className, ...props }: DropdownMenuSubContentProps, forwardedRef) => {\n    return (\n      <DropdownMenuPrimitive.Portal>\n        <DropdownMenuPrimitive.SubContent\n          ref={forwardedRef}\n          {...props}\n          className={mx(\n            'origin-radix-dropdown-menu radix-side-right:animate-scale-in',\n            'w-full rounded-md px-1 py-1 text-sm shadow-md',\n            'bg-white dark:bg-neutral-800',\n            className\n          )}\n        />\n      </DropdownMenuPrimitive.Portal>\n    );\n  }\n);\n\nexport const DropdownMenuItemIndicator = DropdownMenuPrimitive.ItemIndicator;\n\nexport const DropdownMenuSub = DropdownMenuPrimitive.Sub;\n\nexport const DropdownMenu = ({ trigger, children, slots = {} }: DropdownMenuProps) => {\n  return (\n    <DropdownMenuPrimitive.Root {...slots.root}>\n      <DropdownMenuPrimitive.Trigger asChild {...slots.trigger}>\n        {trigger}\n      </DropdownMenuPrimitive.Trigger>\n\n      <DropdownMenuPrimitive.Portal>\n        <DropdownMenuPrimitive.Content\n          align='end'\n          sideOffset={4}\n          {...slots.content}\n          className={mx(\n            'radix-side-top:animate-slide-up radix-side-bottom:animate-slide-down',\n            'w-48 rounded-lg p-1 shadow-md md:w-56',\n            'bg-white dark:bg-neutral-800',\n            slots.content?.className\n          )}\n        >\n          {children}\n        </DropdownMenuPrimitive.Content>\n      </DropdownMenuPrimitive.Portal>\n    </DropdownMenuPrimitive.Root>\n  );\n};\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport { themeVariantSubduedFocus } from '../../styles';\nimport { mx } from '../../util';\nimport { ThemeContextValue } from '../ThemeProvider';\n\nexport const defaultDropdownMenuItem = (themeVariant: ThemeContextValue['themeVariant']) => {\n  return mx(\n    'flex cursor-pointer select-none items-center rounded-md px-2 py-2 text-sm',\n    'text-neutral-900 data-[highlighted]:bg-neutral-50 dark:text-neutral-100 dark:data-[highlighted]:bg-neutral-900',\n    themeVariantSubduedFocus(themeVariant)\n  );\n};\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport React, { ReactNode } from 'react';\n\nimport { useId } from '../../hooks';\nimport { Elevation } from '../../props';\nimport { defaultGroup } from '../../styles';\nimport { mx } from '../../util';\nimport { ElevationProvider } from '../ElevationProvider';\nimport { Heading, HeadingProps } from '../Heading';\n\nexport interface GroupProps extends React.ComponentProps<'div'> {\n  label: HeadingProps;\n  labelVisuallyHidden?: boolean;\n  elevation?: Elevation;\n  children?: ReactNode;\n}\n\nexport const Group = ({ elevation = 'group', children, label, labelVisuallyHidden, ...rootSlot }: GroupProps) => {\n  const labelId = useId('groupLabel');\n  return (\n    <div\n      role='group'\n      aria-labelledby={labelId}\n      {...rootSlot}\n      className={mx(defaultGroup({ elevation }), rootSlot?.className)}\n    >\n      <Heading {...label} id={labelId} className={mx(labelVisuallyHidden && 'sr-only', 'mb-2', label?.className)} />\n      <ElevationProvider elevation={elevation}>{children}</ElevationProvider>\n    </div>\n  );\n};\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport React, { createElement, PropsWithChildren, ReactNode } from 'react';\n\nimport { mx } from '../../util';\n\nexport interface HeadingProps extends React.ComponentProps<'h1'> {\n  level?: 1 | 2 | 3 | 4 | 5 | 6;\n  children?: ReactNode;\n}\n\nconst levelClassNameMap = new Map<number, string>([\n  [1, 'text-5xl'],\n  [2, 'text-4xl'],\n  [3, 'text-3xl'],\n  [4, 'text-2xl'],\n  [5, 'text-xl'],\n  [6, 'text-lg']\n]);\n\nexport const Heading = ({ level, ...rootSlot }: PropsWithChildren<HeadingProps>) => {\n  const resolvedLevel = level || 1;\n  return createElement(`h${resolvedLevel}`, {\n    ...rootSlot,\n    className: mx('font-bold font-display', levelClassNameMap.get(resolvedLevel), rootSlot.className)\n  });\n};\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport { DndContext } from '@dnd-kit/core';\nimport { restrictToVerticalAxis } from '@dnd-kit/modifiers';\nimport { SortableContext, useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { CaretDown, CaretRight, DotsSixVertical } from '@phosphor-icons/react';\nimport * as Collapsible from '@radix-ui/react-collapsible';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope, Scope } from '@radix-ui/react-context';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { Slot } from '@radix-ui/react-slot';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport React, {\n  ComponentProps,\n  ComponentPropsWithoutRef,\n  ComponentPropsWithRef,\n  forwardRef,\n  ReactHTMLElement,\n  ReactNode\n} from 'react';\n\nimport { useDensityContext, useId, useThemeContext } from '../../hooks';\nimport { Density } from '../../props';\nimport { coarseBlockSize, fineBlockSize, getSize, themeVariantFocus } from '../../styles';\nimport { mx } from '../../util';\nimport { Checkbox, CheckboxProps } from '../Checkbox';\nimport { DensityProvider } from '../DensityProvider';\nimport { defaultListItemEndcap, defaultListItemHeading, defaultListItemMainContent } from './listStyles';\n\n// TODO(thure): A lot of the accessible affordances for this kind of thing need to be implemented per https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role\n\nconst LIST_NAME = 'List';\nconst LIST_ITEM_NAME = 'ListItem';\n\ntype ListScopedProps<P> = P & { __listScope?: Scope };\n\ntype ListVariant = 'ordered' | 'unordered' | 'ordered-draggable';\n\ninterface SharedListSlots {\n  root?: ComponentPropsWithoutRef<'ul' | 'ol'>;\n}\n\ninterface DraggableListSlots extends SharedListSlots {\n  dndContext?: Omit<ComponentProps<typeof DndContext>, 'onDragEnd'>;\n  sortableContext?: Omit<ComponentProps<typeof SortableContext>, 'items'>;\n}\n\ninterface SharedListProps {\n  labelId: string;\n  children?: ReactNode;\n  selectable?: boolean;\n  collapsible?: boolean;\n  variant?: ListVariant;\n  onDragEnd?: ComponentPropsWithoutRef<typeof DndContext>['onDragEnd'];\n  listItemIds?: string[];\n  slots?: SharedListSlots;\n  density?: Density;\n  toggleOpenLabel?: string | Omit<ReactHTMLElement<HTMLElement>, 'ref'>;\n}\n\ninterface DraggableListProps\n  extends Omit<SharedListProps, 'onDragEnd' | 'listItemIds' | 'variant' | 'slots' | 'density'> {\n  onDragEnd: Exclude<SharedListProps['onDragEnd'], undefined>;\n  listItemIds: Exclude<SharedListProps['listItemIds'], undefined>;\n  variant: 'ordered-draggable';\n  slots?: DraggableListSlots;\n}\n\ntype ListProps = SharedListProps | DraggableListProps;\n\ninterface ListItemData {\n  id: string;\n  selected?: CheckboxProps['checked'];\n}\n\ninterface ListItemSlots {\n  root?: Omit<ComponentPropsWithRef<'li'>, 'id' | 'children'>;\n  dragHandle?: ComponentPropsWithoutRef<typeof ListItemDragHandle>;\n  dragHandleIcon?: ComponentPropsWithoutRef<typeof DotsSixVertical>;\n  openTrigger?: ComponentPropsWithoutRef<typeof ListItemOpenTrigger>;\n  openTriggerIcon?: ComponentPropsWithoutRef<typeof CaretDown>;\n  mainContent?: ComponentPropsWithoutRef<'div'>;\n  selectableCheckbox?: Omit<CheckboxProps, 'default' | 'checked' | 'onCheckedChange'>;\n  selectableEndcap?: Omit<ListItemEndcapProps, 'children'>;\n}\n\ninterface NonCollapsibleListItemProps extends Omit<ListItemData, 'id'> {\n  children?: ReactNode;\n  onSelectedChange?: CheckboxProps['onCheckedChange'];\n  defaultSelected?: CheckboxProps['defaultChecked'];\n  slots?: ListItemSlots;\n  id?: string;\n  collapsible?: false;\n}\n\ninterface CollapsibleListItemProps extends Omit<NonCollapsibleListItemProps, 'collapsible'> {\n  collapsible: true;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?: (nextOpen: boolean) => void;\n}\n\ntype ListItemProps = NonCollapsibleListItemProps | CollapsibleListItemProps;\n\ntype ListItemElement = React.ElementRef<typeof Primitive.li>;\n\n// LIST\n\nconst [createListContext, createListScope] = createContextScope(LIST_NAME, []);\n\ntype ListContextValue = Pick<ListProps, 'selectable' | 'collapsible' | 'variant' | 'toggleOpenLabel'>;\n\nconst [ListProvider, useListContext] = createListContext<ListContextValue>(LIST_NAME);\n\nconst useListDensity = ({ density, variant }: Pick<SharedListProps, 'density' | 'variant'>) => {\n  const contextDensity = useDensityContext(density);\n  return variant === 'ordered-draggable' ? 'coarse' : contextDensity ?? 'coarse';\n};\n\nconst List = forwardRef<HTMLOListElement, ListProps>((props: ListScopedProps<ListProps>, forwardedRef) => {\n  const {\n    __listScope,\n    variant = 'ordered',\n    selectable = false,\n    collapsible = false,\n    toggleOpenLabel = 'Expand/collapse item',\n    children,\n    slots = {}\n  } = props;\n  const ListRoot = variant === 'ordered' || variant === 'ordered-draggable' ? Primitive.ol : Primitive.ul;\n  const density = useListDensity(props);\n  return (\n    <ListRoot\n      {...(selectable && { role: 'listbox', 'aria-multiselectable': true })}\n      {...slots.root}\n      aria-labelledby={props.labelId}\n      ref={forwardedRef}\n    >\n      <DensityProvider density={density}>\n        <ListProvider\n          {...{\n            scope: __listScope,\n            variant,\n            collapsible,\n            selectable,\n            toggleOpenLabel\n          }}\n        >\n          {variant === 'ordered-draggable' ? (\n            <DndContext onDragEnd={(props as DraggableListProps).onDragEnd} modifiers={[restrictToVerticalAxis]}>\n              <SortableContext items={(props as DraggableListProps).listItemIds}>{children}</SortableContext>\n            </DndContext>\n          ) : (\n            <>{children}</>\n          )}\n        </ListProvider>\n      </DensityProvider>\n    </ListRoot>\n  );\n});\n\nList.displayName = LIST_NAME;\n\n// LIST ITEM\n\nconst [createListItemContext, createListItemScope] = createContextScope(LIST_ITEM_NAME, []);\n\ntype ListItemContextValue = { headingId: string; open: boolean };\n\nconst [ListItemProvider, useListItemContext] = createListItemContext<ListItemContextValue>(LIST_ITEM_NAME);\n\ntype ListItemEndcapProps = ComponentPropsWithoutRef<'div'> & { asChild?: boolean };\n\nconst ListItemEndcap = ({ children, className, asChild, ...props }: ListItemEndcapProps) => {\n  const Root = asChild ? Slot : 'div';\n  const density = useDensityContext();\n  return (\n    <Root {...(!asChild && { role: 'none' })} {...props} className={mx(defaultListItemEndcap({ density }), className)}>\n      {children}\n    </Root>\n  );\n};\n\ntype ListItemHeadingProps = ListScopedProps<ComponentPropsWithoutRef<'p'>> & { asChild?: boolean };\n\nconst ListItemHeading = ({ children, className, asChild, __listScope, ...props }: ListItemHeadingProps) => {\n  const { headingId } = useListItemContext(LIST_ITEM_NAME, __listScope);\n  const Root = asChild ? Slot : 'div';\n  const density = useDensityContext();\n  return (\n    <Root {...props} id={headingId} className={mx(defaultListItemHeading({ density }), className)}>\n      {children}\n    </Root>\n  );\n};\n\ntype ListItemDragHandleProps = Omit<ComponentPropsWithoutRef<'div'>, 'children'> & {\n  dragHandleIconSlot?: ListItemSlots['dragHandleIcon'];\n};\n\nconst ListItemDragHandle = ({ className, dragHandleIconSlot = {}, ...props }: ListItemDragHandleProps) => {\n  const { themeVariant } = useThemeContext();\n  return (\n    <div\n      role='button'\n      {...props}\n      className={mx('bs-10 is-5 rounded touch-none', themeVariantFocus(themeVariant), className)}\n    >\n      <DotsSixVertical {...dragHandleIconSlot} className={mx(getSize(5), 'mbs-2.5', dragHandleIconSlot.className)} />\n    </div>\n  );\n};\n\ntype ListItemOpenTriggerProps = ListScopedProps<Omit<ComponentPropsWithoutRef<'button'>, 'children'>> & {\n  openTriggerIconSlot?: ListItemSlots['dragHandleIcon'];\n};\n\nconst ListItemOpenTrigger = forwardRef<HTMLButtonElement, ListItemOpenTriggerProps>(\n  ({ className, openTriggerIconSlot = {}, __listScope, ...props }: ListItemOpenTriggerProps, forwardedRef) => {\n    const { themeVariant } = useThemeContext();\n    const density = useDensityContext();\n    const { toggleOpenLabel } = useListContext(LIST_NAME, __listScope);\n    const { open } = useListItemContext(LIST_ITEM_NAME, __listScope);\n    const iconProps: ListItemOpenTriggerProps['openTriggerIconSlot'] = {\n      weight: 'bold',\n      ...openTriggerIconSlot,\n      className: mx(getSize(3.5), openTriggerIconSlot.className)\n    };\n    const Icon = open ? CaretDown : CaretRight;\n    return (\n      <Collapsible.Trigger\n        ref={forwardedRef}\n        {...props}\n        className={mx(\n          'is-5 rounded flex justify-center items-center',\n          density === 'fine' ? fineBlockSize : coarseBlockSize,\n          themeVariantFocus(themeVariant),\n          className\n        )}\n      >\n        {typeof toggleOpenLabel === 'string' ? <span className='sr-only'>{toggleOpenLabel}</span> : toggleOpenLabel}\n        <Icon {...iconProps} />\n      </Collapsible.Trigger>\n    );\n  }\n);\n\nconst PureListItem = forwardRef<ListItemElement, ListItemProps & { id: string }>(\n  (props: ListScopedProps<ListItemProps & { id: string }>, forwardedRef) => {\n    const {\n      __listScope,\n      children,\n      selected: propsSelected,\n      defaultSelected,\n      onSelectedChange,\n      collapsible,\n      id,\n      slots = {}\n    } = props;\n    const density = useDensityContext();\n    const { variant, selectable, collapsible: listCollapsible } = useListContext(LIST_NAME, __listScope);\n    const draggable = variant === 'ordered-draggable';\n\n    const [selected = false, setSelected] = useControllableState({\n      prop: propsSelected,\n      defaultProp: defaultSelected,\n      onChange: onSelectedChange\n    });\n\n    const [open = false, setOpen] = useControllableState({\n      prop: (props as CollapsibleListItemProps).open,\n      defaultProp: (props as CollapsibleListItemProps).defaultOpen,\n      onChange: (props as CollapsibleListItemProps).onOpenChange\n    });\n\n    const headingId = useId('listItem__heading');\n\n    const listItem = (\n      <Primitive.li\n        {...slots.root}\n        id={id}\n        ref={forwardedRef}\n        aria-labelledby={headingId}\n        {...(selectable && { role: 'option', 'aria-selected': !!selected })}\n        className={mx('flex', slots.root?.className)}\n      >\n        {draggable && <ListItemDragHandle {...slots.dragHandle} dragHandleIconSlot={slots.dragHandleIcon} />}\n        {listCollapsible && (\n          <div role='none' className={mx('is-5', density === 'fine' ? fineBlockSize : coarseBlockSize)}>\n            {collapsible && <ListItemOpenTrigger {...slots.openTrigger} openTriggerIconSlot={slots.openTriggerIcon} />}\n          </div>\n        )}\n        {selectable && (\n          <ListItemEndcap {...slots.selectableEndcap}>\n            <Checkbox\n              {...slots.selectableCheckbox}\n              labelId={headingId}\n              className={mx(density === 'fine' ? 'mbs-1.5' : 'mbs-2.5', slots.selectableCheckbox?.className)}\n              {...{ checked: selected, onCheckedChange: setSelected }}\n            />\n          </ListItemEndcap>\n        )}\n        <div\n          role='none'\n          {...slots.mainContent}\n          className={mx(defaultListItemMainContent({ collapsible: listCollapsible }), slots.mainContent?.className)}\n        >\n          {children}\n        </div>\n      </Primitive.li>\n    );\n\n    return (\n      <ListItemProvider scope={__listScope} headingId={headingId} open={open}>\n        {collapsible ? (\n          <Collapsible.Root asChild open={open} onOpenChange={setOpen}>\n            {listItem}\n          </Collapsible.Root>\n        ) : (\n          listItem\n        )}\n      </ListItemProvider>\n    );\n  }\n);\n\ntype ListItemCollapsibleContentProps = ComponentProps<typeof Collapsible.Content>;\n\nconst ListItemCollapsibleContent = Collapsible.Content;\n\nconst DraggableListItem = forwardRef<ListItemElement, ListItemProps & { id: string }>(\n  (props: ListScopedProps<ListItemProps & { id: string }>, forwardedRef) => {\n    const { attributes, listeners, setNodeRef, transform, transition } = useSortable({\n      id: props.id\n    });\n    const ref = useComposedRefs(forwardedRef, setNodeRef) as ComponentPropsWithRef<typeof Primitive.li>['ref'];\n\n    return (\n      <PureListItem\n        {...props}\n        ref={ref}\n        slots={{\n          ...props.slots,\n          root: {\n            ...props.slots?.root,\n            style: { transform: CSS.Transform.toString(transform), transition, ...props.slots?.root?.style }\n          },\n          dragHandle: { ...listeners, ...attributes, ...props.slots?.dragHandle }\n        }}\n      />\n    );\n  }\n);\n\nconst ListItem = forwardRef<ListItemElement, ListItemProps>((props: ListScopedProps<ListItemProps>, forwardedRef) => {\n  const { variant } = useListContext(LIST_NAME, props.__listScope);\n  const listItemId = useId('listItem');\n\n  if (variant === 'ordered-draggable') {\n    return <DraggableListItem {...props} ref={forwardedRef} id={props.id ?? listItemId} />;\n  } else {\n    return <PureListItem {...props} ref={forwardedRef} id={props.id ?? listItemId} />;\n  }\n});\n\nexport {\n  List,\n  createListScope,\n  useListDensity,\n  useListContext,\n  LIST_NAME,\n  ListItem,\n  ListItemHeading,\n  ListItemCollapsibleContent,\n  ListItemEndcap,\n  ListItemDragHandle,\n  ListItemOpenTrigger,\n  createListItemScope,\n  useListItemContext,\n  LIST_ITEM_NAME\n};\n\nexport type {\n  ListProps,\n  ListVariant,\n  ListItemProps,\n  ListItemHeadingProps,\n  ListItemCollapsibleContentProps,\n  ListItemEndcapProps,\n  ListItemDragHandleProps,\n  ListItemOpenTriggerProps,\n  ListScopedProps\n};\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport { Density } from '../../props';\nimport { densityBlockSize, getSize } from '../../styles';\nimport { mx } from '../../util';\n\nexport const defaultListItemEndcap = ({ density = 'coarse' }: { density?: Density }) =>\n  mx(density === 'fine' ? getSize(8) : getSize(10), 'shrink-0 flex items-start justify-center');\nexport const defaultListItemHeading = ({ density = 'coarse' }: { density?: Density }) => densityBlockSize(density);\n\nexport const defaultListItemMainContent = ({ collapsible = false }: { collapsible?: boolean }) =>\n  mx('flex-1 min-bs-0', !collapsible && 'flex');\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport React, { ForwardedRef, forwardRef } from 'react';\n\nimport { useId, useThemeContext } from '../../hooks';\nimport { defaultDescription, valenceColorText } from '../../styles';\nimport { mx } from '../../util';\nimport { BarePinInput } from './BarePinInput';\nimport { BareTextInput } from './BareTextInput';\nimport { BareTextareaInput, BareTextareaInputProps } from './BareTextareaInput';\nimport { InputProps as NaturalInputProps, InputSize } from './InputProps';\n\nexport type InputProps = NaturalInputProps;\n\n// TODO(burdon): Support input ref for programmatic focus.\n// TODO(burdon): Allow placement of Icon at end of input (e.g., search, open/close button).\nexport const Input = forwardRef<HTMLInputElement | HTMLTextAreaElement, InputProps>(\n  (\n    {\n      label,\n      labelVisuallyHidden,\n      description,\n      descriptionVisuallyHidden,\n      value,\n      defaultValue,\n      onChange,\n      disabled,\n      placeholder,\n      size,\n      length = 6,\n      validationMessage,\n      validationValence,\n      variant = 'default',\n      elevation,\n      density,\n      slots = {}\n    }: InputProps,\n    forwardedRef\n  ) => {\n    const internalInputId = useId('input');\n    const descriptionId = useId('input-description');\n    const validationId = useId('input-validation');\n    const { hasIosKeyboard } = useThemeContext();\n\n    const inputId = slots.input?.id ?? internalInputId;\n\n    const isInvalid = !!validationMessage && validationValence === 'error';\n\n    const { autoFocus, ...inputSlot } = slots.input ?? {};\n\n    const bareInputBaseProps = {\n      ...inputSlot,\n      id: inputId,\n      ...(slots.input?.required && { required: true }),\n      ...(description && { 'aria-describedby': descriptionId }),\n      ...(isInvalid && {\n        'aria-invalid': 'true' as const,\n        'aria-errormessage': validationId\n      }),\n      ...(autoFocus && !hasIosKeyboard && { autoFocus: true }),\n      disabled,\n      placeholder,\n      value,\n      defaultValue,\n      onChange,\n      validationMessage,\n      validationValence,\n      variant,\n      elevation,\n      density\n    };\n\n    const bareInput =\n      size === 'pin' ? (\n        <BarePinInput {...bareInputBaseProps} length={length} ref={forwardedRef as ForwardedRef<HTMLInputElement>} />\n      ) : size === 'textarea' ? (\n        <BareTextareaInput\n          {...(bareInputBaseProps as BareTextareaInputProps)}\n          ref={forwardedRef as ForwardedRef<HTMLTextAreaElement>}\n        />\n      ) : (\n        <BareTextInput\n          {...bareInputBaseProps}\n          size={size as Exclude<InputSize, 'pin' | 'textarea'>}\n          ref={forwardedRef as ForwardedRef<HTMLInputElement>}\n        />\n      );\n\n    return (\n      <div role='none' className={slots.root?.className}>\n        <label\n          {...slots.label}\n          htmlFor={inputId}\n          className={mx(\n            'block pbe-1 text-sm font-medium text-neutral-900 dark:text-neutral-100',\n            labelVisuallyHidden && 'sr-only',\n            slots.label?.className\n          )}\n        >\n          {label}\n        </label>\n\n        {bareInput}\n\n        {(description || validationMessage) && (\n          <p\n            {...(!isInvalid && { id: descriptionId })}\n            className={mx(descriptionVisuallyHidden && !isInvalid && 'sr-only', slots.description?.className)}\n          >\n            {validationMessage && (\n              <span id={validationId} className={mx(valenceColorText(validationValence), slots.validation?.className)}>\n                {validationMessage}{' '}\n              </span>\n            )}\n            <span\n              {...(isInvalid && { id: descriptionId })}\n              className={mx(defaultDescription, descriptionVisuallyHidden && 'sr-only')}\n            >\n              {description}\n            </span>\n          </p>\n        )}\n      </div>\n    );\n  }\n);\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport { CodeInput, getSegmentCssWidth } from 'rci';\nimport React, { forwardRef, useCallback, ComponentProps, ComponentPropsWithoutRef } from 'react';\n\nimport { useButtonShadow, useDensityContext, useForwardedRef, useIsFocused } from '../../hooks';\nimport { staticInput } from '../../styles';\nimport { mx } from '../../util';\nimport { InputProps } from './InputProps';\n\nconst bareInputStyleProps = {\n  padding: '8px',\n  spacing: '8px',\n  fontFamily: ''\n};\n\nexport type BarePinInputProps = Omit<\n  ComponentPropsWithoutRef<typeof CodeInput>,\n  'inputRef' | 'renderSegment' | 'spellCheck'\n> &\n  Pick<InputProps, 'validationMessage' | 'validationValence' | 'variant' | 'elevation' | 'density'>;\n\n// TODO(thure): supplying a `value` prop to CodeInput does not yield correct controlled input interactivity; this may be an issue with RCI (filed as https://github.com/leonardodino/rci/issues/25).\nexport const BarePinInput = forwardRef<HTMLInputElement, BarePinInputProps>(\n  ({ validationMessage, validationValence, variant, elevation, density: propsDensity, ...inputSlot }, ref) => {\n    const width = getSegmentCssWidth('13px');\n    const inputRef = useForwardedRef(ref);\n    const inputFocused = useIsFocused(inputRef);\n    const shadow = useButtonShadow(elevation);\n    const density = useDensityContext(propsDensity);\n\n    const { disabled } = inputSlot;\n\n    const renderSegment = useCallback<ComponentProps<typeof CodeInput>['renderSegment']>(\n      ({ state, index }) => (\n        <div\n          key={index}\n          className={mx(\n            staticInput({\n              focused: inputFocused && !!state,\n              disabled,\n              density,\n              ...(validationMessage && { validationValence })\n            }),\n            !disabled && variant !== 'subdued' && shadow\n          )}\n          data-state={state}\n          style={{ width, height: '100%' }}\n        />\n      ),\n      [inputFocused, validationValence, validationMessage, disabled]\n    );\n\n    return (\n      <CodeInput\n        {...{\n          spellCheck: false,\n          ...bareInputStyleProps,\n          ...inputSlot,\n          inputRef,\n          renderSegment,\n          className: mx(\n            'font-mono selection:bg-transparent mli-auto',\n            disabled && 'cursor-not-allowed',\n            inputSlot?.className\n          )\n        }}\n      />\n    );\n  }\n);\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport React, { ComponentPropsWithRef, forwardRef } from 'react';\n\nimport { useButtonShadow, useThemeContext, useDensityContext } from '../../hooks';\nimport { defaultInput, subduedInput } from '../../styles';\nimport { mx } from '../../util';\nimport { InputProps, InputSize } from './InputProps';\n\nconst sizeMap: Record<InputSize, string> = {\n  md: 'text-base',\n  lg: 'text-lg',\n  pin: '',\n  textarea: ''\n};\n\nexport type BareTextInputProps = Omit<ComponentPropsWithRef<'input'>, 'size'> &\n  Pick<InputProps, 'validationMessage' | 'validationValence' | 'size' | 'variant' | 'elevation' | 'density'>;\n\nexport const BareTextInput = forwardRef<HTMLInputElement, BareTextInputProps>(\n  (\n    { validationValence, validationMessage, variant, elevation, density: propsDensity, size, ...inputSlot },\n    forwardedRef\n  ) => {\n    const { themeVariant } = useThemeContext();\n    const shadow = useButtonShadow(elevation);\n    const density = useDensityContext(themeVariant === 'os' ? 'fine' : propsDensity);\n    return (\n      <input\n        {...inputSlot}\n        ref={forwardedRef}\n        className={mx(\n          (variant === 'subdued' ? subduedInput : defaultInput)(\n            {\n              density,\n              disabled: inputSlot.disabled,\n              ...(validationMessage && { validationValence })\n            },\n            themeVariant\n          ),\n          sizeMap[size ?? 'md'],\n          'block is-full',\n          !inputSlot.disabled && variant !== 'subdued' && shadow,\n          inputSlot?.className\n        )}\n      />\n    );\n  }\n);\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport React, { ComponentPropsWithRef, forwardRef } from 'react';\n\nimport { useButtonShadow, useDensityContext, useThemeContext } from '../../hooks';\nimport { defaultInput, subduedInput } from '../../styles';\nimport { mx } from '../../util';\nimport { TextareaProps } from './InputProps';\n\nexport type BareTextareaInputProps = ComponentPropsWithRef<'textarea'> &\n  Pick<TextareaProps, 'validationMessage' | 'validationValence' | 'variant' | 'elevation' | 'density'>;\n\nexport const BareTextareaInput = forwardRef<HTMLTextAreaElement, BareTextareaInputProps>(\n  ({ validationValence, validationMessage, elevation, density: propsDensity, variant, ...inputSlot }, forwardedRef) => {\n    const { themeVariant } = useThemeContext();\n    const shadow = useButtonShadow(elevation);\n    const density = useDensityContext(themeVariant === 'os' ? 'fine' : propsDensity);\n    return (\n      <textarea\n        ref={forwardedRef}\n        {...inputSlot}\n        className={mx(\n          (variant === 'subdued' ? subduedInput : defaultInput)({\n            density,\n            disabled: inputSlot.disabled,\n            ...(validationMessage && { validationValence })\n          }),\n          'block is-full',\n          !inputSlot.disabled && variant !== 'subdued' && shadow,\n          inputSlot?.className\n        )}\n      />\n    );\n  }\n);\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport * as NavigationMenuPrimitive from '@radix-ui/react-navigation-menu';\nimport React, { ComponentProps, ForwardedRef, forwardRef, ReactNode } from 'react';\n\nimport { useButtonShadow } from '../../hooks';\nimport { defaultFocus, hover, defaultInlineSeparator } from '../../styles';\nimport { mx } from '../../util';\nimport { defaultAppButtonColors, primaryAppButtonColors } from '../Button';\nimport { TooltipRoot, TooltipContent, TooltipTrigger, TooltipContentProps } from '../Tooltip';\n\ninterface NavMenuItemSharedProps {\n  children: ReactNode;\n  active?: boolean;\n  separator?: false;\n}\n\nexport interface NavMenuLinkItemProps extends NavMenuItemSharedProps {\n  triggerLinkProps: Omit<ComponentProps<typeof NavigationMenuPrimitive.Link>, 'children'>;\n  children: ReactNode;\n}\n\nexport interface NavMenuTooltipLinkItemProps extends NavMenuLinkItemProps {\n  tooltip: Omit<TooltipContentProps, 'children'>;\n}\n\nexport interface NavMenuInvokerItemProps extends NavMenuItemSharedProps {\n  content: ReactNode;\n  children: ReactNode;\n}\n\nexport interface NavMenuSeparatorProps {\n  separator: true;\n}\n\nexport type NavMenuItem =\n  | NavMenuTooltipLinkItemProps\n  | NavMenuLinkItemProps\n  | NavMenuInvokerItemProps\n  | NavMenuSeparatorProps;\n\nexport interface NavMenuSlots {\n  root?: Omit<ComponentProps<typeof NavigationMenuPrimitive.Root>, 'children'>;\n  viewport?: Omit<ComponentProps<typeof NavigationMenuPrimitive.Viewport>, 'children'>;\n  list?: Omit<ComponentProps<typeof NavigationMenuPrimitive.List>, 'children'>;\n  indicator?: Omit<ComponentProps<typeof NavigationMenuPrimitive.Indicator>, 'children'>;\n  indicatorIcon?: Pick<ComponentProps<'div'>, 'className'>;\n}\n\nexport interface NavMenuProps {\n  items: NavMenuItem[];\n  slots?: NavMenuSlots;\n  variant?: 'horizontal' | 'vertical';\n}\n\nconst NavMenuInvokerItem = forwardRef(\n  ({ content, children, active }: NavMenuInvokerItemProps, ref: ForwardedRef<HTMLLIElement>) => {\n    return (\n      <NavigationMenuPrimitive.Item ref={ref}>\n        <NavigationMenuPrimitive.Trigger\n          className={mx(\n            'px-3 py-2 text-sm rounded-md text-sm font-medium transition-color',\n            active ? primaryAppButtonColors : defaultAppButtonColors,\n            defaultFocus,\n            hover()\n          )}\n        >\n          {children}\n        </NavigationMenuPrimitive.Trigger>\n        <NavigationMenuPrimitive.Content\n          className={mx(\n            'absolute w-auto top-0 left-0 rounded-lg',\n            'radix-motion-from-start:animate-enter-from-left',\n            'radix-motion-from-end:animate-enter-from-right',\n            'radix-motion-to-start:animate-exit-to-left',\n            'radix-motion-to-end:animate-exit-to-right'\n          )}\n        >\n          {content}\n        </NavigationMenuPrimitive.Content>\n      </NavigationMenuPrimitive.Item>\n    );\n  }\n);\n\nconst NavMenuLinkItem = forwardRef(\n  ({ triggerLinkProps, children, active }: NavMenuLinkItemProps, ref: ForwardedRef<HTMLLIElement>) => (\n    <NavigationMenuPrimitive.Item asChild ref={ref}>\n      <NavigationMenuPrimitive.Link\n        {...triggerLinkProps}\n        active={active}\n        className={mx(\n          'px-3 py-2 text-sm rounded-md transition-color',\n          active ? primaryAppButtonColors : defaultAppButtonColors,\n          active ? 'font-medium' : 'font-normal',\n          defaultFocus,\n          hover(),\n          triggerLinkProps.className\n        )}\n      >\n        {children}\n      </NavigationMenuPrimitive.Link>\n    </NavigationMenuPrimitive.Item>\n  )\n);\n\nconst NavMenuTooltipLinkItem = forwardRef(\n  ({ tooltip, triggerLinkProps, active, children }: NavMenuTooltipLinkItemProps, ref: ForwardedRef<HTMLLIElement>) => (\n    <TooltipRoot>\n      <TooltipContent {...tooltip} />\n      <TooltipTrigger asChild>\n        {/* todo: why does the Tooltip not show if you use <NavMenuLinkItem {â€¦}/> here? */}\n        <NavigationMenuPrimitive.Item asChild ref={ref}>\n          <NavigationMenuPrimitive.Link\n            {...triggerLinkProps}\n            active={active}\n            className={mx(\n              'px-3 py-2 text-sm rounded-md transition-color',\n              active ? primaryAppButtonColors : defaultAppButtonColors,\n              active ? 'font-medium' : 'font-normal',\n              defaultFocus,\n              hover(),\n              triggerLinkProps.className\n            )}\n          >\n            {children}\n          </NavigationMenuPrimitive.Link>\n        </NavigationMenuPrimitive.Item>\n      </TooltipTrigger>\n    </TooltipRoot>\n  )\n);\n\nexport const NavMenuLink = NavigationMenuPrimitive.Link;\n\nexport const NavMenuSeparatorItem = (_props: NavMenuSeparatorProps) => {\n  return <span role='none' className={mx(defaultInlineSeparator, 'bs-5')} />;\n};\n\nconst isTooltipLinkItem = (o: any): o is NavMenuTooltipLinkItemProps => 'tooltip' in o;\nconst isLinkItem = (o: any): o is NavMenuLinkItemProps => 'triggerLinkProps' in o;\nconst isSeparator = (o: any): o is NavMenuSeparatorProps => 'separator' in o;\n\nexport const NavMenu = ({ items, slots = {}, variant = 'horizontal' }: NavMenuProps) => {\n  const shadow = useButtonShadow();\n  return (\n    <NavigationMenuPrimitive.Root\n      {...slots.root}\n      orientation={variant}\n      className={mx(\n        'rounded-lg bg-white dark:bg-neutral-750',\n        variant === 'vertical' ? 'max-bs-full overflow-y-auto' : 'max-is-full overflow-x-auto',\n        slots.root?.className\n      )}\n    >\n      <NavigationMenuPrimitive.List\n        {...slots.list}\n        className={mx(\n          shadow,\n          'relative flex gap-1 p-1',\n          variant === 'vertical' ? 'flex-col items-stretch' : 'flex-row items-center',\n          slots.list?.className\n        )}\n      >\n        {items.map((item: NavMenuItem, i) => {\n          return isTooltipLinkItem(item) ? (\n            <NavMenuTooltipLinkItem key={i} {...item} />\n          ) : isLinkItem(item) ? (\n            <NavMenuLinkItem key={i} {...item} />\n          ) : isSeparator(item) ? (\n            <NavMenuSeparatorItem key={i} {...item} />\n          ) : (\n            <NavMenuInvokerItem key={i} {...item} />\n          );\n        })}\n\n        <NavigationMenuPrimitive.Indicator\n          {...slots.indicator}\n          className={mx(\n            'z-10 top-[100%] flex items-end justify-center h-2 overflow-hidden',\n            'radix-state-visible:animate-fade-in',\n            'radix-state-hidden:animate-fade-out',\n            'transition-[width_transform] duration-[250ms] ease-[ease]',\n            slots.indicator?.className\n          )}\n        >\n          <div\n            className={mx(\n              'top-1 relative bg-white dark:bg-neutral-750 w-2 h-2 rotate-45',\n              slots.indicatorIcon?.className\n            )}\n          />\n        </NavigationMenuPrimitive.Indicator>\n      </NavigationMenuPrimitive.List>\n\n      <div\n        className={mx('absolute flex justify-center', 'w-[140%] left-[-20%] top-[100%]')}\n        style={{\n          perspective: '2000px'\n        }}\n      >\n        <NavigationMenuPrimitive.Viewport\n          {...slots.viewport}\n          className={mx(\n            'relative mbs-2 shadow-lg rounded-md bg-white dark:bg-neutral-750 overflow-hidden',\n            'w-radix-navigation-menu-viewport',\n            'h-radix-navigation-menu-viewport',\n            'radix-state-open:animate-scale-in-content',\n            'radix-state-closed:animate-scale-out-content',\n            'origin-[top_center] transition-[width_height] duration-300 ease-[ease]',\n            slots.viewport?.className\n          )}\n        />\n      </div>\n    </NavigationMenuPrimitive.Root>\n  );\n};\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport { X } from '@phosphor-icons/react';\nimport * as PopoverPrimitive from '@radix-ui/react-popover';\nimport { Button as ToolbarButtonItem } from '@radix-ui/react-toolbar';\nimport React, { ComponentProps, ReactNode, useCallback, useState } from 'react';\n\nimport { defaultActive, defaultFocus, hover, getSize } from '../../styles';\nimport { mx } from '../../util';\n\nexport interface PopoverSlots {\n  content?: Omit<ComponentProps<typeof PopoverPrimitive.Content>, 'children'>;\n  arrow?: Pick<ComponentProps<typeof PopoverPrimitive.Arrow>, 'className'>;\n  close?: Omit<ComponentProps<typeof PopoverPrimitive.Close>, 'children'>;\n  closeIcon?: ComponentProps<typeof X>;\n  trigger?: Omit<ComponentProps<typeof PopoverPrimitive.Trigger>, 'children'>;\n}\n\nexport interface PopoverProps {\n  openTrigger: ReactNode;\n  children: ReactNode;\n  closeLabel?: string;\n  initiallyOpen?: boolean;\n  mountAsSibling?: boolean;\n  triggerIsInToolbar?: boolean;\n  slots?: PopoverSlots;\n}\n\ntype KeyUpEvent = Parameters<Exclude<ComponentProps<typeof PopoverPrimitive.Trigger>['onKeyUp'], undefined>>[0];\n\nexport const Popover = ({\n  openTrigger,\n  children,\n  closeLabel,\n  initiallyOpen,\n  mountAsSibling,\n  triggerIsInToolbar,\n  slots = {}\n}: PopoverProps) => {\n  const [isOpen, setIsOpen] = useState(!!initiallyOpen);\n  const onKeyUp = useCallback(\n    (e: KeyUpEvent) => {\n      const keyUpId = (document.activeElement as HTMLElement).dataset.keyupid;\n      if (keyUpId && e.key === ' ') {\n        setIsOpen(keyUpId === 'open');\n      }\n      slots.trigger?.onKeyUp?.(e);\n    },\n    [slots.trigger?.onKeyUp]\n  );\n\n  const popoverContent = (\n    <PopoverPrimitive.Content\n      align='center'\n      {...slots.content}\n      className={mx(\n        'radix-side-top:animate-slide-up radix-side-bottom:animate-slide-down',\n        'rounded-lg p-4 shadow-xl elevated-buttons',\n        'bg-white dark:bg-neutral-800',\n        defaultFocus,\n        slots.content?.className\n      )}\n    >\n      <PopoverPrimitive.Arrow className={mx('fill-current text-white dark:text-neutral-800', slots.arrow?.className)} />\n      {children}\n      {closeLabel && (\n        <PopoverPrimitive.Close\n          {...slots.close}\n          className={mx(\n            'absolute top-3.5 right-3.5 inline-flex items-center justify-center rounded-sm p-1',\n            defaultFocus,\n            hover(),\n            slots.close?.className\n          )}\n          aria-label={closeLabel}\n          data-keyupid='close'\n        >\n          <X\n            {...slots.closeIcon}\n            className={mx(\n              getSize(4),\n              'text-neutral-500 hover:text-neutral-700 dark:text-neutral-500 dark:hover:text-neutral-400',\n              slots.closeIcon?.className\n            )}\n          />\n        </PopoverPrimitive.Close>\n      )}\n    </PopoverPrimitive.Content>\n  );\n\n  const trigger = (\n    <PopoverPrimitive.Trigger\n      {...slots.trigger}\n      onKeyUp={onKeyUp}\n      data-keyupid='open'\n      className={mx(hover(), defaultFocus, defaultActive, slots.trigger?.className)}\n    >\n      {openTrigger}\n    </PopoverPrimitive.Trigger>\n  );\n\n  return (\n    <PopoverPrimitive.Root open={isOpen} onOpenChange={setIsOpen}>\n      {triggerIsInToolbar ? <ToolbarButtonItem asChild>{trigger}</ToolbarButtonItem> : trigger}\n      {mountAsSibling ? popoverContent : <PopoverPrimitive.Portal>{popoverContent}</PopoverPrimitive.Portal>}\n    </PopoverPrimitive.Root>\n  );\n};\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport { QrCode as QrCodeIcon, CopySimple } from '@phosphor-icons/react';\nimport { QRCodeSVG } from 'qrcode.react';\nimport React, { useCallback, ReactHTMLElement, ComponentProps } from 'react';\n\nimport { useId } from '../../hooks';\nimport { Size } from '../../props';\nimport { getSize } from '../../styles';\nimport { mx } from '../../util';\nimport { Button, ButtonGroup, ButtonProps } from '../Button';\nimport { Popover } from '../Popover';\nimport { TooltipContent, TooltipContentProps, TooltipRoot, TooltipTrigger } from '../Tooltip';\n\ninterface SharedQrCodeProps extends Pick<ButtonProps, 'density' | 'elevation'> {\n  value: string;\n}\n\ninterface FullQrCodeSlots {\n  tooltipContent?: Omit<TooltipContentProps, 'ref' | 'children'>;\n  button?: Omit<ComponentProps<'button'>, 'ref' | 'children'>;\n  qrSvg?: ComponentProps<typeof QRCodeSVG>;\n}\n\nexport interface FullQrCodeProps extends SharedQrCodeProps {\n  label: string | Omit<ReactHTMLElement<HTMLElement>, 'ref'>;\n  size?: Size;\n  slots?: FullQrCodeSlots;\n}\n\nexport type QrCodeProps = FullQrCodeProps;\n\ninterface CompactQrCodeSlots {\n  qrTooltipContent?: Omit<TooltipContentProps, 'children'>;\n  qrButton?: Omit<ComponentProps<'button'>, 'ref' | 'children'>;\n  copyTooltipContent?: Omit<TooltipContentProps, 'children'>;\n  copyButton?: Omit<ComponentProps<'button'>, 'ref' | 'children'>;\n  qrSvg?: ComponentProps<typeof QRCodeSVG>;\n}\n\nexport interface CompactQrCodeProps extends SharedQrCodeProps {\n  displayQrLabel: undefined | string | Omit<ReactHTMLElement<HTMLElement>, 'ref'>;\n  copyLabel: string | Omit<ReactHTMLElement<HTMLElement>, 'ref'>;\n  slots?: CompactQrCodeSlots;\n}\n\nexport const FullQrCode = ({ value, label, size, density, elevation, slots = {} }: FullQrCodeProps) => {\n  const labelId = useId('qr-label');\n  const copyValue = useCallback(() => {\n    void navigator.clipboard.writeText(value);\n  }, [value]);\n  return (\n    <TooltipRoot>\n      <TooltipContent {...slots.tooltipContent}>{label}</TooltipContent>\n      <TooltipTrigger asChild>\n        <Button\n          {...{ density, elevation }}\n          {...slots.button}\n          className={mx('overflow-hidden p-0', getSize(size ?? 32), slots.button?.className)}\n          onClick={copyValue}\n        >\n          <QRCodeSVG\n            includeMargin\n            role='none'\n            {...slots.qrSvg}\n            value={value}\n            className={mx('w-full h-auto', slots.qrSvg?.className)}\n          />\n          <div id={labelId} className='sr-only'>\n            {label}\n          </div>\n        </Button>\n      </TooltipTrigger>\n    </TooltipRoot>\n  );\n};\n\nexport const CompactQrCode = ({\n  value,\n  displayQrLabel,\n  copyLabel,\n  density,\n  elevation,\n  slots = {}\n}: CompactQrCodeProps) => {\n  const labelId = useId('qr-label');\n  const copyValue = useCallback(() => {\n    void navigator.clipboard.writeText(value);\n  }, [value]);\n  return (\n    <>\n      <ButtonGroup className='inline-flex grow md:hidden'>\n        {displayQrLabel && (\n          <span className='sr-only' id={labelId}>\n            {displayQrLabel}\n          </span>\n        )}\n        <Popover\n          openTrigger={\n            <Button\n              {...{ density, elevation }}\n              {...slots.qrButton}\n              className={mx('border-ie-0 grow rounded-ie-none rounded-is-md', slots.qrButton?.className)}\n              aria-labelledby={labelId}\n            >\n              <QrCodeIcon className={getSize(5)} />\n            </Button>\n          }\n          slots={{\n            content: { className: 'p-0', ...slots.qrTooltipContent, side: slots?.qrTooltipContent?.side ?? 'bottom' },\n            trigger: { asChild: true }\n          }}\n        >\n          <div role='none' className='overflow-hidden rounded-md'>\n            <QRCodeSVG\n              includeMargin\n              role='none'\n              {...slots.qrSvg}\n              value={value}\n              className={mx(getSize(64), slots.qrSvg?.className)}\n            />\n          </div>\n        </Popover>\n        <TooltipRoot>\n          <TooltipContent {...slots.qrTooltipContent}>{copyLabel}</TooltipContent>\n          <TooltipTrigger asChild>\n            <Button\n              {...{ density, elevation }}\n              {...slots.copyButton}\n              className={mx('rounded-is-none rounded-ie-md grow', slots.copyButton?.className)}\n              onClick={copyValue}\n            >\n              <CopySimple className={getSize(5)} />\n            </Button>\n          </TooltipTrigger>\n        </TooltipRoot>\n      </ButtonGroup>\n      <ButtonGroup className='hidden md:inline-flex'>\n        <Popover\n          openTrigger={\n            <Button\n              {...{ density, elevation }}\n              {...slots.qrButton}\n              className={mx('border-ie-0 flex gap-1 rounded-ie-none rounded-is-md', slots.qrButton?.className)}\n            >\n              <QrCodeIcon className={getSize(5)} />\n              {displayQrLabel}\n            </Button>\n          }\n          slots={{\n            content: { className: 'p-0', ...slots.qrTooltipContent, side: slots?.qrTooltipContent?.side ?? 'left' },\n            trigger: { asChild: true }\n          }}\n        >\n          <div role='none' className='overflow-hidden rounded-md'>\n            <QRCodeSVG\n              includeMargin\n              role='none'\n              {...slots.qrSvg}\n              value={value}\n              className={mx(getSize(64), slots.qrSvg?.className)}\n            />\n          </div>\n        </Popover>\n        <Button\n          {...{ density, elevation }}\n          {...slots.copyButton}\n          className={mx('flex gap-1 rounded-ie-md rounded-is-none', slots.copyButton?.className)}\n          onClick={copyValue}\n        >\n          <CopySimple className={getSize(5)} />\n          {copyLabel}\n        </Button>\n      </ButtonGroup>\n    </>\n  );\n};\n\nexport const QrCode = FullQrCode;\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport React, { ComponentProps, PropsWithChildren, ReactNode } from 'react';\n\nimport { MessageValence } from '../../props';\nimport { mx } from '../../util';\n\nexport interface TagProps extends ComponentProps<'span'> {\n  valence?: MessageValence;\n  children?: ReactNode;\n}\n\nconst valenceColorMap: Record<MessageValence, string> = {\n  neutral: 'bg-neutral-100 text-neutral-800 dark:bg-neutral-700 dark:text-neutral-300',\n  success: 'bg-success-100 text-success-800 dark:bg-success-700 dark:text-success-300',\n  info: 'bg-info-100 text-info-800 dark:bg-info-700 dark:text-info-300',\n  warning: 'bg-warning-100 text-warning-800 dark:bg-warning-700 dark:text-warning-300',\n  error: 'bg-error-100 text-error-800 dark:bg-error-700 dark:text-error-300'\n};\n\nexport const Tag = ({ children, valence = 'neutral', ...rootSlot }: PropsWithChildren<TagProps>) => {\n  return (\n    <span\n      {...rootSlot}\n      className={mx('text-xs font-semibold px-2.5 py-0.5 rounded', valenceColorMap[valence], rootSlot?.className)}\n    >\n      {children}\n    </span>\n  );\n};\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport * as ToastPrimitive from '@radix-ui/react-toast';\nimport React, { cloneElement, ComponentProps, ReactHTMLElement, ReactNode, useState } from 'react';\n\nimport { defaultDescription, defaultFocus } from '../../styles';\nimport { mx } from '../../util';\nimport { Button } from '../Button';\nimport { ElevationProvider } from '../ElevationProvider';\n\nexport interface ToastSlots {\n  root?: Omit<ComponentProps<typeof ToastPrimitive.Root>, 'children'>;\n  heading?: Omit<ComponentProps<'div'>, 'children'>;\n  headingInner?: Omit<ComponentProps<'div'>, 'children'>;\n  title?: Omit<ComponentProps<typeof ToastPrimitive.Title>, 'children'>;\n  description?: Omit<ComponentProps<typeof ToastPrimitive.Description>, 'children'>;\n  actions?: Omit<ComponentProps<'div'>, 'children'>;\n}\n\nexport interface ToastProps extends Omit<ComponentProps<typeof ToastPrimitive.Root>, 'title'> {\n  title: ReactNode;\n  openTrigger?: string | Omit<ReactHTMLElement<HTMLElement>, 'ref'>;\n  closeTrigger?: ReactNode;\n  actionTriggers?: { altText: string; trigger: ReactNode }[];\n  titleVisuallyHidden?: boolean;\n  description?: ReactNode;\n  initiallyOpen?: boolean;\n  slots?: ToastSlots;\n}\n\nexport const Toast = ({\n  title,\n  titleVisuallyHidden,\n  description,\n  openTrigger,\n  closeTrigger,\n  actionTriggers,\n  initiallyOpen,\n  slots = {}\n}: ToastProps) => {\n  const [isOpen, setIsOpen] = useState(!!initiallyOpen);\n\n  return (\n    <>\n      {openTrigger &&\n        (typeof openTrigger === 'string' ? (\n          <Button onClick={() => setIsOpen(true)}>{openTrigger}</Button>\n        ) : (\n          cloneElement(openTrigger as Omit<ReactHTMLElement<HTMLElement>, 'ref'>, { onClick: () => setIsOpen(true) })\n        ))}\n      <ToastPrimitive.Root\n        open={isOpen}\n        onOpenChange={setIsOpen}\n        {...slots.root}\n        className={mx(\n          'shadow-lg rounded-lg elevated-buttons flex',\n          'bg-white dark:bg-neutral-800',\n          'radix-state-open:animate-toast-slide-in-bottom md:radix-state-open:animate-toast-slide-in-right',\n          'radix-state-closed:animate-toast-hide',\n          'radix-swipe-end:animate-toast-swipe-out',\n          'translate-x-radix-toast-swipe-move-x',\n          'radix-swipe-cancel:translate-x-0 radix-swipe-cancel:duration-200 radix-swipe-cancel:ease-[ease]',\n          defaultFocus,\n          slots.root?.className\n        )}\n      >\n        <ElevationProvider elevation='chrome'>\n          <div\n            role='none'\n            {...slots.heading}\n            className={mx('w-0 flex-1 flex items-center pl-5 py-4 min-h-full', slots.heading?.className)}\n          >\n            <div\n              role='none'\n              {...slots.headingInner}\n              className={mx(\n                'w-full radix flex flex-col justify-center min-h-full gap-1',\n                slots.headingInner?.className\n              )}\n            >\n              <ToastPrimitive.Title className={mx('text-md font-medium', titleVisuallyHidden && 'sr-only')}>\n                {title}\n              </ToastPrimitive.Title>\n              {description && (\n                <ToastPrimitive.Description className={defaultDescription}>{description}</ToastPrimitive.Description>\n              )}\n            </div>\n          </div>\n          <div\n            role='none'\n            {...slots.actions}\n            className={mx(\n              'flex flex-col px-3 py-2 gap-1 items-stretch justify-center min-h-full',\n              slots.actions?.className\n            )}\n          >\n            {(actionTriggers || []).map(({ altText, trigger }, index) => (\n              <ToastPrimitive.Action key={index} altText={altText} asChild={typeof trigger !== 'string'}>\n                {trigger}\n              </ToastPrimitive.Action>\n            ))}\n            {closeTrigger && (\n              <ToastPrimitive.Close asChild={typeof closeTrigger !== 'string'}>{closeTrigger}</ToastPrimitive.Close>\n            )}\n          </div>\n        </ElevationProvider>\n      </ToastPrimitive.Root>\n    </>\n  );\n};\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport {\n  Provider as ToastProvider,\n  ToastProviderProps,\n  Viewport as ToastViewport,\n  ToastViewportProps\n} from '@radix-ui/react-toast';\nimport { Provider as TooltipProvider, TooltipProviderProps } from '@radix-ui/react-tooltip';\nimport React, { createContext, PropsWithChildren } from 'react';\n\nimport { Density, Elevation } from '../../props';\nimport { themeVariantFocus } from '../../styles';\nimport { hasIosKeyboard, mx } from '../../util';\nimport { DensityProvider } from '../DensityProvider';\nimport { ElevationProvider } from '../ElevationProvider';\nimport { TranslationsProvider, TranslationsProviderProps } from './TranslationsProvider';\n\nexport type ThemeVariant = 'app' | 'os';\n\nexport type ThemeMode = 'light' | 'dark';\n\nexport interface ThemeContextValue {\n  themeVariant: ThemeVariant;\n  // todo(thure): currently `themeMode` doesnâ€™t do anything itâ€™s just a place to persist the mode; determine how best to handle this given our Tailwind setup which selects tokens using the `dark` classname.\n  themeMode?: ThemeMode;\n  hasIosKeyboard?: boolean;\n}\n\nexport type ThemeProviderProps = PropsWithChildren<{\n  tooltipProviderProps?: Omit<TooltipProviderProps, 'children'>;\n  toastProviderProps?: Omit<ToastProviderProps, 'children'>;\n  toastViewportProps?: Omit<ToastViewportProps, 'children'>;\n  rootElevation?: Elevation;\n  rootDensity?: Density;\n}> &\n  Omit<TranslationsProviderProps, 'children'> &\n  Partial<ThemeContextValue>;\n\nexport const ThemeContext = createContext<ThemeContextValue>({\n  themeVariant: 'app',\n  themeMode: 'dark',\n  hasIosKeyboard: false\n});\n\nexport const ThemeProvider = ({\n  children,\n  tooltipProviderProps,\n  toastProviderProps,\n  toastViewportProps,\n  fallback = null,\n  resourceExtensions,\n  appNs,\n  themeVariant = 'app',\n  themeMode = 'dark',\n  rootElevation = 'base',\n  rootDensity = 'coarse'\n}: ThemeProviderProps) => {\n  return (\n    <ThemeContext.Provider value={{ themeVariant, themeMode, hasIosKeyboard: hasIosKeyboard() }}>\n      <TranslationsProvider\n        {...{\n          fallback,\n          resourceExtensions,\n          appNs\n        }}\n      >\n        <ToastProvider {...toastProviderProps}>\n          <TooltipProvider delayDuration={100} skipDelayDuration={400} {...tooltipProviderProps}>\n            <ElevationProvider elevation={rootElevation}>\n              <DensityProvider density={rootDensity}>{children}</DensityProvider>\n            </ElevationProvider>\n          </TooltipProvider>\n          <ToastViewport\n            {...toastViewportProps}\n            className={mx(\n              'z-[70] fixed bottom-4 inset-x-4 w-auto md:top-4 md:right-4 md:left-auto md:bottom-auto md:w-full md:max-w-sm rounded-lg flex flex-col gap-2',\n              themeVariantFocus(themeVariant),\n              toastViewportProps?.className\n            )}\n          />\n        </ToastProvider>\n      </TranslationsProvider>\n    </ThemeContext.Provider>\n  );\n};\n", "//\n// Copyright 2023 DXOS.org\n//\nimport React from 'react';\n\nimport { TreeItem, TreeItemBody, TreeItemHeading, TreeRoot, TreeProps, TreeBranch } from './Tree';\n\nconst isScalar = (data: any) => !(typeof data === 'object' || Array.isArray(data));\nconst createKey = (key: string, prefix?: string) => (prefix === undefined ? key : `${prefix}.${key}`);\n\ntype JsonTreeNodeProps = { data: Record<string, any> | any[]; prefix?: string };\n\nconst JsonTreeBranch = ({ data, prefix }: JsonTreeNodeProps) => {\n  const keys = Array.isArray(data) ? Array.from(data.keys()) : Object.keys(data);\n  return (\n    <>\n      {keys.map((key) => {\n        const value = data[key as keyof typeof data];\n        const id = createKey(String(key), prefix);\n        const valueIsScalar = isScalar(value);\n\n        return (\n          <TreeItem key={id} id={id} collapsible={!valueIsScalar}>\n            {valueIsScalar ? (\n              <TreeItemHeading className='flex items-center'>{String(value)}</TreeItemHeading>\n            ) : (\n              <>\n                <TreeItemHeading className='flex items-center'>{key}</TreeItemHeading>\n                <TreeItemBody asChild>\n                  <TreeBranch>\n                    <JsonTreeBranch data={value} prefix={id} />\n                  </TreeBranch>\n                </TreeItemBody>\n              </>\n            )}\n          </TreeItem>\n        );\n      })}\n    </>\n  );\n};\n\ntype JsonTreeProps = { data: Record<string, any> } & TreeProps;\n\nconst JsonTree = ({ data, ...props }: JsonTreeProps) => {\n  return (\n    <TreeRoot density='fine' {...props}>\n      <JsonTreeBranch data={data} />\n    </TreeRoot>\n  );\n};\n\nexport { JsonTree };\n\nexport type { JsonTreeProps };\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport React, { forwardRef } from 'react';\n\nimport {\n  List,\n  LIST_ITEM_NAME,\n  ListItem,\n  ListItemCollapsibleContent,\n  ListItemCollapsibleContentProps,\n  ListItemHeading,\n  ListItemHeadingProps,\n  ListItemProps,\n  ListProps,\n  ListScopedProps,\n  useListItemContext\n} from '../List';\n\ntype TreeProps = ListProps;\n\ntype TreeItemProps = ListItemProps;\n\nconst TreeRoot = (props: TreeProps) => {\n  return <List {...props} collapsible slots={{ ...props.slots, root: { ...props.slots?.root, role: 'tree' } }} />;\n};\n\ntype TreeBranchProps = ListScopedProps<Omit<TreeProps, 'labelId'>>;\n\nconst TreeBranch = forwardRef<HTMLOListElement, TreeBranchProps>(\n  ({ __listScope, ...props }: TreeBranchProps, forwardedRef) => {\n    const { headingId } = useListItemContext(LIST_ITEM_NAME, __listScope);\n\n    return (\n      <List\n        collapsible\n        {...props}\n        labelId={headingId}\n        slots={{ ...props.slots, root: { ...props.slots?.root, role: 'none' } }}\n        ref={forwardedRef}\n      />\n    );\n  }\n);\n\nconst TreeItem = (props: ListItemProps) => {\n  return <ListItem {...props} slots={{ ...props.slots, root: { ...props.slots?.root, role: 'treeitem' } }} />;\n};\n\ntype TreeItemHeadingProps = ListItemHeadingProps;\n\nconst TreeItemHeading = ListItemHeading;\n\ntype TreeItemBodyProps = ListItemCollapsibleContentProps;\n\nconst TreeItemBody = ListItemCollapsibleContent;\n\nexport { TreeRoot, TreeBranch, TreeItem, TreeItemHeading, TreeItemBody };\n\nexport type { TreeProps, TreeItemProps, TreeItemHeadingProps, TreeItemBodyProps };\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport { CaretDown, CaretRight } from '@phosphor-icons/react';\nimport React, { FC, ReactNode, useState } from 'react';\n\nimport { getSize } from '../../styles';\nimport { mx } from '../../util';\n\nconst isScalar = (data: any) => !(typeof data === 'object' || Array.isArray(data));\nconst createKey = (key: string, prefix?: string) => (prefix === undefined ? key : `${prefix}.${key}`);\n\nexport const mapJsonToHierarchy = (data: any, prefix?: string): TreeViewItem[] => {\n  if (Array.isArray(data)) {\n    return Object.values(data).map((value, i) => {\n      const key = String(i);\n      const item: TreeViewItem = {\n        id: createKey(key, prefix)\n      };\n\n      if (isScalar(value)) {\n        item.title = String(value);\n      } else {\n        item.title = String(i);\n        item.items = mapJsonToHierarchy(value, key);\n      }\n\n      return item;\n    });\n  }\n\n  return Object.entries(data).map(([key, value]) => {\n    const item: TreeViewItem = {\n      id: createKey(key, prefix),\n      title: key,\n      items: isScalar(value) ? undefined : mapJsonToHierarchy(value, key)\n    };\n\n    if (isScalar(value)) {\n      item.value = value;\n      // item.Element = (\n      //   <div>\n      //     <span>{key}</span>: <span>{String(value)}</span>\n      //   </div>\n      // );\n    }\n\n    return item;\n  });\n};\n\nexport type TreeViewItem = {\n  id: string;\n  title?: string; // TODO(burdon): Rename label; optional component.\n  value?: any;\n  Element?: ReactNode;\n  Icon?: FC;\n  items?: TreeViewItem[];\n};\n\n// TODO(burdon): Navigate up/down.\n// TODO(burdon): Unselect on Escape.\n\nexport type TreeViewSlots = {\n  root?: {\n    className?: string;\n  };\n  selected?: {\n    className?: string;\n  };\n  title?: {\n    className?: string;\n  };\n  value?: {\n    className?: string;\n  };\n};\n\nexport type TreeViewProps = {\n  items: TreeViewItem[];\n  slots?: TreeViewSlots;\n  onSelect?: (item: TreeViewItem) => void;\n  selected?: string;\n  expanded?: string[];\n};\n\nexport const TreeView: FC<TreeViewProps> = ({ items, slots = {}, onSelect, selected, expanded = [] }) => {\n  const [openMap, setOpenMap] = useState<{ [key: string]: boolean }>(\n    expanded?.reduce((map, id) => ({ ...map, [id]: true }), {})\n  );\n\n  const handleToggle = (item: TreeViewItem) => {\n    setOpenMap((map) => {\n      if (map[item.id]) {\n        delete map[item.id];\n      } else {\n        map[item.id] = true;\n      }\n\n      return { ...map };\n    });\n  };\n\n  const handleSelection = (item: TreeViewItem) => {\n    onSelect?.(item);\n  };\n\n  const Item = ({ item, depth = 0 }: { item: TreeViewItem; depth?: number }) => {\n    const open = openMap[item.id];\n    const sub = item.items && item.items.length > 0;\n    const { Element, Icon } = item;\n\n    return (\n      <div className='flex flex-1 flex-col'>\n        <div\n          className={mx(\n            'flex select-none cursor-pointer pl-3',\n            slots.root?.className,\n            item.id === selected && slots.selected?.className\n          )}\n          onClick={() => handleSelection(item)}\n        >\n          <div className='flex items-center' style={{ marginLeft: depth * 16 }}>\n            <div style={{ width: 20 }} onClick={() => handleToggle(item)}>\n              {sub && (open ? <CaretDown className={getSize(3)} /> : <CaretRight className={getSize(3)} />)}\n            </div>\n            {Icon && (\n              <div className='pr-1'>\n                <Icon />\n              </div>\n            )}\n            {Element || (\n              <div className='flex flex-nowrap' style={{ lineHeight: 1.6 }}>\n                <span className={slots.title?.className}>{item.title}</span>\n                {!item.items && item.value !== undefined && (\n                  // eslint-disable-next-line no-octal-escape\n                  <span className={slots.value?.className ?? 'pl-2 empty:after:content-[\"\\00a0\"]'}>\n                    {String(item.value)}\n                  </span>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {item.items && open && (\n          <div>\n            {item.items.map((item) => (\n              <Item key={item.id} item={item} depth={depth + 1} />\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className='flex flex-1 flex-col'>\n      <div className='flex flex-col'>\n        {items.map((item) => (\n          <Item key={item.id} item={item} />\n        ))}\n      </div>\n    </div>\n  );\n};\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport { CaretDown, CaretUp, Check } from '@phosphor-icons/react';\nimport * as SelectPrimitive from '@radix-ui/react-select';\nimport React, { ReactNode } from 'react';\n\nimport { mx } from '../../util';\nimport { Button } from '../Button';\n\nexport type SelectItemProps = SelectPrimitive.SelectItemProps;\n\nconst Item = (props: SelectItemProps) => {\n  const { className, children, ...restProps } = { ...props };\n  return (\n    <SelectPrimitive.Item\n      className={mx(\n        'relative flex items-center px-8 py-2 rounded-md text-sm text-gray-700 dark:text-gray-300 font-medium focus:bg-gray-100 dark:focus:bg-gray-900',\n        'radix-disabled:opacity-50',\n        'focus:outline-none select-none',\n        className\n      )}\n      {...restProps}\n    >\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n      <SelectPrimitive.ItemIndicator className='absolute left-2 inline-flex items-center'>\n        <Check />\n      </SelectPrimitive.ItemIndicator>\n    </SelectPrimitive.Item>\n  );\n};\n\nexport type SelectProps = {\n  className?: string;\n  label?: string;\n  placeholder?: string;\n  children?: ReactNode;\n} & Pick<SelectPrimitive.SelectProps, 'defaultValue' | 'value' | 'onValueChange'>;\n\nexport const Select = (props: SelectProps) => {\n  const { label, className, placeholder, children, ...rest } = { ...props };\n  return (\n    <SelectPrimitive.Root {...rest}>\n      <SelectPrimitive.Trigger className={className} asChild aria-label={label}>\n        <Button>\n          <SelectPrimitive.Value placeholder={placeholder} />\n          <SelectPrimitive.Icon className='ml-2'>\n            <CaretDown />\n          </SelectPrimitive.Icon>\n        </Button>\n      </SelectPrimitive.Trigger>\n      <SelectPrimitive.Content className='z-[50]'>\n        <SelectPrimitive.ScrollUpButton className='flex items-center justify-center text-gray-700 dark:text-gray-300'>\n          <div className=''>\n            <CaretUp />\n          </div>\n        </SelectPrimitive.ScrollUpButton>\n        <SelectPrimitive.Viewport className='bg-white dark:bg-gray-800 p-2 rounded-lg shadow-lg'>\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectPrimitive.ScrollDownButton className='flex items-center justify-center text-gray-700 dark:text-gray-300'>\n          <CaretDown />\n        </SelectPrimitive.ScrollDownButton>\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Root>\n  );\n};\n\nSelect.Group = SelectPrimitive.Group;\nSelect.Item = Item;\n", "//\n// Copyright 2023 DXOS.org\n//\n\nimport { X } from '@phosphor-icons/react';\nimport React, { FC, useState } from 'react';\n\nimport { mx } from '../../util';\nimport { Input, InputProps } from '../Input';\n\n// TODO(burdon): Differentiate slots applied to Input vs slots spread into Input slots?\ntype SearchbarSlots = {\n  root?: {\n    className?: string;\n    placeholder?: string;\n    variant?: InputProps['variant'];\n  };\n  input?: {\n    className?: string;\n    autoFocus?: boolean;\n  };\n  button?: {\n    className?: string;\n  };\n};\n\nexport type SearchbarProps = {\n  slots?: SearchbarSlots;\n  onSearch?: (text: string) => void;\n};\n\nexport const Searchbar: FC<SearchbarProps> = ({ slots = {}, onSearch }) => {\n  const [text, setText] = useState('');\n  const handleChange = (text: string) => {\n    setText(text);\n    onSearch?.(text);\n  };\n\n  const handleReset = () => {\n    handleChange('');\n  };\n\n  return (\n    <div className={mx('flex w-full items-center', slots.root?.className)}>\n      <Input\n        label='Search'\n        labelVisuallyHidden\n        placeholder={slots.root?.placeholder ?? 'Search...'}\n        variant={slots.root?.variant ?? 'default'}\n        slots={{\n          root: {\n            className: 'w-full'\n          },\n          input: {\n            onKeyDown: ({ key }) => key === 'Escape' && handleReset(),\n            spellCheck: false,\n            ...slots.input\n          }\n        }}\n        value={text}\n        onChange={({ target }) => handleChange(target.value)}\n      />\n\n      {/* TODO(burdon): Place inside input? */}\n      <button className={mx('p-1', slots.button?.className)} onClick={handleReset}>\n        <X />\n      </button>\n    </div>\n  );\n};\n", "//\n// Copyright 2022 DXOS.org\n//\n\nimport tailwindcssForms from '@tailwindcss/forms';\nimport merge from 'lodash.merge';\nimport tailwindcssLogical from 'tailwindcss-logical';\nimport tailwindcssRadix from 'tailwindcss-radix';\nimport tailwindColors from 'tailwindcss/colors';\nimport defaultConfig from 'tailwindcss/stubs/defaultConfig.stub.js';\nimport { Config, ThemeConfig } from 'tailwindcss/types/config';\n\nexport type TailwindConfig = Config;\nexport type TailwindThemeConfig = ThemeConfig;\n\nexport const configPalettes = {\n  red: {\n    50: '#ffedea',\n    100: '#ffdad4',\n    150: '#ffc7bf',\n    200: '#ffb2a9',\n    250: '#ff9d94',\n    300: '#ff877f',\n    350: '#ff6d69',\n    400: '#fe4e55',\n    450: '#f72d45',\n    500: '#ea003a',\n    550: '#d20034',\n    600: '#bb002e',\n    650: '#a50029',\n    700: '#8f0023',\n    750: '#7a001d',\n    800: '#660017',\n    850: '#520010',\n    900: '#3f0006',\n    950: '#280300'\n  },\n  orange: {\n    50: '#ffede3',\n    100: '#ffdbc7',\n    150: '#ffc8ab',\n    200: '#ffb48e',\n    250: '#ffa072',\n    300: '#ff8954',\n    350: '#ff7035',\n    400: '#f0612c',\n    450: '#e15222',\n    500: '#d2441b',\n    550: '#c13514',\n    600: '#b1270e',\n    650: '#9f1a09',\n    700: '#8d0c05',\n    750: '#7b0101',\n    800: '#650300',\n    850: '#4f0800',\n    900: '#380b00',\n    950: '#220800'\n  },\n  amber: {\n    50: '#ffeed7',\n    100: '#ffddae',\n    150: '#ffca84',\n    200: '#ffb758',\n    250: '#ffa222',\n    300: '#f59209',\n    350: '#e78300',\n    400: '#d97500',\n    450: '#ca6700',\n    500: '#bc5a00',\n    550: '#ad4d00',\n    600: '#9d4000',\n    650: '#8e3400',\n    700: '#7e2900',\n    750: '#6d2000',\n    800: '#5a1800',\n    850: '#471300',\n    900: '#340f00',\n    950: '#200a00'\n  },\n  yellow: {\n    50: '#fff1b3',\n    100: '#ffe055',\n    150: '#fad000',\n    200: '#f0bf00',\n    250: '#e6af00',\n    300: '#dba000',\n    350: '#cf9100',\n    400: '#c38200',\n    450: '#b77400',\n    500: '#aa6600',\n    550: '#9d5800',\n    600: '#904b00',\n    650: '#823f00',\n    700: '#743300',\n    750: '#652800',\n    800: '#541f00',\n    850: '#431700',\n    900: '#311200',\n    950: '#1f0b00'\n  },\n  lime: {\n    50: '#e4fb8c',\n    100: '#cfef63',\n    150: '#bde243',\n    200: '#acd528',\n    250: '#9cc70a',\n    300: '#8fb900',\n    350: '#83ab00',\n    400: '#779d00',\n    450: '#6c8f00',\n    500: '#608100',\n    550: '#557400',\n    600: '#4b6700',\n    650: '#405a00',\n    700: '#364d00',\n    750: '#2d4100',\n    800: '#253500',\n    850: '#1e2900',\n    900: '#171e00',\n    950: '#0e1200'\n  },\n  green: {\n    50: '#e0f9c8',\n    100: '#c2f09d',\n    150: '#a6e67b',\n    200: '#8bda5e',\n    250: '#72ce45',\n    300: '#5bc130',\n    350: '#44b41b',\n    400: '#2ca704',\n    450: '#1b9900',\n    500: '#0a8a00',\n    550: '#007c04',\n    600: '#006e0a',\n    650: '#00600c',\n    700: '#00530d',\n    750: '#00460c',\n    800: '#003909',\n    850: '#022d07',\n    900: '#072005',\n    950: '#031402'\n  },\n  emerald: {\n    50: '#c5ffc9',\n    100: '#7dfd93',\n    150: '#4ff17a',\n    200: '#24e469',\n    250: '#00d561',\n    300: '#00c55b',\n    350: '#00b656',\n    400: '#00a750',\n    450: '#00984a',\n    500: '#008a44',\n    550: '#007b3e',\n    600: '#006d37',\n    650: '#005f30',\n    700: '#00522a',\n    750: '#004523',\n    800: '#00391c',\n    850: '#002c15',\n    900: '#00210e',\n    950: '#001507'\n  },\n  teal: {\n    50: '#d4fae1',\n    100: '#b2f1ca',\n    150: '#95e6b7',\n    200: '#7adaa6',\n    250: '#61cd98',\n    300: '#49c08a',\n    350: '#30b37e',\n    400: '#0fa573',\n    450: '#009769',\n    500: '#008860',\n    550: '#007a57',\n    600: '#006c4e',\n    650: '#005e45',\n    700: '#00513c',\n    750: '#004433',\n    800: '#00382a',\n    850: '#002c21',\n    900: '#002018',\n    950: '#00140e'\n  },\n  cyan: {\n    50: '#d4f9f7',\n    100: '#b5eeec',\n    150: '#9be2e1',\n    200: '#84d5d5',\n    250: '#6fc8ca',\n    300: '#5bbabe',\n    350: '#47adb2',\n    400: '#34a0a6',\n    450: '#1d929a',\n    500: '#00858e',\n    550: '#007780',\n    600: '#006973',\n    650: '#005c65',\n    700: '#004f58',\n    750: '#00424b',\n    800: '#00363e',\n    850: '#002a31',\n    900: '#001f25',\n    950: '#001417'\n  },\n  sky: {\n    50: '#e9f2ff',\n    100: '#d1e5ff',\n    150: '#b9d8ff',\n    200: '#9fccff',\n    250: '#85bffd',\n    300: '#6fb2f4',\n    350: '#5aa5ea',\n    400: '#4498df',\n    450: '#2d8bd3',\n    500: '#0d7ec5',\n    550: '#0071b3',\n    600: '#00649f',\n    650: '#00578c',\n    700: '#004b79',\n    750: '#003f67',\n    800: '#003355',\n    850: '#002844',\n    900: '#001d34',\n    950: '#001222'\n  },\n  blue: {\n    50: '#edf1ff',\n    100: '#dbe2ff',\n    150: '#c9d4ff',\n    200: '#b6c6ff',\n    250: '#a3b8ff',\n    300: '#8faaff',\n    350: '#799cff',\n    400: '#658efb',\n    450: '#5281f2',\n    500: '#3e74e7',\n    550: '#2967dc',\n    600: '#0b5ace',\n    650: '#004eb9',\n    700: '#0043a3',\n    750: '#00378d',\n    800: '#002d77',\n    850: '#002261',\n    900: '#00184c',\n    950: '#000d39'\n  },\n  indigo: {\n    50: '#f1f0ff',\n    100: '#e3e0ff',\n    150: '#d4d1ff',\n    200: '#c5c1ff',\n    250: '#b5b2ff',\n    300: '#a5a3ff',\n    350: '#9495ff',\n    400: '#8186ff',\n    450: '#7079f7',\n    500: '#5e6ced',\n    550: '#4c5fe2',\n    600: '#3953d6',\n    650: '#2248c9',\n    700: '#003cb9',\n    750: '#00329e',\n    800: '#002984',\n    850: '#001f6b',\n    900: '#08174d',\n    950: '#0e0d2b'\n  },\n  violet: {\n    50: '#f2efff',\n    100: '#e5dfff',\n    150: '#d8cfff',\n    200: '#cbbfff',\n    250: '#beafff',\n    300: '#b0a0ff',\n    350: '#a391f9',\n    400: '#9582f2',\n    450: '#8874e9',\n    500: '#7a66df',\n    550: '#6d59d5',\n    600: '#5f4cca',\n    650: '#513fbe',\n    700: '#4332b1',\n    750: '#3425a5',\n    800: '#251997',\n    850: '#100b8a',\n    900: '#0e066a',\n    950: '#150638'\n  },\n  purple: {\n    50: '#f7eeff',\n    100: '#eedcff',\n    150: '#e4cbfe',\n    200: '#d9bbfa',\n    250: '#cdabf4',\n    300: '#c29cee',\n    350: '#b58de6',\n    400: '#a97ede',\n    450: '#9c70d4',\n    500: '#8f62cb',\n    550: '#8254c0',\n    600: '#7547b5',\n    650: '#683aa9',\n    700: '#5a2d9d',\n    750: '#4d2091',\n    800: '#3f1384',\n    850: '#310477',\n    900: '#250656',\n    950: '#19072d'\n  },\n  fuchsia: {\n    50: '#fdecff',\n    100: '#fad8ff',\n    150: '#f6c4ff',\n    200: '#efb2fa',\n    250: '#e6a1f3',\n    300: '#db90eb',\n    350: '#d080e1',\n    400: '#c570d7',\n    450: '#b961cc',\n    500: '#ac52c1',\n    550: '#9f43b5',\n    600: '#9234a9',\n    650: '#85249c',\n    700: '#77128f',\n    750: '#680080',\n    800: '#57006a',\n    850: '#450056',\n    900: '#350042',\n    950: '#24002c'\n  },\n  pink: {\n    50: '#ffecf5',\n    100: '#ffd8ea',\n    150: '#ffc4e0',\n    200: '#ffaed5',\n    250: '#ff98cc',\n    300: '#fc82c1',\n    350: '#f170b5',\n    400: '#e560a8',\n    450: '#d94f9c',\n    500: '#cb3e8f',\n    550: '#bd2c82',\n    600: '#af1776',\n    650: '#9f0068',\n    700: '#8a005a',\n    750: '#75004c',\n    800: '#61003e',\n    850: '#4e0031',\n    900: '#3c0025',\n    950: '#290018'\n  },\n  rose: {\n    50: '#ffedee',\n    100: '#ffd9dd',\n    150: '#ffc5cc',\n    200: '#ffb1bb',\n    250: '#ff9baa',\n    300: '#ff8499',\n    350: '#ff6a89',\n    400: '#fd4c79',\n    450: '#ef396c',\n    500: '#e02360',\n    550: '#d00054',\n    600: '#ba004a',\n    650: '#a30040',\n    700: '#8e0037',\n    750: '#79002d',\n    800: '#650024',\n    850: '#51001c',\n    900: '#3e0013',\n    950: '#2b0007'\n  },\n  neutral: {\n    // Key color #707076\n    // Hue torsion 0.0Âº\n    // C*CP black 0.80, C*CP white 0.88\n    950: '#101012',\n    900: '#1b1b1e',\n    850: '#252529',\n    800: '#303034',\n    750: '#3b3b3f',\n    700: '#46464b',\n    650: '#525257',\n    600: '#5e5e64',\n    550: '#6a6a70',\n    500: '#77767d',\n    450: '#838389',\n    400: '#909096',\n    350: '#9d9da4',\n    300: '#ababb1',\n    250: '#b8b8be',\n    200: '#c6c6cc',\n    150: '#d4d4d9',\n    100: '#e2e2e7',\n    75: '#eaeaee',\n    50: '#f1f1f4',\n    25: '#f8f8fa'\n  },\n  primary: {\n    // Key color #00e0e0\n    // Hue torsion -73.5Âº\n    // C*CP black 1.0, C*CP white 1.0\n    950: '#110c2a',\n    900: '#101940',\n    850: '#0b2453',\n    800: '#003164',\n    750: '#003e70',\n    700: '#004b7c',\n    650: '#005887',\n    600: '#006693',\n    550: '#00749e',\n    500: '#0082a9',\n    450: '#0091b3',\n    400: '#00a0be',\n    350: '#00afc7',\n    300: '#00bed0',\n    250: '#00ced8',\n    200: '#00dedf',\n    150: '#3cede4',\n    100: '#69fae8',\n    50: '#b9ffee'\n  }\n};\n\nexport const tailwindConfig = ({\n  env = 'production',\n  root = './',\n  content = [],\n  extensions = []\n}: {\n  env?: string;\n  root?: string;\n  content?: string[];\n  extensions?: Partial<TailwindThemeConfig>[];\n}): TailwindConfig => ({\n  darkMode: 'class',\n  theme: {\n    fontFamily: {\n      body: ['Roboto FlexVariable', ...defaultConfig.theme.fontFamily.sans],\n      display: ['Space GroteskVariable', 'Roboto FlexVariable', ...defaultConfig.theme.fontFamily.sans],\n      mono: ['Fira CodeVariable', ...defaultConfig.theme.fontFamily.mono]\n    },\n    extend: merge(\n      {\n        colors: {\n          ...configPalettes,\n          slate: tailwindColors.slate,\n          gray: tailwindColors.gray,\n          zinc: tailwindColors.zinc,\n          stone: tailwindColors.stone,\n          success: configPalettes.emerald,\n          warning: configPalettes.amber,\n          error: configPalettes.rose,\n          info: configPalettes.cyan,\n          transparent: 'transparent',\n          current: 'currentColor',\n          white: '#ffffff',\n          black: '#000000'\n        },\n        fontSize: {\n          // Base size 16px\n          // Scale 1.125\n          xs: ['0.790rem', { lineHeight: '1rem' }],\n          sm: ['0.889rem', { lineHeight: '1.25rem' }],\n          base: ['1rem', { lineHeight: '1.5rem' }],\n          lg: ['1.125rem', { lineHeight: '1.75rem' }],\n          xl: ['1.266rem', { lineHeight: '1.75rem' }],\n          '2xl': ['1.424rem', { lineHeight: '2rem' }],\n          '3xl': ['1.602rem', { lineHeight: '2.25rem' }],\n          '4xl': ['1.802rem', { lineHeight: '2.5rem' }],\n          '5xl': ['2.027rem', { lineHeight: '2.5rem' }],\n          '6xl': ['2.281rem', { lineHeight: '2.5rem' }],\n          '7xl': ['2.566rem', { lineHeight: '2.75rem' }],\n          '8xl': ['2.887rem', { lineHeight: '3rem' }],\n          '9xl': ['3.247rem', { lineHeight: '3.25rem' }]\n        },\n        outlineWidth: {\n          3: '3px'\n        },\n        boxShadow: {\n          slider: '0 0 0 5px rgba(0, 0, 0, 0.3)'\n        },\n        keyframes: {\n          // Dropdown menu\n          'scale-in': {\n            '0%': { opacity: '0', transform: 'scale(0)' },\n            '100%': { opacity: '1', transform: 'scale(1)' }\n          },\n          'slide-down': {\n            '0%': { opacity: '0', transform: 'translateY(-10px)' },\n            '100%': { opacity: '1', transform: 'translateY(0)' }\n          },\n          'slide-up': {\n            '0%': { opacity: '0', transform: 'translateY(10px)' },\n            '100%': { opacity: '1', transform: 'translateY(0)' }\n          },\n          // Tooltip\n          'slide-up-fade': {\n            '0%': { opacity: '0', transform: 'translateY(2px)' },\n            '100%': { opacity: '1', transform: 'translateY(0)' }\n          },\n          'slide-right-fade': {\n            '0%': { opacity: '0', transform: 'translateX(-2px)' },\n            '100%': { opacity: '1', transform: 'translateX(0)' }\n          },\n          'slide-down-fade': {\n            '0%': { opacity: '0', transform: 'translateY(-2px)' },\n            '100%': { opacity: '1', transform: 'translateY(0)' }\n          },\n          'slide-left-fade': {\n            '0%': { opacity: '0', transform: 'translateX(2px)' },\n            '100%': { opacity: '1', transform: 'translateX(0)' }\n          },\n          // Navigation menu\n          'enter-from-right': {\n            '0%': { transform: 'translateX(200px)', opacity: '0' },\n            '100%': { transform: 'translateX(0)', opacity: '1' }\n          },\n          'enter-from-left': {\n            '0%': { transform: 'translateX(-200px)', opacity: '0' },\n            '100%': { transform: 'translateX(0)', opacity: '1' }\n          },\n          'exit-to-right': {\n            '0%': { transform: 'translateX(0)', opacity: '1' },\n            '100%': { transform: 'translateX(200px)', opacity: '0' }\n          },\n          'exit-to-left': {\n            '0%': { transform: 'translateX(0)', opacity: '1' },\n            '100%': {\n              transform: 'translateX(-200px)',\n              opacity: '0'\n            }\n          },\n          'scale-in-content': {\n            '0%': {\n              transform: 'rotateX(-30deg) scale(0.9)',\n              opacity: '0'\n            },\n            '100%': {\n              transform: 'rotateX(0deg) scale(1)',\n              opacity: '1'\n            }\n          },\n          'scale-out-content': {\n            '0%': {\n              transform: 'rotateX(0deg) scale(1)',\n              opacity: '1'\n            },\n            '100%': {\n              transform: 'rotateX(-10deg) scale(0.95)',\n              opacity: '0'\n            }\n          },\n          'fade-in': {\n            '0%': { opacity: '0' },\n            '100%': { opacity: '1' }\n          },\n          'fade-out': {\n            '0%': { opacity: '1' },\n            '100%': { opacity: '0' }\n          },\n          // Toast\n          'toast-hide': {\n            '0%': { opacity: '1' },\n            '100%': { opacity: '0' }\n          },\n          'toast-slide-in-right': {\n            '0%': { transform: 'translateX(calc(100% + 1rem))' },\n            '100%': { transform: 'translateX(0)' }\n          },\n          'toast-slide-in-bottom': {\n            '0%': { transform: 'translateY(calc(100% + 1rem))' },\n            '100%': { transform: 'translateY(0)' }\n          },\n          'toast-swipe-out': {\n            '0%': {\n              transform: 'translateX(var(--radix-toast-swipe-end-x))'\n            },\n            '100%': {\n              transform: 'translateX(calc(100% + 1rem))'\n            }\n          },\n          // Shimmer\n          'shimmer-loop': {\n            '100%': {\n              transform: 'translateX(100%)'\n            }\n          }\n        },\n        animation: {\n          // Dropdown menu\n          'scale-in': 'scale-in 0.2s ease-in-out',\n          'slide-down': 'slide-down 0.6s cubic-bezier(0.16, 1, 0.3, 1)',\n          'slide-up': 'slide-up 0.6s cubic-bezier(0.16, 1, 0.3, 1)',\n          // Tooltip\n          'slide-up-fade': 'slide-up-fade 0.4s cubic-bezier(0.16, 1, 0.3, 1)',\n          'slide-right-fade': 'slide-right-fade 0.4s cubic-bezier(0.16, 1, 0.3, 1)',\n          'slide-down-fade': 'slide-down-fade 0.4s cubic-bezier(0.16, 1, 0.3, 1)',\n          'slide-left-fade': 'slide-left-fade 0.4s cubic-bezier(0.16, 1, 0.3, 1)',\n          // Navigation menu\n          'enter-from-right': 'enter-from-right 0.25s ease',\n          'enter-from-left': 'enter-from-left 0.25s ease',\n          'exit-to-right': 'exit-to-right 0.25s ease',\n          'exit-to-left': 'exit-to-left 0.25s ease',\n          'scale-in-content': 'scale-in-content 0.2s ease',\n          'scale-out-content': 'scale-out-content 0.2s ease',\n          'fade-in': 'fade-in 0.2s ease',\n          'fade-out': 'fade-out 0.2s ease',\n          // Toast\n          'toast-hide': 'toast-hide 100ms ease-in forwards',\n          'toast-slide-in-right': 'toast-slide-in-right 150ms cubic-bezier(0.16, 1, 0.3, 1)',\n          'toast-slide-in-bottom': 'toast-slide-in-bottom 150ms cubic-bezier(0.16, 1, 0.3, 1)',\n          'toast-swipe-out': 'toast-swipe-out 100ms ease-out forwards',\n          // Shimmer\n          shimmer: 'shimmer-loop 2s infinite'\n        }\n      },\n      ...extensions\n    )\n  },\n  plugins: [tailwindcssLogical, tailwindcssForms, tailwindcssRadix()],\n  ...(env === 'development' && { mode: 'jit' }),\n  content,\n  future: {\n    hoverOnlyWhenSupported: true\n  }\n});\n"],
  "mappings": "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;EACAC,OAAO;IACL,IAAI;IACJ,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;EACP;EACAC,SAAS;IACP,IAAI;IACJ,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;EACP;EACAC,MAAM;IACJ,IAAI;IACJ,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;EACP;EACAC,MAAM;IACJ,IAAI;IACJ,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;EACP;EACAC,KAAK;IACH,IAAI;IACJ,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;EACP;EACAC,MAAM;IACJ,IAAI;IACJ,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;EACP;EACAC,QAAQ;IACN,IAAI;IACJ,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;EACP;EACAC,QAAQ;IACN,IAAI;IACJ,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;EACP;EACAC,QAAQ;IACN,IAAI;IACJ,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;EACP;EACAC,SAAS;IACP,IAAI;IACJ,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;EACP;EACAC,MAAM;IACJ,IAAI;IACJ,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;EACP;EACAC,MAAM;IACJ,IAAI;IACJ,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IA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",
  "names": ["useTranslation", "Trans", "React", "alea", "useMemo", "Alea", "prng", "randomString", "n", "toString", "slice", "useId", "namespace", "useContext", "useDensityContext", "propsDensity", "density", "useContext", "DensityContext", "useRef", "useEffect", "useForwardedRef", "ref", "innerRef", "current", "useContext", "useContext", "useThemeContext", "useContext", "ThemeContext", "useElevationContext", "useContext", "ElevationContext", "useButtonShadow", "propsElevation", "elevation", "themeVariant", "useThemeContext", "resolvedElevation", "useEffect", "useRef", "useState", "useIsFocused", "inputRef", "isFocused", "setIsFocused", "undefined", "isFocusedRef", "current", "input", "onFocus", "onBlur", "addEventListener", "document", "activeElement", "removeEventListener", "useEffect", "useState", "breakpointMediaQueries", "sm", "md", "lg", "xl", "useMediaQuery", "query", "options", "ssr", "fallback", "queries", "Array", "isArray", "map", "fallbackValues", "filter", "v", "value", "setValue", "index", "media", "matches", "document", "defaultView", "matchMedia", "mql", "handler", "evt", "prev", "slice", "item", "forEach", "addListener", "addEventListener", "removeListener", "removeEventListener", "useContext", "i18Next", "React", "useEffect", "createContext", "useState", "Suspense", "initReactI18next", "React", "extendTailwindMerge", "validators", "mergeConfigs", "validators", "withLogical", "prevConfig", "getLength", "isLength", "getLengthWithAuto", "getLengthWithEmpty", "getAny", "isAny", "getRounded", "isArbitraryLength", "classGroups", "float", "clear", "resize", "text", "bs", "is", "mlb", "mli", "mbs", "mbe", "mis", "mie", "plb", "pli", "pbs", "pbe", "pis", "pie", "conflictingClassGroups", "p", "m", "overscroll", "rounded", "border", "mx", "extendTailwindMerge", "classGroups", "fontFamily", "fontWeight", "validators", "isArbitraryNumber", "withLogical", "hasIosKeyboard", "navigator", "userAgent", "match", "arrayMove", "arraySwap", "sizeMap", "Map", "Loading", "size", "color", "label", "slots", "labelId", "useId", "sizeClassName", "get", "div", "root", "className", "mx", "role", "aria-labelledby", "svg", "viewBox", "fill", "xmlns", "path", "d", "span", "id", "initialLng", "initialNs", "resources", "i18Next", "use", "initReactI18next", "init", "lng", "defaultNS", "interpolation", "escapeValue", "TranslationsContext", "createContext", "appNs", "TranslationsProvider", "fallback", "React", "Loading", "label", "resourceExtensions", "children", "loaded", "setLoaded", "useState", "useEffect", "length", "forEach", "resource", "Object", "keys", "language", "ns", "addResourceBundle", "Provider", "value", "Suspense", "useTranslationsContext", "useContext", "TranslationsContext", "defaultActive", "mx", "sideInset", "be", "osActive", "side", "coarseBlockSize", "coarseTextPadding", "coarseButtonPadding", "defaultCoarse", "buttonCoarse", "fineBlockSize", "fineTextPadding", "fineButtonPadding", "defaultFine", "buttonFine", "densityBlockSize", "density", "defaultDisabled", "dataDisabled", "defaultFocus", "subduedFocus", "osFocus", "themeVariantFocus", "themeVariant", "themeVariantSubduedFocus", "_themeVariant", "focus", "variant", "disabled", "staticFocus", "elevationClassNameMap", "Map", "defaultGroup", "elevation", "rounding", "spacing", "mx", "get", "hover", "disabled", "themeVariant", "defaultInlineSeparator", "defaultBlockSeparator", "defaultShimmer", "strongShimmer", "sizeWidthMap", "Map", "sizeHeightMap", "getSizeHeight", "get", "bind", "getSizeWidth", "getSize", "size", "mx", "defaultPlaceholder", "defaultDescription", "primaryDescription", "defaultTooltip", "successText", "infoText", "warningText", "errorText", "valenceColorText", "valence", "undefined", "neutralInputValence", "successInputValence", "infoInputValence", "warningInputValence", "errorInputValence", "inputValence", "themeVariant", "neutralAlertColors", "successAlertColors", "infoAlertColors", "warningAlertColors", "errorAlertColors", "alertValence", "defaultInput", "props", "themeVariant", "disabled", "validationValence", "mx", "density", "defaultFine", "defaultCoarse", "focus", "variant", "defaultPlaceholder", "hover", "inputValence", "defaultDisabled", "subduedInput", "fineBlockSize", "coarseBlockSize", "staticInput", "focused", "staticFocus", "_extends", "Alert", "title", "children", "assertive", "valence", "slots", "labelId", "useId", "shadow", "useButtonShadow", "React", "div", "root", "role", "aria-labelledby", "className", "mx", "alertValence", "p", "id", "Circle", "Moon", "AvatarPrimitive", "PortalPrimitive", "toSvg", "React", "cloneElement", "forwardRef", "useMemo", "_extends", "Avatar", "forwardRef", "mediaSrc", "mediaAlt", "fallbackValue", "label", "labelId", "propsLabelId", "descriptionId", "propsDescriptionId", "description", "variant", "status", "size", "slots", "ref", "useId", "maskId", "svgId", "fallbackSrc", "useMemo", "encodeURIComponent", "toSvg", "padding", "imageSizeNumber", "statusIconSize", "maskSize", "maskCenter", "React", "Root", "root", "className", "mx", "getSize", "aria-labelledby", "svg", "viewBox", "width", "height", "id", "defs", "mask", "circle", "fill", "cx", "cy", "r", "rect", "Image", "asChild", "image", "href", "Fallback", "delayMs", "fallback", "Circle", "weight", "Moon", "mirrored", "div", "role", "labels", "span", "cloneElement", "React", "forwardRef", "primaryAppButtonColors", "defaultAppButtonColors", "defaultOsButtonColors", "ghostAppButtonColors", "buttonStyles", "props", "themeVariant", "isOsTheme", "resolvedVariant", "variant", "mx", "density", "buttonFine", "buttonCoarse", "hover", "disabled", "focus", "defaultDisabled", "osActive", "defaultActive", "_extends", "Button", "forwardRef", "children", "density", "propsDensity", "elevation", "variant", "rootSlot", "ref", "themeVariant", "useThemeContext", "shadow", "useButtonShadow", "useDensityContext", "React", "button", "className", "mx", "buttonStyles", "disabled", "React", "React", "createContext", "ElevationContext", "elevation", "ElevationProvider", "children", "Provider", "value", "_extends", "ButtonGroup", "children", "divProps", "shadow", "useButtonShadow", "React", "div", "role", "className", "mx", "ElevationProvider", "elevation", "Check", "CheckboxPrimitive", "React", "_extends", "Checkbox", "props", "themeVariant", "useThemeContext", "defaultChecked", "checked", "onCheckedChange", "className", "React", "Root", "id", "labelId", "mx", "getSize", "themeVariantFocus", "Indicator", "Check", "weight", "React", "_extends", "CompoundButton", "children", "description", "before", "after", "variant", "elevation", "slots", "buttonProps", "labelId", "useId", "descriptionId", "themeVariant", "useThemeContext", "shadow", "useButtonShadow", "React", "button", "root", "className", "mx", "buttonStyles", "aria-labelledby", "div", "role", "middle", "p", "label", "id", "primaryDescription", "defaultDescription", "React", "createContext", "DensityContext", "density", "DensityProvider", "children", "Provider", "value", "Transition", "X", "DialogPrimitive", "useControllableState", "React", "Fragment", "TooltipPrimitive", "React", "forwardRef", "_extends", "TooltipRoot", "Root", "TooltipContent", "forwardRef", "children", "className", "props", "forwardedRef", "React", "Portal", "Content", "forceMount", "mx", "defaultTooltip", "ref", "Arrow", "TooltipTrigger", "Trigger", "defaultOverlay", "_extends", "Dialog", "title", "titleVisuallyHidden", "description", "openTrigger", "closeTriggers", "children", "closeLabel", "mountAsSibling", "open", "propsOpen", "defaultOpen", "propsDefaultOpen", "onOpenChange", "propsOnOpenChange", "slots", "setOpen", "useControllableState", "prop", "defaultProp", "onChange", "dialogOverlayAndContent", "React", "Transition", "Root", "show", "Child", "as", "Fragment", "enter", "enterFrom", "enterTo", "leave", "leaveFrom", "leaveTo", "Overlay", "forceMount", "overlay", "className", "mx", "defaultOverlay", "Content", "onOpenAutoFocus", "event", "preventDefault", "onCloseAutoFocus", "content", "defaultFocus", "ElevationProvider", "elevation", "Title", "tabIndex", "Description", "defaultDescription", "TooltipRoot", "TooltipContent", "TooltipTrigger", "asChild", "Close", "hover", "close", "X", "getSize", "closeIcon", "div", "map", "closeTrigger", "key", "Trigger", "Portal", "DropdownMenuPrimitive", "React", "forwardRef", "defaultDropdownMenuItem", "themeVariant", "mx", "themeVariantSubduedFocus", "_extends", "DropdownMenuItem", "forwardRef", "className", "props", "forwardedRef", "themeVariant", "useThemeContext", "React", "Item", "ref", "mx", "defaultDropdownMenuItem", "dataDisabled", "DropdownMenuSeparator", "Separator", "DropdownMenuLabel", "Label", "DropdownMenuCheckboxItem", "CheckboxItem", "DropdownMenuSubTrigger", "SubTrigger", "DropdownMenuSubContent", "Portal", "SubContent", "DropdownMenuItemIndicator", "ItemIndicator", "DropdownMenuSub", "Sub", "DropdownMenu", "trigger", "children", "slots", "Root", "root", "Trigger", "asChild", "Content", "align", "sideOffset", "content", "React", "createElement", "levelClassNameMap", "Map", "Heading", "level", "rootSlot", "resolvedLevel", "createElement", "className", "mx", "get", "_extends", "Group", "elevation", "children", "label", "labelVisuallyHidden", "rootSlot", "labelId", "useId", "React", "div", "role", "aria-labelledby", "className", "mx", "defaultGroup", "Heading", "id", "ElevationProvider", "DndContext", "restrictToVerticalAxis", "SortableContext", "useSortable", "CSS", "CaretDown", "CaretRight", "DotsSixVertical", "Collapsible", "useComposedRefs", "createContextScope", "Primitive", "Slot", "useControllableState", "React", "forwardRef", "defaultListItemEndcap", "density", "mx", "getSize", "defaultListItemHeading", "densityBlockSize", "defaultListItemMainContent", "collapsible", "_extends", "LIST_NAME", "LIST_ITEM_NAME", "createListContext", "createListScope", "createContextScope", "ListProvider", "useListContext", "useListDensity", "density", "variant", "contextDensity", "useDensityContext", "List", "forwardRef", "props", "forwardedRef", "__listScope", "selectable", "collapsible", "toggleOpenLabel", "children", "slots", "ListRoot", "Primitive", "ol", "ul", "React", "role", "root", "aria-labelledby", "labelId", "ref", "DensityProvider", "scope", "DndContext", "onDragEnd", "modifiers", "restrictToVerticalAxis", "SortableContext", "items", "listItemIds", "displayName", "createListItemContext", "createListItemScope", "ListItemProvider", "useListItemContext", "ListItemEndcap", "className", "asChild", "Root", "Slot", "mx", "defaultListItemEndcap", "ListItemHeading", "headingId", "id", "defaultListItemHeading", "ListItemDragHandle", "dragHandleIconSlot", "themeVariant", "useThemeContext", "div", "themeVariantFocus", "DotsSixVertical", "getSize", "ListItemOpenTrigger", "openTriggerIconSlot", "open", "iconProps", "weight", "Icon", "CaretDown", "CaretRight", "Trigger", "fineBlockSize", "coarseBlockSize", "span", "PureListItem", "selected", "propsSelected", "defaultSelected", "onSelectedChange", "listCollapsible", "draggable", "setSelected", "useControllableState", "prop", "defaultProp", "onChange", "setOpen", "defaultOpen", "onOpenChange", "useId", "listItem", "li", "dragHandle", "dragHandleIcon", "openTrigger", "openTriggerIcon", "selectableEndcap", "Checkbox", "selectableCheckbox", "checked", "onCheckedChange", "mainContent", "defaultListItemMainContent", "ListItemCollapsibleContent", "Content", "DraggableListItem", "attributes", "listeners", "setNodeRef", "transform", "transition", "useSortable", "useComposedRefs", "style", "CSS", "Transform", "toString", "ListItem", "listItemId", "React", "forwardRef", "CodeInput", "getSegmentCssWidth", "React", "forwardRef", "useCallback", "_extends", "bareInputStyleProps", "padding", "spacing", "fontFamily", "BarePinInput", "forwardRef", "validationMessage", "validationValence", "variant", "elevation", "density", "propsDensity", "inputSlot", "ref", "width", "getSegmentCssWidth", "inputRef", "useForwardedRef", "inputFocused", "useIsFocused", "shadow", "useButtonShadow", "useDensityContext", "disabled", "renderSegment", "useCallback", "state", "index", "React", "div", "key", "className", "mx", "staticInput", "focused", "data-state", "style", "height", "CodeInput", "spellCheck", "React", "forwardRef", "_extends", "sizeMap", "md", "lg", "pin", "textarea", "BareTextInput", "forwardRef", "validationValence", "validationMessage", "variant", "elevation", "density", "propsDensity", "size", "inputSlot", "forwardedRef", "themeVariant", "useThemeContext", "shadow", "useButtonShadow", "useDensityContext", "React", "input", "ref", "className", "mx", "subduedInput", "defaultInput", "disabled", "React", "forwardRef", "_extends", "BareTextareaInput", "forwardRef", "validationValence", "validationMessage", "elevation", "density", "propsDensity", "variant", "inputSlot", "forwardedRef", "themeVariant", "useThemeContext", "shadow", "useButtonShadow", "useDensityContext", "React", "textarea", "ref", "className", "mx", "subduedInput", "defaultInput", "disabled", "_extends", "Input", "forwardRef", "label", "labelVisuallyHidden", "description", "descriptionVisuallyHidden", "value", "defaultValue", "onChange", "disabled", "placeholder", "size", "length", "validationMessage", "validationValence", "variant", "elevation", "density", "slots", "forwardedRef", "internalInputId", "useId", "descriptionId", "validationId", "hasIosKeyboard", "useThemeContext", "inputId", "input", "id", "isInvalid", "autoFocus", "inputSlot", "bareInputBaseProps", "required", "bareInput", "React", "BarePinInput", "ref", "BareTextareaInput", "BareTextInput", "div", "role", "className", "root", "htmlFor", "mx", "p", "span", "valenceColorText", "validation", "defaultDescription", "NavigationMenuPrimitive", "React", "forwardRef", "_extends", "NavMenuInvokerItem", "forwardRef", "content", "children", "active", "ref", "React", "Item", "Trigger", "className", "mx", "primaryAppButtonColors", "defaultAppButtonColors", "defaultFocus", "hover", "Content", "NavMenuLinkItem", "triggerLinkProps", "asChild", "Link", "NavMenuTooltipLinkItem", "tooltip", "TooltipRoot", "TooltipContent", "TooltipTrigger", "NavMenuLink", "NavMenuSeparatorItem", "_props", "span", "role", "defaultInlineSeparator", "isTooltipLinkItem", "o", "isLinkItem", "isSeparator", "NavMenu", "items", "slots", "variant", "shadow", "useButtonShadow", "Root", "root", "orientation", "List", "list", "map", "item", "i", "key", "Indicator", "indicator", "div", "indicatorIcon", "style", "perspective", "Viewport", "viewport", "X", "PopoverPrimitive", "Button", "ToolbarButtonItem", "React", "useCallback", "useState", "_extends", "Popover", "openTrigger", "children", "closeLabel", "initiallyOpen", "mountAsSibling", "triggerIsInToolbar", "slots", "isOpen", "setIsOpen", "useState", "onKeyUp", "useCallback", "e", "_a", "_b", "keyUpId", "document", "activeElement", "dataset", "keyupid", "key", "trigger", "popoverContent", "React", "Content", "align", "content", "className", "mx", "defaultFocus", "Arrow", "arrow", "Close", "close", "hover", "aria-label", "data-keyupid", "X", "closeIcon", "getSize", "Trigger", "defaultActive", "Root", "open", "onOpenChange", "ToolbarButtonItem", "asChild", "Portal", "QrCode", "QrCodeIcon", "CopySimple", "QRCodeSVG", "React", "useCallback", "_extends", "FullQrCode", "value", "label", "size", "density", "elevation", "slots", "labelId", "useId", "copyValue", "useCallback", "navigator", "clipboard", "writeText", "React", "TooltipRoot", "TooltipContent", "tooltipContent", "TooltipTrigger", "asChild", "Button", "button", "className", "mx", "getSize", "onClick", "QRCodeSVG", "includeMargin", "role", "qrSvg", "div", "id", "CompactQrCode", "displayQrLabel", "copyLabel", "ButtonGroup", "span", "Popover", "openTrigger", "qrButton", "aria-labelledby", "QrCodeIcon", "content", "qrTooltipContent", "side", "trigger", "copyButton", "CopySimple", "QrCode", "React", "_extends", "valenceColorMap", "neutral", "success", "info", "warning", "error", "Tag", "children", "valence", "rootSlot", "React", "span", "className", "mx", "ToastPrimitive", "React", "cloneElement", "useState", "_extends", "Toast", "title", "titleVisuallyHidden", "description", "openTrigger", "closeTrigger", "actionTriggers", "initiallyOpen", "slots", "isOpen", "setIsOpen", "useState", "React", "Button", "onClick", "cloneElement", "Root", "open", "onOpenChange", "root", "className", "mx", "defaultFocus", "ElevationProvider", "elevation", "div", "role", "heading", "headingInner", "Title", "Description", "defaultDescription", "actions", "map", "altText", "trigger", "index", "Action", "key", "asChild", "Close", "Provider", "ToastProvider", "Viewport", "ToastViewport", "TooltipProvider", "React", "createContext", "_extends", "ThemeContext", "createContext", "themeVariant", "themeMode", "hasIosKeyboard", "ThemeProvider", "children", "tooltipProviderProps", "toastProviderProps", "toastViewportProps", "fallback", "resourceExtensions", "appNs", "rootElevation", "rootDensity", "React", "Provider", "value", "TranslationsProvider", "ToastProvider", "TooltipProvider", "delayDuration", "skipDelayDuration", "ElevationProvider", "elevation", "DensityProvider", "density", "ToastViewport", "className", "mx", "themeVariantFocus", "React", "React", "forwardRef", "_extends", "TreeRoot", "props", "React", "List", "collapsible", "slots", "root", "role", "TreeBranch", "forwardRef", "__listScope", "forwardedRef", "headingId", "useListItemContext", "LIST_ITEM_NAME", "labelId", "ref", "TreeItem", "ListItem", "TreeItemHeading", "ListItemHeading", "TreeItemBody", "ListItemCollapsibleContent", "_extends", "isScalar", "data", "Array", "isArray", "createKey", "key", "prefix", "undefined", "JsonTreeBranch", "keys", "from", "Object", "React", "map", "value", "id", "String", "valueIsScalar", "TreeItem", "collapsible", "TreeItemHeading", "className", "TreeItemBody", "asChild", "TreeBranch", "JsonTree", "props", "TreeRoot", "density", "CaretDown", "CaretRight", "React", "useState", "isScalar", "data", "Array", "isArray", "createKey", "key", "prefix", "undefined", "mapJsonToHierarchy", "Object", "values", "map", "value", "i", "String", "item", "id", "title", "items", "entries", "TreeView", "slots", "onSelect", "selected", "expanded", "openMap", "setOpenMap", "useState", "reduce", "handleToggle", "handleSelection", "Item", "depth", "open", "sub", "length", "Element", "Icon", "React", "div", "className", "mx", "root", "onClick", "style", "marginLeft", "width", "CaretDown", "getSize", "CaretRight", "lineHeight", "span", "CaretDown", "CaretUp", "Check", "SelectPrimitive", "React", "_extends", "Item", "props", "className", "children", "restProps", "React", "mx", "ItemText", "ItemIndicator", "Check", "Select", "label", "placeholder", "rest", "Root", "Trigger", "asChild", "aria-label", "Button", "Value", "Icon", "CaretDown", "Content", "ScrollUpButton", "div", "CaretUp", "Viewport", "ScrollDownButton", "Group", "X", "React", "useState", "Searchbar", "slots", "onSearch", "text", "setText", "useState", "handleChange", "handleReset", "React", "div", "className", "mx", "root", "Input", "label", "labelVisuallyHidden", "placeholder", "variant", "input", "onKeyDown", "key", "spellCheck", "value", "onChange", "target", "button", "onClick", "X", "tailwindcssForms", "merge", "tailwindcssLogical", "tailwindcssRadix", "tailwindColors", "defaultConfig", "configPalettes", "red", "orange", "amber", "yellow", "lime", "green", "emerald", "teal", "cyan", "sky", "blue", "indigo", "violet", "purple", "fuchsia", "pink", "rose", "neutral", "primary", "tailwindConfig", "env", "root", "content", "extensions", "darkMode", "theme", "fontFamily", "body", "sans", "display", "mono", "extend", "colors", "slate", "gray", "zinc", "stone", "success", "warning", "error", "info", "transparent", "current", "white", "black", "fontSize", "xs", "lineHeight", "sm", "base", "lg", "xl", "outlineWidth", "boxShadow", "slider", "keyframes", "opacity", "transform", "animation", "shimmer", "plugins", "mode", "future", "hoverOnlyWhenSupported"]
}
