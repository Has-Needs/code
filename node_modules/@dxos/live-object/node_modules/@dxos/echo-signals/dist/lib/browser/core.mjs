import {
  registerSignalsRuntime
} from "./chunk-AAIHXYHY.mjs";

// packages/core/echo/echo-signals/src/core.ts
import { signal, batch, effect, untracked } from "@preact/signals-core";
var registered = false;
var registerSignalsRuntime2 = () => {
  if (registered) {
    return false;
  }
  registerSignalsRuntime({
    createSignal: (debugInfo) => {
      const thisSignal = signal({});
      thisSignal.__debugInfo = debugInfo;
      return {
        notifyRead: () => {
          const _ = thisSignal.value;
        },
        notifyWrite: () => {
          thisSignal.value = {};
        }
      };
    },
    batch,
    untracked
  });
  registered = true;
  return true;
};
var scheduledEffect = (subscribeTo, exec) => {
  return effect(() => {
    const data = subscribeTo();
    setTimeout(() => exec(data));
  });
};
export {
  registerSignalsRuntime2 as registerSignalsRuntime,
  scheduledEffect
};
//# sourceMappingURL=core.mjs.map
