//
// Copyright 2020 DXOS.org
//
import { anySubstitutions, structSubstitutions, timestampSubstitutions } from '@dxos/codec-protobuf';
import { PublicKey } from '@dxos/keys';
import { Timeframe } from '@dxos/timeframe';
export const substitutions = {
    'dxos.keys.PublicKey': {
        encode: (value) => ({ data: value.asUint8Array() }),
        decode: (value) => PublicKey.from(value.data),
    },
    // TODO(dmaretskyi): Shouldn't be substituted to PublicKey.
    'dxos.keys.PrivateKey': {
        encode: (value) => ({ data: new Uint8Array(value) }),
        decode: (value) => PublicKey.from(new Uint8Array(value.data)).asBuffer(),
    },
    'dxos.echo.timeframe.TimeframeVector': {
        encode: (timeframe) => ({
            frames: timeframe.frames().map(([feedKey, seq]) => ({ feedKey: feedKey.asUint8Array(), seq })),
        }),
        decode: (vector) => new Timeframe((vector.frames ?? [])
            .filter((frame) => frame.feedKey != null && frame.seq != null)
            .map((frame) => [PublicKey.from(frame.feedKey), frame.seq])),
    },
};
export default {
    ...anySubstitutions,
    ...structSubstitutions,
    ...substitutions,
    ...timestampSubstitutions,
};
//# sourceMappingURL=substitutions.js.map