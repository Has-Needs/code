import type { RequestOptions } from "@dxos/codec-protobuf";
import substitutions from "../../../../substitutions.js";
/**
 * Defined in:
 *   {@link file://./../../../../dxos/mesh/teleport/control.proto}
 */
export interface RegisterExtensionRequest {
    /**
     * Must not contain slashes: /[\w_.]+/. Example: `dxos.mesh.teleport.control`.
     */
    name: string;
}
/**
 * Defined in:
 *   {@link file://./../../../../dxos/mesh/teleport/control.proto}
 */
export interface ControlHeartbeatRequest {
    requestTimestamp: ReturnType<(typeof substitutions)["google.protobuf.Timestamp"]["decode"]>;
}
/**
 * Defined in:
 *   {@link file://./../../../../dxos/mesh/teleport/control.proto}
 */
export interface ControlHeartbeatResponse {
    requestTimestamp: ReturnType<(typeof substitutions)["google.protobuf.Timestamp"]["decode"]>;
}
/**
 * Controls the lifycycle of the teleport session and its exentsions.
 *
 * Defined in:
 *   {@link file://./../../../../dxos/mesh/teleport/control.proto}
 */
export interface ControlService {
    registerExtension: (request: RegisterExtensionRequest, options?: RequestOptions) => Promise<void>;
    heartbeat: (request: ControlHeartbeatRequest, options?: RequestOptions) => Promise<ControlHeartbeatResponse>;
}
//# sourceMappingURL=control.d.ts.map