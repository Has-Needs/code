//
// Copyright 2022 DXOS.org
//
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_protobuf_any, file_google_protobuf_empty, file_google_protobuf_struct, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
/**
 * Describes the file dxos/mesh/signal.proto.
 */
export const file_dxos_mesh_signal = /*@__PURE__*/ fileDesc("ChZkeG9zL21lc2gvc2lnbmFsLnByb3RvEhBkeG9zLm1lc2guc2lnbmFsImcKC0pvaW5SZXF1ZXN0Eg0KBXN3YXJtGAEgASgMEgwKBHBlZXIYAiABKAwSLgoIbWV0YWRhdGEYAyABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0SACIAQFCCwoJX21ldGFkYXRhIpABCgdNZXNzYWdlEg4KBmF1dGhvchgBIAEoDBIRCglyZWNpcGllbnQYAiABKAwSJQoHcGF5bG9hZBgDIAEoCzIULmdvb2dsZS5wcm90b2J1Zi5BbnkSLgoIbWV0YWRhdGEYBCABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0SACIAQFCCwoJX21ldGFkYXRhIiAKEFJlY2VwdGlvblJlcXVlc3QSDAoEcGVlchgBIAEoDCL0AgoKU3dhcm1FdmVudBJECg5wZWVyX2F2YWlsYWJsZRgBIAEoCzIqLmR4b3MubWVzaC5zaWduYWwuU3dhcm1FdmVudC5QZWVyQXZhaWxhYmxlSAASOgoJcGVlcl9sZWZ0GAIgASgLMiUuZHhvcy5tZXNoLnNpZ25hbC5Td2FybUV2ZW50LlBlZXJMZWZ0SAAawAEKDVBlZXJBdmFpbGFibGUSDAoEcGVlchgBIAEoDBIpCgVzaW5jZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLgoFdW50aWwYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wSACIAQESIgoVYW5ub3VuY2VfYmFja190b19ob3N0GAQgASgMSAGIAQFCCAoGX3VudGlsQhgKFl9hbm5vdW5jZV9iYWNrX3RvX2hvc3QaGAoIUGVlckxlZnQSDAoEcGVlchgBIAEoDEIHCgVldmVudCK6AQoJSG9zdEV2ZW50EkEKDWFubm91bmNlX2JhY2sYASABKAsyKC5keG9zLm1lc2guc2lnbmFsLkhvc3RFdmVudC5Bbm5vdW5jZUJhY2tIABphCgxBbm5vdW5jZUJhY2sSDQoFc3dhcm0YASABKAwSQgoOcGVlcl9hdmFpbGFibGUYAiABKAsyKi5keG9zLm1lc2guc2lnbmFsLlN3YXJtRXZlbnQuUGVlckF2YWlsYWJsZUIHCgVldmVudCJCCglQZWVyRXZlbnQSLAoHbWVzc2FnZRgBIAEoCzIZLmR4b3MubWVzaC5zaWduYWwuTWVzc2FnZUgAQgcKBWV2ZW50KmcKC1NpZ25hbFN0YXRlEg4KCkNPTk5FQ1RJTkcQABIQCgxSRUNPTk5FQ1RJTkcQARINCglDT05ORUNURUQQAhIQCgxESVNDT05ORUNURUQQAxIJCgVFUlJPUhAEEgoKBkNMT1NFRBAFMuUBCgZTaWduYWwSRQoESm9pbhIdLmR4b3MubWVzaC5zaWduYWwuSm9pblJlcXVlc3QaHC5keG9zLm1lc2guc2lnbmFsLlN3YXJtRXZlbnQwARJSCg9SZWNlaXZlTWVzc2FnZXMSIi5keG9zLm1lc2guc2lnbmFsLlJlY2VwdGlvblJlcXVlc3QaGS5keG9zLm1lc2guc2lnbmFsLk1lc3NhZ2UwARJACgtTZW5kTWVzc2FnZRIZLmR4b3MubWVzaC5zaWduYWwuTWVzc2FnZRoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eUIxWi9naXRodWIuY29tL2R4b3MvZHhvcy9wcm90by9kZWYvZHhvcy9tZXNoL3NpZ25hbGIGcHJvdG8z", [file_google_protobuf_any, file_google_protobuf_empty, file_google_protobuf_struct, file_google_protobuf_timestamp]);
/**
 * Describes the message dxos.mesh.signal.JoinRequest.
 * Use `create(JoinRequestSchema)` to create a new message.
 */
export const JoinRequestSchema = /*@__PURE__*/ messageDesc(file_dxos_mesh_signal, 0);
/**
 * Describes the message dxos.mesh.signal.Message.
 * Use `create(MessageSchema)` to create a new message.
 */
export const MessageSchema = /*@__PURE__*/ messageDesc(file_dxos_mesh_signal, 1);
/**
 * Describes the message dxos.mesh.signal.ReceptionRequest.
 * Use `create(ReceptionRequestSchema)` to create a new message.
 */
export const ReceptionRequestSchema = /*@__PURE__*/ messageDesc(file_dxos_mesh_signal, 2);
/**
 * Describes the message dxos.mesh.signal.SwarmEvent.
 * Use `create(SwarmEventSchema)` to create a new message.
 */
export const SwarmEventSchema = /*@__PURE__*/ messageDesc(file_dxos_mesh_signal, 3);
/**
 * Describes the message dxos.mesh.signal.SwarmEvent.PeerAvailable.
 * Use `create(SwarmEvent_PeerAvailableSchema)` to create a new message.
 */
export const SwarmEvent_PeerAvailableSchema = /*@__PURE__*/ messageDesc(file_dxos_mesh_signal, 3, 0);
/**
 * Describes the message dxos.mesh.signal.SwarmEvent.PeerLeft.
 * Use `create(SwarmEvent_PeerLeftSchema)` to create a new message.
 */
export const SwarmEvent_PeerLeftSchema = /*@__PURE__*/ messageDesc(file_dxos_mesh_signal, 3, 1);
/**
 * Describes the message dxos.mesh.signal.HostEvent.
 * Use `create(HostEventSchema)` to create a new message.
 */
export const HostEventSchema = /*@__PURE__*/ messageDesc(file_dxos_mesh_signal, 4);
/**
 * Describes the message dxos.mesh.signal.HostEvent.AnnounceBack.
 * Use `create(HostEvent_AnnounceBackSchema)` to create a new message.
 */
export const HostEvent_AnnounceBackSchema = /*@__PURE__*/ messageDesc(file_dxos_mesh_signal, 4, 0);
/**
 * Describes the message dxos.mesh.signal.PeerEvent.
 * Use `create(PeerEventSchema)` to create a new message.
 */
export const PeerEventSchema = /*@__PURE__*/ messageDesc(file_dxos_mesh_signal, 5);
/**
 * / @deprecated
 *
 * @generated from enum dxos.mesh.signal.SignalState
 */
export var SignalState;
(function (SignalState) {
    /**
     * / Connection is being established.
     *
     * @generated from enum value: CONNECTING = 0;
     */
    SignalState[SignalState["CONNECTING"] = 0] = "CONNECTING";
    /**
     * / Connection is being re-established.
     *
     * @generated from enum value: RECONNECTING = 1;
     */
    SignalState[SignalState["RECONNECTING"] = 1] = "RECONNECTING";
    /**
     * / Connected.
     *
     * @generated from enum value: CONNECTED = 2;
     */
    SignalState[SignalState["CONNECTED"] = 2] = "CONNECTED";
    /**
     * / Server terminated the connection. Socket will be reconnected.
     *
     * @generated from enum value: DISCONNECTED = 3;
     */
    SignalState[SignalState["DISCONNECTED"] = 3] = "DISCONNECTED";
    /**
     * / Server terminated the connection with an ERROR. Socket will be reconnected.
     *
     * @generated from enum value: ERROR = 4;
     */
    SignalState[SignalState["ERROR"] = 4] = "ERROR";
    /**
     * / Socket was closed.
     *
     * @generated from enum value: CLOSED = 5;
     */
    SignalState[SignalState["CLOSED"] = 5] = "CLOSED";
})(SignalState || (SignalState = {}));
/**
 * Describes the enum dxos.mesh.signal.SignalState.
 */
export const SignalStateSchema = /*@__PURE__*/ enumDesc(file_dxos_mesh_signal, 0);
/**
 * TOOD(burdon): Rename.
 * / @deprecated
 *
 * @generated from service dxos.mesh.signal.Signal
 */
export const Signal = /*@__PURE__*/ serviceDesc(file_dxos_mesh_signal, 0);
//# sourceMappingURL=signal_pb.js.map