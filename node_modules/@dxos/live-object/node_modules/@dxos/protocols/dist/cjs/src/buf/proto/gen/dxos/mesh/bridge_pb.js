"use strict";
//
// Copyright 2020 DXOS.org
//
Object.defineProperty(exports, "__esModule", { value: true });
exports.BridgeService = exports.ConnectionStateSchema = exports.ConnectionState = exports.StatsResponseSchema = exports.StatsRequestSchema = exports.DetailsResponseSchema = exports.DetailsRequestSchema = exports.CloseRequestSchema = exports.DataRequestSchema = exports.SignalRequestSchema = exports.ConnectionRequestSchema = exports.BridgeEvent_DataEventSchema = exports.BridgeEvent_SignalEventSchema = exports.BridgeEvent_ConnectionEventSchema = exports.BridgeEventSchema = exports.file_dxos_mesh_bridge = void 0;
const codegenv1_1 = require("@bufbuild/protobuf/codegenv1");
const keys_pb_js_1 = require("../keys_pb.js");
const swarm_pb_js_1 = require("./swarm_pb.js");
const wkt_1 = require("@bufbuild/protobuf/wkt");
/**
 * Describes the file dxos/mesh/bridge.proto.
 */
exports.file_dxos_mesh_bridge = (0, codegenv1_1.fileDesc)("ChZkeG9zL21lc2gvYnJpZGdlLnByb3RvEhBkeG9zLm1lc2guYnJpZGdlIooDCgtCcmlkZ2VFdmVudBJDCgpjb25uZWN0aW9uGAEgASgLMi0uZHhvcy5tZXNoLmJyaWRnZS5CcmlkZ2VFdmVudC5Db25uZWN0aW9uRXZlbnRIABI7CgZzaWduYWwYAiABKAsyKS5keG9zLm1lc2guYnJpZGdlLkJyaWRnZUV2ZW50LlNpZ25hbEV2ZW50SAASNwoEZGF0YRgDIAEoCzInLmR4b3MubWVzaC5icmlkZ2UuQnJpZGdlRXZlbnQuRGF0YUV2ZW50SAAaYQoPQ29ubmVjdGlvbkV2ZW50EjAKBXN0YXRlGAEgASgOMiEuZHhvcy5tZXNoLmJyaWRnZS5Db25uZWN0aW9uU3RhdGUSEgoFZXJyb3IYAiABKAlIAIgBAUIICgZfZXJyb3IaNwoLU2lnbmFsRXZlbnQSKAoHcGF5bG9hZBgBIAEoCzIXLmR4b3MubWVzaC5zd2FybS5TaWduYWwaHAoJRGF0YUV2ZW50Eg8KB3BheWxvYWQYASABKAxCBgoEdHlwZSKMAQoRQ29ubmVjdGlvblJlcXVlc3QSJgoIcHJveHlfaWQYASABKAsyFC5keG9zLmtleXMuUHVibGljS2V5EhEKCWluaXRpYXRvchgCIAEoCBIXCg9yZW1vdGVfcGVlcl9rZXkYAyABKAkSFAoMb3duX3BlZXJfa2V5GAQgASgJEg0KBXRvcGljGAUgASgJImAKDVNpZ25hbFJlcXVlc3QSJgoIcHJveHlfaWQYASABKAsyFC5keG9zLmtleXMuUHVibGljS2V5EicKBnNpZ25hbBgCIAEoCzIXLmR4b3MubWVzaC5zd2FybS5TaWduYWwiRgoLRGF0YVJlcXVlc3QSJgoIcHJveHlfaWQYASABKAsyFC5keG9zLmtleXMuUHVibGljS2V5Eg8KB3BheWxvYWQYAiABKAwiNgoMQ2xvc2VSZXF1ZXN0EiYKCHByb3h5X2lkGAEgASgLMhQuZHhvcy5rZXlzLlB1YmxpY0tleSI4Cg5EZXRhaWxzUmVxdWVzdBImCghwcm94eV9pZBgBIAEoCzIULmR4b3Mua2V5cy5QdWJsaWNLZXkiIgoPRGV0YWlsc1Jlc3BvbnNlEg8KB2RldGFpbHMYASABKAkiNgoMU3RhdHNSZXF1ZXN0EiYKCHByb3h5X2lkGAEgASgLMhQuZHhvcy5rZXlzLlB1YmxpY0tleSI3Cg1TdGF0c1Jlc3BvbnNlEiYKBXN0YXRzGAEgASgLMhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVjdCpJCg9Db25uZWN0aW9uU3RhdGUSCwoHSU5WQUxJRBAAEg4KCkNPTk5FQ1RJTkcQARINCglDT05ORUNURUQQAhIKCgZDTE9TRUQQAzLIAwoNQnJpZGdlU2VydmljZRJMCgRPcGVuEiMuZHhvcy5tZXNoLmJyaWRnZS5Db25uZWN0aW9uUmVxdWVzdBodLmR4b3MubWVzaC5icmlkZ2UuQnJpZGdlRXZlbnQwARJFCgpTZW5kU2lnbmFsEh8uZHhvcy5tZXNoLmJyaWRnZS5TaWduYWxSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5EkEKCFNlbmREYXRhEh0uZHhvcy5tZXNoLmJyaWRnZS5EYXRhUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRI/CgVDbG9zZRIeLmR4b3MubWVzaC5icmlkZ2UuQ2xvc2VSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5ElEKCkdldERldGFpbHMSIC5keG9zLm1lc2guYnJpZGdlLkRldGFpbHNSZXF1ZXN0GiEuZHhvcy5tZXNoLmJyaWRnZS5EZXRhaWxzUmVzcG9uc2USSwoIR2V0U3RhdHMSHi5keG9zLm1lc2guYnJpZGdlLlN0YXRzUmVxdWVzdBofLmR4b3MubWVzaC5icmlkZ2UuU3RhdHNSZXNwb25zZWIGcHJvdG8z", [keys_pb_js_1.file_dxos_keys, swarm_pb_js_1.file_dxos_mesh_swarm, wkt_1.file_google_protobuf_empty, wkt_1.file_google_protobuf_struct]);
/**
 * Describes the message dxos.mesh.bridge.BridgeEvent.
 * Use `create(BridgeEventSchema)` to create a new message.
 */
exports.BridgeEventSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_mesh_bridge, 0);
/**
 * Describes the message dxos.mesh.bridge.BridgeEvent.ConnectionEvent.
 * Use `create(BridgeEvent_ConnectionEventSchema)` to create a new message.
 */
exports.BridgeEvent_ConnectionEventSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_mesh_bridge, 0, 0);
/**
 * Describes the message dxos.mesh.bridge.BridgeEvent.SignalEvent.
 * Use `create(BridgeEvent_SignalEventSchema)` to create a new message.
 */
exports.BridgeEvent_SignalEventSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_mesh_bridge, 0, 1);
/**
 * Describes the message dxos.mesh.bridge.BridgeEvent.DataEvent.
 * Use `create(BridgeEvent_DataEventSchema)` to create a new message.
 */
exports.BridgeEvent_DataEventSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_mesh_bridge, 0, 2);
/**
 * Describes the message dxos.mesh.bridge.ConnectionRequest.
 * Use `create(ConnectionRequestSchema)` to create a new message.
 */
exports.ConnectionRequestSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_mesh_bridge, 1);
/**
 * Describes the message dxos.mesh.bridge.SignalRequest.
 * Use `create(SignalRequestSchema)` to create a new message.
 */
exports.SignalRequestSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_mesh_bridge, 2);
/**
 * Describes the message dxos.mesh.bridge.DataRequest.
 * Use `create(DataRequestSchema)` to create a new message.
 */
exports.DataRequestSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_mesh_bridge, 3);
/**
 * Describes the message dxos.mesh.bridge.CloseRequest.
 * Use `create(CloseRequestSchema)` to create a new message.
 */
exports.CloseRequestSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_mesh_bridge, 4);
/**
 * Describes the message dxos.mesh.bridge.DetailsRequest.
 * Use `create(DetailsRequestSchema)` to create a new message.
 */
exports.DetailsRequestSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_mesh_bridge, 5);
/**
 * Describes the message dxos.mesh.bridge.DetailsResponse.
 * Use `create(DetailsResponseSchema)` to create a new message.
 */
exports.DetailsResponseSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_mesh_bridge, 6);
/**
 * Describes the message dxos.mesh.bridge.StatsRequest.
 * Use `create(StatsRequestSchema)` to create a new message.
 */
exports.StatsRequestSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_mesh_bridge, 7);
/**
 * Describes the message dxos.mesh.bridge.StatsResponse.
 * Use `create(StatsResponseSchema)` to create a new message.
 */
exports.StatsResponseSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_mesh_bridge, 8);
/**
 * @generated from enum dxos.mesh.bridge.ConnectionState
 */
var ConnectionState;
(function (ConnectionState) {
    /**
     * @generated from enum value: INVALID = 0;
     */
    ConnectionState[ConnectionState["INVALID"] = 0] = "INVALID";
    /**
     * @generated from enum value: CONNECTING = 1;
     */
    ConnectionState[ConnectionState["CONNECTING"] = 1] = "CONNECTING";
    /**
     * @generated from enum value: CONNECTED = 2;
     */
    ConnectionState[ConnectionState["CONNECTED"] = 2] = "CONNECTED";
    /**
     * @generated from enum value: CLOSED = 3;
     */
    ConnectionState[ConnectionState["CLOSED"] = 3] = "CLOSED";
})(ConnectionState || (exports.ConnectionState = ConnectionState = {}));
/**
 * Describes the enum dxos.mesh.bridge.ConnectionState.
 */
exports.ConnectionStateSchema = (0, codegenv1_1.enumDesc)(exports.file_dxos_mesh_bridge, 0);
/**
 *
 * Broker connections between processes and peers.
 *
 *
 * @generated from service dxos.mesh.bridge.BridgeService
 */
exports.BridgeService = (0, codegenv1_1.serviceDesc)(exports.file_dxos_mesh_bridge, 0);
//# sourceMappingURL=bridge_pb.js.map