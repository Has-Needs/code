import type { RequestOptions } from "@dxos/codec-protobuf";
import substitutions from "../../../../substitutions.js";
/**
 * Defined in:
 *   {@link file://./../../../../dxos/mesh/teleport/gossip.proto}
 */
export interface GossipMessage {
    peerId: ReturnType<(typeof substitutions)["dxos.keys.PublicKey"]["decode"]>;
    /**
     * Used to route different payload types to correct listeners.
     */
    channelId: string;
    /**
     * Peer tracks what had been sent by message id.
     */
    messageId: ReturnType<(typeof substitutions)["dxos.keys.PublicKey"]["decode"]>;
    timestamp: ReturnType<(typeof substitutions)["google.protobuf.Timestamp"]["decode"]>;
    payload: ReturnType<(typeof substitutions)["google.protobuf.Any"]["decode"]>;
}
/**
 * Defined in:
 *   {@link file://./../../../../dxos/mesh/teleport/gossip.proto}
 */
export interface GossipService {
    announce: (request: GossipMessage, options?: RequestOptions) => Promise<void>;
}
//# sourceMappingURL=gossip.d.ts.map