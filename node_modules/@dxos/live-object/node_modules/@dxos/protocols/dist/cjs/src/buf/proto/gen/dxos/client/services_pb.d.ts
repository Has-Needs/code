import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Any, EmptySchema, Timestamp } from "@bufbuild/protobuf/wkt";
import type { Invitation, InvitationSchema, SpaceState } from "./invitation_pb.js";
import type { ConfigSchema } from "../config_pb.js";
import type { SwarmInfo } from "../devtools/swarm_pb.js";
import type { EdgeReplicationSetting, SpaceCache } from "../echo/metadata_pb.js";
import type { TimeframeVector } from "../echo/timeframe_pb.js";
import type { PeerSchema, SwarmResponseSchema } from "../edge/messenger_pb.js";
import type { JoinRequestSchema, LeaveRequestSchema, MessageSchema, QueryRequestSchema } from "../edge/signal_pb.js";
import type { Error } from "../error_pb.js";
import type { Credential, CredentialSchema, DeviceProfileDocument, DeviceProfileDocumentSchema, Presentation, PresentationSchema, ProfileDocument, ProfileDocumentSchema, SpaceMember_Role } from "../halo/credentials_pb.js";
import type { PublicKey } from "../keys_pb.js";
import type { SignalState } from "../mesh/signal_pb.js";
import type { PeerState } from "../mesh/presence_pb.js";
import type { GossipMessageSchema } from "../mesh/teleport/gossip_pb.js";
import type { JsonObject, Message } from "@bufbuild/protobuf";
/**
 * Describes the file dxos/client/services.proto.
 */
export declare const file_dxos_client_services: GenFile;
/**
 * @generated from message dxos.client.services.UpdateStatusRequest
 */
export type UpdateStatusRequest = Message<"dxos.client.services.UpdateStatusRequest"> & {
    /**
     * @generated from field: dxos.client.services.SystemStatus status = 1;
     */
    status: SystemStatus;
};
/**
 * Describes the message dxos.client.services.UpdateStatusRequest.
 * Use `create(UpdateStatusRequestSchema)` to create a new message.
 */
export declare const UpdateStatusRequestSchema: GenMessage<UpdateStatusRequest>;
/**
 * @generated from message dxos.client.services.QueryStatusRequest
 */
export type QueryStatusRequest = Message<"dxos.client.services.QueryStatusRequest"> & {
    /**
     * @generated from field: optional int32 interval = 1;
     */
    interval?: number;
};
/**
 * Describes the message dxos.client.services.QueryStatusRequest.
 * Use `create(QueryStatusRequestSchema)` to create a new message.
 */
export declare const QueryStatusRequestSchema: GenMessage<QueryStatusRequest>;
/**
 * @generated from message dxos.client.services.QueryStatusResponse
 */
export type QueryStatusResponse = Message<"dxos.client.services.QueryStatusResponse"> & {
    /**
     * @generated from field: dxos.client.services.SystemStatus status = 1;
     */
    status: SystemStatus;
};
/**
 * Describes the message dxos.client.services.QueryStatusResponse.
 * Use `create(QueryStatusResponseSchema)` to create a new message.
 */
export declare const QueryStatusResponseSchema: GenMessage<QueryStatusResponse>;
/**
 * @generated from message dxos.client.services.GetDiagnosticsRequest
 */
export type GetDiagnosticsRequest = Message<"dxos.client.services.GetDiagnosticsRequest"> & {
    /**
     * @generated from field: optional dxos.client.services.GetDiagnosticsRequest.KEY_OPTION keys = 1;
     */
    keys?: GetDiagnosticsRequest_KEY_OPTION;
};
/**
 * Describes the message dxos.client.services.GetDiagnosticsRequest.
 * Use `create(GetDiagnosticsRequestSchema)` to create a new message.
 */
export declare const GetDiagnosticsRequestSchema: GenMessage<GetDiagnosticsRequest>;
/**
 * @generated from enum dxos.client.services.GetDiagnosticsRequest.KEY_OPTION
 */
export declare enum GetDiagnosticsRequest_KEY_OPTION {
    /**
     * @generated from enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from enum value: TRUNCATE = 1;
     */
    TRUNCATE = 1,
    /**
     * @generated from enum value: HUMANIZE = 2;
     */
    HUMANIZE = 2
}
/**
 * Describes the enum dxos.client.services.GetDiagnosticsRequest.KEY_OPTION.
 */
export declare const GetDiagnosticsRequest_KEY_OPTIONSchema: GenEnum<GetDiagnosticsRequest_KEY_OPTION>;
/**
 * @generated from message dxos.client.services.GetDiagnosticsResponse
 */
export type GetDiagnosticsResponse = Message<"dxos.client.services.GetDiagnosticsResponse"> & {
    /**
     * @generated from field: google.protobuf.Timestamp timestamp = 1;
     */
    timestamp?: Timestamp;
    /**
     * @generated from field: google.protobuf.Struct diagnostics = 2;
     */
    diagnostics?: JsonObject;
};
/**
 * Describes the message dxos.client.services.GetDiagnosticsResponse.
 * Use `create(GetDiagnosticsResponseSchema)` to create a new message.
 */
export declare const GetDiagnosticsResponseSchema: GenMessage<GetDiagnosticsResponse>;
/**
 * @generated from message dxos.client.services.Platform
 */
export type Platform = Message<"dxos.client.services.Platform"> & {
    /**
     * @generated from field: dxos.client.services.Platform.PLATFORM_TYPE type = 1;
     */
    type: Platform_PLATFORM_TYPE;
    /**
     * / The User-Agent string from a browser
     *
     * @generated from field: optional string user_agent = 2;
     */
    userAgent?: string;
    /**
     * / e.g process.platform from node, e.g. 'darwin', 'linux', 'win32'
     *
     * @generated from field: optional string platform = 3;
     */
    platform?: string;
    /**
     * / the Node.JS arch string, e.g. 'arm64', 'x64'
     *
     * @generated from field: optional string arch = 4;
     */
    arch?: string;
    /**
     * / the node.js version string
     *
     * @generated from field: optional string runtime = 5;
     */
    runtime?: string;
    /**
     * TODO(nf): uint64? :)
     * / the number of seconds the client has been up
     *
     * @generated from field: optional uint32 uptime = 6;
     */
    uptime?: number;
    /**
     * / e.g. NodeJS.MemoryUsage, subject to change
     *
     * @generated from field: optional google.protobuf.Struct memory = 7;
     */
    memory?: JsonObject;
};
/**
 * Describes the message dxos.client.services.Platform.
 * Use `create(PlatformSchema)` to create a new message.
 */
export declare const PlatformSchema: GenMessage<Platform>;
/**
 * @generated from enum dxos.client.services.Platform.PLATFORM_TYPE
 */
export declare enum Platform_PLATFORM_TYPE {
    /**
     * @generated from enum value: BROWSER = 0;
     */
    BROWSER = 0,
    /**
     * @generated from enum value: SHARED_WORKER = 1;
     */
    SHARED_WORKER = 1,
    /**
     * @generated from enum value: NODE = 2;
     */
    NODE = 2
}
/**
 * Describes the enum dxos.client.services.Platform.PLATFORM_TYPE.
 */
export declare const Platform_PLATFORM_TYPESchema: GenEnum<Platform_PLATFORM_TYPE>;
/**
 * @generated from message dxos.client.services.Identity
 */
export type Identity = Message<"dxos.client.services.Identity"> & {
    /**
     * @generated from field: string did = 4;
     */
    did: string;
    /**
     * @generated from field: dxos.keys.PublicKey identity_key = 1;
     */
    identityKey?: PublicKey;
    /**
     * @generated from field: optional dxos.keys.PublicKey space_key = 2;
     */
    spaceKey?: PublicKey;
    /**
     * @generated from field: optional dxos.halo.credentials.ProfileDocument profile = 3;
     */
    profile?: ProfileDocument;
};
/**
 * Describes the message dxos.client.services.Identity.
 * Use `create(IdentitySchema)` to create a new message.
 */
export declare const IdentitySchema: GenMessage<Identity>;
/**
 * @generated from message dxos.client.services.RequestRecoveryChallengeResponse
 */
export type RequestRecoveryChallengeResponse = Message<"dxos.client.services.RequestRecoveryChallengeResponse"> & {
    /**
     * @generated from field: dxos.keys.PublicKey device_key = 1;
     */
    deviceKey?: PublicKey;
    /**
     * @generated from field: dxos.keys.PublicKey control_feed_key = 2;
     */
    controlFeedKey?: PublicKey;
    /**
     * @generated from field: string challenge = 3;
     */
    challenge: string;
};
/**
 * Describes the message dxos.client.services.RequestRecoveryChallengeResponse.
 * Use `create(RequestRecoveryChallengeResponseSchema)` to create a new message.
 */
export declare const RequestRecoveryChallengeResponseSchema: GenMessage<RequestRecoveryChallengeResponse>;
/**
 * @generated from message dxos.client.services.RecoverIdentityRequest
 */
export type RecoverIdentityRequest = Message<"dxos.client.services.RecoverIdentityRequest"> & {
    /**
     * @generated from oneof dxos.client.services.RecoverIdentityRequest.request
     */
    request: {
        /**
         * @generated from field: string recovery_code = 1;
         */
        value: string;
        case: "recoveryCode";
    } | {
        /**
         * @generated from field: dxos.client.services.RecoverIdentityRequest.ExternalSignature external = 2;
         */
        value: RecoverIdentityRequest_ExternalSignature;
        case: "external";
    } | {
        /**
         * @generated from field: string token = 3;
         */
        value: string;
        case: "token";
    } | {
        case: undefined;
        value?: undefined;
    };
};
/**
 * Describes the message dxos.client.services.RecoverIdentityRequest.
 * Use `create(RecoverIdentityRequestSchema)` to create a new message.
 */
export declare const RecoverIdentityRequestSchema: GenMessage<RecoverIdentityRequest>;
/**
 * @generated from message dxos.client.services.RecoverIdentityRequest.ExternalSignature
 */
export type RecoverIdentityRequest_ExternalSignature = Message<"dxos.client.services.RecoverIdentityRequest.ExternalSignature"> & {
    /**
     * @generated from field: dxos.keys.PublicKey lookup_key = 1;
     */
    lookupKey?: PublicKey;
    /**
     * @generated from field: dxos.keys.PublicKey device_key = 2;
     */
    deviceKey?: PublicKey;
    /**
     * @generated from field: dxos.keys.PublicKey control_feed_key = 3;
     */
    controlFeedKey?: PublicKey;
    /**
     * @generated from field: bytes signature = 4;
     */
    signature: Uint8Array;
    /**
     * These are required to verify the signature from the WebAuthn authenticator.
     *
     * @generated from field: optional bytes client_data_json = 5;
     */
    clientDataJson?: Uint8Array;
    /**
     * @generated from field: optional bytes authenticator_data = 6;
     */
    authenticatorData?: Uint8Array;
};
/**
 * Describes the message dxos.client.services.RecoverIdentityRequest.ExternalSignature.
 * Use `create(RecoverIdentityRequest_ExternalSignatureSchema)` to create a new message.
 */
export declare const RecoverIdentityRequest_ExternalSignatureSchema: GenMessage<RecoverIdentityRequest_ExternalSignature>;
/**
 * @generated from message dxos.client.services.RecoveryCredentialData
 */
export type RecoveryCredentialData = Message<"dxos.client.services.RecoveryCredentialData"> & {
    /**
     * / Recovery key used to validate recovery challenge signature.
     *
     * @generated from field: dxos.keys.PublicKey recovery_key = 1;
     */
    recoveryKey?: PublicKey;
    /**
     * / Public key used to identify the recovery key.
     *
     * @generated from field: dxos.keys.PublicKey lookup_key = 2;
     */
    lookupKey?: PublicKey;
    /**
     * / Algorithm used to generate the recovery key.
     *
     * @generated from field: string algorithm = 3;
     */
    algorithm: string;
};
/**
 * Describes the message dxos.client.services.RecoveryCredentialData.
 * Use `create(RecoveryCredentialDataSchema)` to create a new message.
 */
export declare const RecoveryCredentialDataSchema: GenMessage<RecoveryCredentialData>;
/**
 * @generated from message dxos.client.services.CreateRecoveryCredentialRequest
 */
export type CreateRecoveryCredentialRequest = Message<"dxos.client.services.CreateRecoveryCredentialRequest"> & {
    /**
     * / If not provided, a new key will be generated.
     *
     * @generated from field: optional dxos.client.services.RecoveryCredentialData data = 1;
     */
    data?: RecoveryCredentialData;
};
/**
 * Describes the message dxos.client.services.CreateRecoveryCredentialRequest.
 * Use `create(CreateRecoveryCredentialRequestSchema)` to create a new message.
 */
export declare const CreateRecoveryCredentialRequestSchema: GenMessage<CreateRecoveryCredentialRequest>;
/**
 * @generated from message dxos.client.services.CreateRecoveryCredentialResponse
 */
export type CreateRecoveryCredentialResponse = Message<"dxos.client.services.CreateRecoveryCredentialResponse"> & {
    /**
     * @generated from field: optional string recovery_code = 1;
     */
    recoveryCode?: string;
};
/**
 * Describes the message dxos.client.services.CreateRecoveryCredentialResponse.
 * Use `create(CreateRecoveryCredentialResponseSchema)` to create a new message.
 */
export declare const CreateRecoveryCredentialResponseSchema: GenMessage<CreateRecoveryCredentialResponse>;
/**
 * @generated from message dxos.client.services.QueryIdentityResponse
 */
export type QueryIdentityResponse = Message<"dxos.client.services.QueryIdentityResponse"> & {
    /**
     * @generated from field: optional dxos.client.services.Identity identity = 1;
     */
    identity?: Identity;
};
/**
 * Describes the message dxos.client.services.QueryIdentityResponse.
 * Use `create(QueryIdentityResponseSchema)` to create a new message.
 */
export declare const QueryIdentityResponseSchema: GenMessage<QueryIdentityResponse>;
/**
 * @generated from message dxos.client.services.SignPresentationRequest
 */
export type SignPresentationRequest = Message<"dxos.client.services.SignPresentationRequest"> & {
    /**
     * @generated from field: dxos.halo.credentials.Presentation presentation = 1;
     */
    presentation?: Presentation;
    /**
     * @generated from field: optional bytes nonce = 2;
     */
    nonce?: Uint8Array;
};
/**
 * Describes the message dxos.client.services.SignPresentationRequest.
 * Use `create(SignPresentationRequestSchema)` to create a new message.
 */
export declare const SignPresentationRequestSchema: GenMessage<SignPresentationRequest>;
/**
 * @generated from message dxos.client.services.CreateIdentityRequest
 */
export type CreateIdentityRequest = Message<"dxos.client.services.CreateIdentityRequest"> & {
    /**
     * @generated from field: optional dxos.halo.credentials.ProfileDocument profile = 1;
     */
    profile?: ProfileDocument;
    /**
     * @generated from field: optional dxos.halo.credentials.DeviceProfileDocument device_profile = 3;
     */
    deviceProfile?: DeviceProfileDocument;
};
/**
 * Describes the message dxos.client.services.CreateIdentityRequest.
 * Use `create(CreateIdentityRequestSchema)` to create a new message.
 */
export declare const CreateIdentityRequestSchema: GenMessage<CreateIdentityRequest>;
/**
 * TODO(burdon): Preferences (in database).
 *
 * @generated from message dxos.client.services.Device
 */
export type Device = Message<"dxos.client.services.Device"> & {
    /**
     * @generated from field: dxos.keys.PublicKey device_key = 1;
     */
    deviceKey?: PublicKey;
    /**
     * @generated from field: dxos.client.services.DeviceKind kind = 2;
     */
    kind: DeviceKind;
    /**
     * @generated from field: optional dxos.halo.credentials.DeviceProfileDocument profile = 3;
     */
    profile?: DeviceProfileDocument;
    /**
     * @generated from field: dxos.client.services.Device.PresenceState presence = 4;
     */
    presence: Device_PresenceState;
};
/**
 * Describes the message dxos.client.services.Device.
 * Use `create(DeviceSchema)` to create a new message.
 */
export declare const DeviceSchema: GenMessage<Device>;
/**
 * TODO(nf): dedupe?
 *
 * @generated from enum dxos.client.services.Device.PresenceState
 */
export declare enum Device_PresenceState {
    /**
     * @generated from enum value: OFFLINE = 0;
     */
    OFFLINE = 0,
    /**
     * @generated from enum value: ONLINE = 1;
     */
    ONLINE = 1,
    /**
     * @generated from enum value: REMOVED = 2;
     */
    REMOVED = 2
}
/**
 * Describes the enum dxos.client.services.Device.PresenceState.
 */
export declare const Device_PresenceStateSchema: GenEnum<Device_PresenceState>;
/**
 * @generated from message dxos.client.services.QueryDevicesResponse
 */
export type QueryDevicesResponse = Message<"dxos.client.services.QueryDevicesResponse"> & {
    /**
     * @generated from field: repeated dxos.client.services.Device devices = 1;
     */
    devices: Device[];
};
/**
 * Describes the message dxos.client.services.QueryDevicesResponse.
 * Use `create(QueryDevicesResponseSchema)` to create a new message.
 */
export declare const QueryDevicesResponseSchema: GenMessage<QueryDevicesResponse>;
/**
 * @generated from message dxos.client.services.Contact
 */
export type Contact = Message<"dxos.client.services.Contact"> & {
    /**
     * @generated from field: dxos.keys.PublicKey identityKey = 2;
     */
    identityKey?: PublicKey;
    /**
     * @generated from field: optional dxos.halo.credentials.ProfileDocument profile = 1;
     */
    profile?: ProfileDocument;
    /**
     * @generated from field: repeated dxos.keys.PublicKey commonSpaces = 3;
     */
    commonSpaces: PublicKey[];
};
/**
 * Describes the message dxos.client.services.Contact.
 * Use `create(ContactSchema)` to create a new message.
 */
export declare const ContactSchema: GenMessage<Contact>;
/**
 * @generated from message dxos.client.services.ContactBook
 */
export type ContactBook = Message<"dxos.client.services.ContactBook"> & {
    /**
     * @generated from field: repeated dxos.client.services.Contact contacts = 1;
     */
    contacts: Contact[];
};
/**
 * Describes the message dxos.client.services.ContactBook.
 * Use `create(ContactBookSchema)` to create a new message.
 */
export declare const ContactBookSchema: GenMessage<ContactBook>;
/**
 * @generated from message dxos.client.services.SpaceMember
 */
export type SpaceMember = Message<"dxos.client.services.SpaceMember"> & {
    /**
     * @generated from field: dxos.client.services.Identity identity = 1;
     */
    identity?: Identity;
    /**
     * @generated from field: dxos.client.services.SpaceMember.PresenceState presence = 2;
     */
    presence: SpaceMember_PresenceState;
    /**
     * @generated from field: repeated dxos.mesh.presence.PeerState peerStates = 3;
     */
    peerStates: PeerState[];
    /**
     * @generated from field: dxos.halo.credentials.SpaceMember.Role role = 4;
     */
    role: SpaceMember_Role;
};
/**
 * Describes the message dxos.client.services.SpaceMember.
 * Use `create(SpaceMemberSchema)` to create a new message.
 */
export declare const SpaceMemberSchema: GenMessage<SpaceMember>;
/**
 * @generated from enum dxos.client.services.SpaceMember.PresenceState
 */
export declare enum SpaceMember_PresenceState {
    /**
     * @generated from enum value: OFFLINE = 0;
     */
    OFFLINE = 0,
    /**
     * @generated from enum value: ONLINE = 1;
     */
    ONLINE = 1
}
/**
 * Describes the enum dxos.client.services.SpaceMember.PresenceState.
 */
export declare const SpaceMember_PresenceStateSchema: GenEnum<SpaceMember_PresenceState>;
/**
 * TODO(burdon): Rename SpaceInfo?
 *
 * @generated from message dxos.client.services.Space
 */
export type Space = Message<"dxos.client.services.Space"> & {
    /**
     * @generated from field: string id = 5;
     */
    id: string;
    /**
     * @generated from field: dxos.keys.PublicKey space_key = 1;
     */
    spaceKey?: PublicKey;
    /**
     * @generated from field: dxos.client.services.SpaceState state = 2;
     */
    state: SpaceState;
    /**
     * @generated from field: optional dxos.client.services.Space.PipelineState pipeline = 3;
     */
    pipeline?: Space_PipelineState;
    /**
     * @generated from field: optional dxos.error.Error error = 4;
     */
    error?: Error;
    /**
     * @generated from field: optional dxos.echo.metadata.EdgeReplicationSetting edge_replication = 6;
     */
    edgeReplication?: EdgeReplicationSetting;
    /**
     * @generated from field: repeated dxos.client.services.SpaceMember members = 10;
     */
    members: SpaceMember[];
    /**
     * @generated from field: optional dxos.keys.PublicKey creator = 11;
     */
    creator?: PublicKey;
    /**
     * @generated from field: optional dxos.echo.metadata.SpaceCache cache = 20;
     */
    cache?: SpaceCache;
    /**
     * @generated from field: dxos.client.services.Space.Metrics metrics = 21;
     */
    metrics?: Space_Metrics;
};
/**
 * Describes the message dxos.client.services.Space.
 * Use `create(SpaceSchema)` to create a new message.
 */
export declare const SpaceSchema: GenMessage<Space>;
/**
 * @generated from message dxos.client.services.Space.Metrics
 */
export type Space_Metrics = Message<"dxos.client.services.Space.Metrics"> & {
    /**
     * @generated from field: optional google.protobuf.Timestamp open = 1;
     */
    open?: Timestamp;
    /**
     * @generated from field: optional google.protobuf.Timestamp pipeline_init_begin = 2;
     */
    pipelineInitBegin?: Timestamp;
    /**
     * @generated from field: optional google.protobuf.Timestamp control_pipeline_ready = 3;
     */
    controlPipelineReady?: Timestamp;
    /**
     * @generated from field: optional google.protobuf.Timestamp data_pipeline_open = 4;
     */
    dataPipelineOpen?: Timestamp;
    /**
     * @generated from field: optional google.protobuf.Timestamp data_pipeline_ready = 5;
     */
    dataPipelineReady?: Timestamp;
    /**
     * @generated from field: optional google.protobuf.Timestamp ready = 6;
     */
    ready?: Timestamp;
};
/**
 * Describes the message dxos.client.services.Space.Metrics.
 * Use `create(Space_MetricsSchema)` to create a new message.
 */
export declare const Space_MetricsSchema: GenMessage<Space_Metrics>;
/**
 * TODO(dmaretskyi): Consider merging with space metadata records.
 * TODO(dmaretskyi): ...or split into two separate pipeline messages.
 *
 * @generated from message dxos.client.services.Space.PipelineState
 */
export type Space_PipelineState = Message<"dxos.client.services.Space.PipelineState"> & {
    /**
     * @generated from field: optional dxos.keys.PublicKey control_feed_key = 1;
     */
    controlFeedKey?: PublicKey;
    /**
     * @generated from field: optional dxos.keys.PublicKey data_feed_key = 2;
     */
    dataFeedKey?: PublicKey;
    /**
     * / Remote feeds.
     * / TODO(burdon): Normalize _key suffix.
     *
     * @generated from field: repeated dxos.keys.PublicKey control_feeds = 18;
     */
    controlFeeds: PublicKey[];
    /**
     * @generated from field: repeated dxos.keys.PublicKey data_feeds = 19;
     */
    dataFeeds: PublicKey[];
    /**
     * / Last processed epoch. Might now have been applied yet.
     *
     * @generated from field: optional dxos.halo.credentials.Credential current_epoch = 20;
     */
    currentEpoch?: Credential;
    /**
     * / Epoch that is currently applied.
     *
     * @generated from field: optional dxos.halo.credentials.Credential applied_epoch = 21;
     */
    appliedEpoch?: Credential;
    /**
     * / Mutations already processed.
     *
     * @generated from field: optional dxos.echo.timeframe.TimeframeVector current_control_timeframe = 10;
     */
    currentControlTimeframe?: TimeframeVector;
    /**
     * / Minimum timeframe to consider the state to be up-to-date.
     *
     * @generated from field: optional dxos.echo.timeframe.TimeframeVector target_control_timeframe = 11;
     */
    targetControlTimeframe?: TimeframeVector;
    /**
     * / All mutations stored in feeds.
     *
     * @generated from field: optional dxos.echo.timeframe.TimeframeVector total_control_timeframe = 14;
     */
    totalControlTimeframe?: TimeframeVector;
    /**
     * / All mutations known to exist on the network.
     *
     * @generated from field: optional dxos.echo.timeframe.TimeframeVector known_control_timeframe = 15;
     */
    knownControlTimeframe?: TimeframeVector;
    /**
     * / Start timeframe of the pipeline.
     *
     * @generated from field: optional dxos.echo.timeframe.TimeframeVector start_data_timeframe = 100;
     */
    startDataTimeframe?: TimeframeVector;
    /**
     * / Mutations already processed.
     *
     * @generated from field: optional dxos.echo.timeframe.TimeframeVector current_data_timeframe = 12;
     */
    currentDataTimeframe?: TimeframeVector;
    /**
     * / Minimum timeframe to consider the state to be up-to-date.
     *
     * @generated from field: optional dxos.echo.timeframe.TimeframeVector target_data_timeframe = 13;
     */
    targetDataTimeframe?: TimeframeVector;
    /**
     * / All mutations stored in feeds.
     *
     * @generated from field: optional dxos.echo.timeframe.TimeframeVector total_data_timeframe = 16;
     */
    totalDataTimeframe?: TimeframeVector;
    /**
     * / All mutations known to exist on the network.
     *
     * @generated from field: optional dxos.echo.timeframe.TimeframeVector known_data_timeframe = 17;
     */
    knownDataTimeframe?: TimeframeVector;
    /**
     * / URL of the current space root automerge document.
     *
     * @generated from field: optional string space_root_url = 22;
     */
    spaceRootUrl?: string;
};
/**
 * Describes the message dxos.client.services.Space.PipelineState.
 * Use `create(Space_PipelineStateSchema)` to create a new message.
 */
export declare const Space_PipelineStateSchema: GenMessage<Space_PipelineState>;
/**
 * @generated from message dxos.client.services.UpdateSpaceRequest
 */
export type UpdateSpaceRequest = Message<"dxos.client.services.UpdateSpaceRequest"> & {
    /**
     * @generated from field: dxos.keys.PublicKey space_key = 1;
     */
    spaceKey?: PublicKey;
    /**
     * / Allowed values: ACTIVE, INACTIVE.
     *
     * @generated from field: optional dxos.client.services.SpaceState state = 2;
     */
    state?: SpaceState;
    /**
     * @generated from field: optional dxos.echo.metadata.EdgeReplicationSetting edge_replication = 3;
     */
    edgeReplication?: EdgeReplicationSetting;
};
/**
 * Describes the message dxos.client.services.UpdateSpaceRequest.
 * Use `create(UpdateSpaceRequestSchema)` to create a new message.
 */
export declare const UpdateSpaceRequestSchema: GenMessage<UpdateSpaceRequest>;
/**
 * @generated from message dxos.client.services.QuerySpacesResponse
 */
export type QuerySpacesResponse = Message<"dxos.client.services.QuerySpacesResponse"> & {
    /**
     * @generated from field: repeated dxos.client.services.Space spaces = 1;
     */
    spaces: Space[];
};
/**
 * Describes the message dxos.client.services.QuerySpacesResponse.
 * Use `create(QuerySpacesResponseSchema)` to create a new message.
 */
export declare const QuerySpacesResponseSchema: GenMessage<QuerySpacesResponse>;
/**
 * @generated from message dxos.client.services.PostMessageRequest
 */
export type PostMessageRequest = Message<"dxos.client.services.PostMessageRequest"> & {
    /**
     * @generated from field: dxos.keys.PublicKey space_key = 1;
     */
    spaceKey?: PublicKey;
    /**
     * @generated from field: string channel = 2;
     */
    channel: string;
    /**
     * @generated from field: google.protobuf.Any message = 3;
     */
    message?: Any;
};
/**
 * Describes the message dxos.client.services.PostMessageRequest.
 * Use `create(PostMessageRequestSchema)` to create a new message.
 */
export declare const PostMessageRequestSchema: GenMessage<PostMessageRequest>;
/**
 * @generated from message dxos.client.services.SubscribeMessagesRequest
 */
export type SubscribeMessagesRequest = Message<"dxos.client.services.SubscribeMessagesRequest"> & {
    /**
     * @generated from field: dxos.keys.PublicKey space_key = 1;
     */
    spaceKey?: PublicKey;
    /**
     * @generated from field: string channel = 2;
     */
    channel: string;
};
/**
 * Describes the message dxos.client.services.SubscribeMessagesRequest.
 * Use `create(SubscribeMessagesRequestSchema)` to create a new message.
 */
export declare const SubscribeMessagesRequestSchema: GenMessage<SubscribeMessagesRequest>;
/**
 * @generated from message dxos.client.services.WriteCredentialsRequest
 */
export type WriteCredentialsRequest = Message<"dxos.client.services.WriteCredentialsRequest"> & {
    /**
     * @generated from field: dxos.keys.PublicKey space_key = 1;
     */
    spaceKey?: PublicKey;
    /**
     * @generated from field: repeated dxos.halo.credentials.Credential credentials = 2;
     */
    credentials: Credential[];
};
/**
 * Describes the message dxos.client.services.WriteCredentialsRequest.
 * Use `create(WriteCredentialsRequestSchema)` to create a new message.
 */
export declare const WriteCredentialsRequestSchema: GenMessage<WriteCredentialsRequest>;
/**
 * @generated from message dxos.client.services.QueryCredentialsRequest
 */
export type QueryCredentialsRequest = Message<"dxos.client.services.QueryCredentialsRequest"> & {
    /**
     * @generated from field: dxos.keys.PublicKey space_key = 1;
     */
    spaceKey?: PublicKey;
    /**
     * @generated from field: optional bool no_tail = 2;
     */
    noTail?: boolean;
};
/**
 * Describes the message dxos.client.services.QueryCredentialsRequest.
 * Use `create(QueryCredentialsRequestSchema)` to create a new message.
 */
export declare const QueryCredentialsRequestSchema: GenMessage<QueryCredentialsRequest>;
/**
 * @generated from message dxos.client.services.CreateEpochRequest
 */
export type CreateEpochRequest = Message<"dxos.client.services.CreateEpochRequest"> & {
    /**
     * @generated from field: dxos.keys.PublicKey space_key = 1;
     */
    spaceKey?: PublicKey;
    /**
     * @generated from field: optional dxos.client.services.CreateEpochRequest.Migration migration = 2;
     */
    migration?: CreateEpochRequest_Migration;
    /**
     * / For REPLACE_AUTOMERGE_ROOT migration.
     *
     * @generated from field: optional string automerge_root_url = 3;
     */
    automergeRootUrl?: string;
};
/**
 * Describes the message dxos.client.services.CreateEpochRequest.
 * Use `create(CreateEpochRequestSchema)` to create a new message.
 */
export declare const CreateEpochRequestSchema: GenMessage<CreateEpochRequest>;
/**
 * @generated from enum dxos.client.services.CreateEpochRequest.Migration
 */
export declare enum CreateEpochRequest_Migration {
    /**
     * @generated from enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * / Init empty automerge document as the space root. Disables legacy ECHO snapshot creation.
     *
     * @generated from enum value: INIT_AUTOMERGE = 1;
     */
    INIT_AUTOMERGE = 1,
    /**
     * / Init new automerge root by clonning the current space root. History is pruned.
     *
     * @generated from enum value: PRUNE_AUTOMERGE_ROOT_HISTORY = 2;
     */
    PRUNE_AUTOMERGE_ROOT_HISTORY = 2,
    /**
     * / Create a new space root and move objects from the current space root to separate automerge documents and.
     *
     * @generated from enum value: FRAGMENT_AUTOMERGE_ROOT = 3;
     */
    FRAGMENT_AUTOMERGE_ROOT = 3,
    /**
     * / Replace the current automerge root with a new one specified by the user.
     *
     * @generated from enum value: REPLACE_AUTOMERGE_ROOT = 4;
     */
    REPLACE_AUTOMERGE_ROOT = 4,
    /**
     * / Upgrade references data structure
     *
     * @generated from enum value: MIGRATE_REFERENCES_TO_DXN = 5;
     */
    MIGRATE_REFERENCES_TO_DXN = 5
}
/**
 * Describes the enum dxos.client.services.CreateEpochRequest.Migration.
 */
export declare const CreateEpochRequest_MigrationSchema: GenEnum<CreateEpochRequest_Migration>;
/**
 * @generated from message dxos.client.services.CreateEpochResponse
 */
export type CreateEpochResponse = Message<"dxos.client.services.CreateEpochResponse"> & {
    /**
     * / Credential of the new epoch.
     *
     * @generated from field: optional dxos.halo.credentials.Credential epoch_credential = 1;
     */
    epochCredential?: Credential;
    /**
     * / Control pipeline timeframe.
     *
     * @generated from field: optional dxos.echo.timeframe.TimeframeVector control_timeframe = 2;
     */
    controlTimeframe?: TimeframeVector;
};
/**
 * Describes the message dxos.client.services.CreateEpochResponse.
 * Use `create(CreateEpochResponseSchema)` to create a new message.
 */
export declare const CreateEpochResponseSchema: GenMessage<CreateEpochResponse>;
/**
 * @generated from message dxos.client.services.UpdateMemberRoleRequest
 */
export type UpdateMemberRoleRequest = Message<"dxos.client.services.UpdateMemberRoleRequest"> & {
    /**
     * @generated from field: dxos.keys.PublicKey space_key = 1;
     */
    spaceKey?: PublicKey;
    /**
     * @generated from field: dxos.keys.PublicKey member_key = 2;
     */
    memberKey?: PublicKey;
    /**
     * @generated from field: dxos.halo.credentials.SpaceMember.Role new_role = 3;
     */
    newRole: SpaceMember_Role;
};
/**
 * Describes the message dxos.client.services.UpdateMemberRoleRequest.
 * Use `create(UpdateMemberRoleRequestSchema)` to create a new message.
 */
export declare const UpdateMemberRoleRequestSchema: GenMessage<UpdateMemberRoleRequest>;
/**
 * @generated from message dxos.client.services.AdmitContactRequest
 */
export type AdmitContactRequest = Message<"dxos.client.services.AdmitContactRequest"> & {
    /**
     * @generated from field: dxos.client.services.Contact contact = 1;
     */
    contact?: Contact;
    /**
     * @generated from field: dxos.halo.credentials.SpaceMember.Role role = 2;
     */
    role: SpaceMember_Role;
    /**
     * @generated from field: dxos.keys.PublicKey space_key = 3;
     */
    spaceKey?: PublicKey;
};
/**
 * Describes the message dxos.client.services.AdmitContactRequest.
 * Use `create(AdmitContactRequestSchema)` to create a new message.
 */
export declare const AdmitContactRequestSchema: GenMessage<AdmitContactRequest>;
/**
 * @generated from message dxos.client.services.ContactAdmission
 */
export type ContactAdmission = Message<"dxos.client.services.ContactAdmission"> & {
    /**
     * @generated from field: dxos.halo.credentials.Credential credential = 1;
     */
    credential?: Credential;
};
/**
 * Describes the message dxos.client.services.ContactAdmission.
 * Use `create(ContactAdmissionSchema)` to create a new message.
 */
export declare const ContactAdmissionSchema: GenMessage<ContactAdmission>;
/**
 * @generated from message dxos.client.services.JoinSpaceResponse
 */
export type JoinSpaceResponse = Message<"dxos.client.services.JoinSpaceResponse"> & {
    /**
     * @generated from field: dxos.client.services.Space space = 1;
     */
    space?: Space;
};
/**
 * Describes the message dxos.client.services.JoinSpaceResponse.
 * Use `create(JoinSpaceResponseSchema)` to create a new message.
 */
export declare const JoinSpaceResponseSchema: GenMessage<JoinSpaceResponse>;
/**
 * @generated from message dxos.client.services.JoinBySpaceKeyRequest
 */
export type JoinBySpaceKeyRequest = Message<"dxos.client.services.JoinBySpaceKeyRequest"> & {
    /**
     * @generated from field: dxos.keys.PublicKey space_key = 1;
     */
    spaceKey?: PublicKey;
};
/**
 * Describes the message dxos.client.services.JoinBySpaceKeyRequest.
 * Use `create(JoinBySpaceKeyRequestSchema)` to create a new message.
 */
export declare const JoinBySpaceKeyRequestSchema: GenMessage<JoinBySpaceKeyRequest>;
/**
 * @generated from message dxos.client.services.SpaceArchive
 */
export type SpaceArchive = Message<"dxos.client.services.SpaceArchive"> & {
    /**
     * @generated from field: string filename = 1;
     */
    filename: string;
    /**
     * @generated from field: bytes contents = 2;
     */
    contents: Uint8Array;
};
/**
 * Describes the message dxos.client.services.SpaceArchive.
 * Use `create(SpaceArchiveSchema)` to create a new message.
 */
export declare const SpaceArchiveSchema: GenMessage<SpaceArchive>;
/**
 * @generated from message dxos.client.services.ExportSpaceRequest
 */
export type ExportSpaceRequest = Message<"dxos.client.services.ExportSpaceRequest"> & {
    /**
     * @generated from field: string space_id = 1;
     */
    spaceId: string;
};
/**
 * Describes the message dxos.client.services.ExportSpaceRequest.
 * Use `create(ExportSpaceRequestSchema)` to create a new message.
 */
export declare const ExportSpaceRequestSchema: GenMessage<ExportSpaceRequest>;
/**
 * @generated from message dxos.client.services.ExportSpaceResponse
 */
export type ExportSpaceResponse = Message<"dxos.client.services.ExportSpaceResponse"> & {
    /**
     * @generated from field: dxos.client.services.SpaceArchive archive = 1;
     */
    archive?: SpaceArchive;
};
/**
 * Describes the message dxos.client.services.ExportSpaceResponse.
 * Use `create(ExportSpaceResponseSchema)` to create a new message.
 */
export declare const ExportSpaceResponseSchema: GenMessage<ExportSpaceResponse>;
/**
 * @generated from message dxos.client.services.ImportSpaceRequest
 */
export type ImportSpaceRequest = Message<"dxos.client.services.ImportSpaceRequest"> & {
    /**
     * @generated from field: dxos.client.services.SpaceArchive archive = 1;
     */
    archive?: SpaceArchive;
};
/**
 * Describes the message dxos.client.services.ImportSpaceRequest.
 * Use `create(ImportSpaceRequestSchema)` to create a new message.
 */
export declare const ImportSpaceRequestSchema: GenMessage<ImportSpaceRequest>;
/**
 * @generated from message dxos.client.services.ImportSpaceResponse
 */
export type ImportSpaceResponse = Message<"dxos.client.services.ImportSpaceResponse"> & {
    /**
     * / the ID of the new space.
     *
     * @generated from field: string new_space_id = 1;
     */
    newSpaceId: string;
};
/**
 * Describes the message dxos.client.services.ImportSpaceResponse.
 * Use `create(ImportSpaceResponseSchema)` to create a new message.
 */
export declare const ImportSpaceResponseSchema: GenMessage<ImportSpaceResponse>;
/**
 * @generated from message dxos.client.services.AcceptInvitationRequest
 */
export type AcceptInvitationRequest = Message<"dxos.client.services.AcceptInvitationRequest"> & {
    /**
     * @generated from field: dxos.client.services.Invitation invitation = 1;
     */
    invitation?: Invitation;
    /**
     * @generated from field: optional dxos.halo.credentials.DeviceProfileDocument device_profile = 2;
     */
    deviceProfile?: DeviceProfileDocument;
};
/**
 * Describes the message dxos.client.services.AcceptInvitationRequest.
 * Use `create(AcceptInvitationRequestSchema)` to create a new message.
 */
export declare const AcceptInvitationRequestSchema: GenMessage<AcceptInvitationRequest>;
/**
 * @generated from message dxos.client.services.AuthenticationRequest
 */
export type AuthenticationRequest = Message<"dxos.client.services.AuthenticationRequest"> & {
    /**
     * @generated from field: string invitation_id = 1;
     */
    invitationId: string;
    /**
     * @generated from field: string auth_code = 2;
     */
    authCode: string;
};
/**
 * Describes the message dxos.client.services.AuthenticationRequest.
 * Use `create(AuthenticationRequestSchema)` to create a new message.
 */
export declare const AuthenticationRequestSchema: GenMessage<AuthenticationRequest>;
/**
 * @generated from message dxos.client.services.CancelInvitationRequest
 */
export type CancelInvitationRequest = Message<"dxos.client.services.CancelInvitationRequest"> & {
    /**
     * @generated from field: string invitation_id = 1;
     */
    invitationId: string;
};
/**
 * Describes the message dxos.client.services.CancelInvitationRequest.
 * Use `create(CancelInvitationRequestSchema)` to create a new message.
 */
export declare const CancelInvitationRequestSchema: GenMessage<CancelInvitationRequest>;
/**
 * @generated from message dxos.client.services.InvitationMethod
 */
export type InvitationMethod = Message<"dxos.client.services.InvitationMethod"> & {
    /**
     * @generated from oneof dxos.client.services.InvitationMethod.kind
     */
    kind: {
        /**
         * @generated from field: dxos.client.services.Invitation created = 1;
         */
        value: Invitation;
        case: "created";
    } | {
        /**
         * @generated from field: dxos.client.services.Invitation accepted = 2;
         */
        value: Invitation;
        case: "accepted";
    } | {
        case: undefined;
        value?: undefined;
    };
};
/**
 * Describes the message dxos.client.services.InvitationMethod.
 * Use `create(InvitationMethodSchema)` to create a new message.
 */
export declare const InvitationMethodSchema: GenMessage<InvitationMethod>;
/**
 * @generated from message dxos.client.services.QueryInvitationsResponse
 */
export type QueryInvitationsResponse = Message<"dxos.client.services.QueryInvitationsResponse"> & {
    /**
     * @generated from field: dxos.client.services.QueryInvitationsResponse.Action action = 1;
     */
    action: QueryInvitationsResponse_Action;
    /**
     * @generated from field: dxos.client.services.QueryInvitationsResponse.Type type = 2;
     */
    type: QueryInvitationsResponse_Type;
    /**
     * @generated from field: repeated dxos.client.services.Invitation invitations = 3;
     */
    invitations: Invitation[];
    /**
     * indicate to caller that invitations of this action/type were existing at time of initial response.
     *
     * @generated from field: optional bool existing = 4;
     */
    existing?: boolean;
};
/**
 * Describes the message dxos.client.services.QueryInvitationsResponse.
 * Use `create(QueryInvitationsResponseSchema)` to create a new message.
 */
export declare const QueryInvitationsResponseSchema: GenMessage<QueryInvitationsResponse>;
/**
 * @generated from enum dxos.client.services.QueryInvitationsResponse.Action
 */
export declare enum QueryInvitationsResponse_Action {
    /**
     * @generated from enum value: ADDED = 0;
     */
    ADDED = 0,
    /**
     * @generated from enum value: REMOVED = 1;
     */
    REMOVED = 1,
    /**
     * @generated from enum value: SAVED = 2;
     */
    SAVED = 2,
    /**
     * @generated from enum value: LOAD_COMPLETE = 3;
     */
    LOAD_COMPLETE = 3
}
/**
 * Describes the enum dxos.client.services.QueryInvitationsResponse.Action.
 */
export declare const QueryInvitationsResponse_ActionSchema: GenEnum<QueryInvitationsResponse_Action>;
/**
 * @generated from enum dxos.client.services.QueryInvitationsResponse.Type
 */
export declare enum QueryInvitationsResponse_Type {
    /**
     * @generated from enum value: CREATED = 0;
     */
    CREATED = 0,
    /**
     * @generated from enum value: ACCEPTED = 1;
     */
    ACCEPTED = 1
}
/**
 * Describes the enum dxos.client.services.QueryInvitationsResponse.Type.
 */
export declare const QueryInvitationsResponse_TypeSchema: GenEnum<QueryInvitationsResponse_Type>;
/**
 * Informational, consumers must share invitations to receive CancellableInvitation
 *
 * @generated from message dxos.client.services.LoadPersistentInvitationsResponse
 */
export type LoadPersistentInvitationsResponse = Message<"dxos.client.services.LoadPersistentInvitationsResponse"> & {
    /**
     * @generated from field: repeated dxos.client.services.Invitation invitations = 1;
     */
    invitations: Invitation[];
};
/**
 * Describes the message dxos.client.services.LoadPersistentInvitationsResponse.
 * Use `create(LoadPersistentInvitationsResponseSchema)` to create a new message.
 */
export declare const LoadPersistentInvitationsResponseSchema: GenMessage<LoadPersistentInvitationsResponse>;
/**
 * @generated from message dxos.client.services.NetworkStatus
 */
export type NetworkStatus = Message<"dxos.client.services.NetworkStatus"> & {
    /**
     * @generated from field: dxos.client.services.ConnectionState swarm = 1;
     */
    swarm: ConnectionState;
    /**
     * @generated from field: repeated dxos.client.services.NetworkStatus.Signal signaling = 2;
     */
    signaling: NetworkStatus_Signal[];
    /**
     * @generated from field: repeated dxos.devtools.swarm.SwarmInfo connection_info = 3;
     */
    connectionInfo: SwarmInfo[];
};
/**
 * Describes the message dxos.client.services.NetworkStatus.
 * Use `create(NetworkStatusSchema)` to create a new message.
 */
export declare const NetworkStatusSchema: GenMessage<NetworkStatus>;
/**
 * @generated from message dxos.client.services.NetworkStatus.Signal
 */
export type NetworkStatus_Signal = Message<"dxos.client.services.NetworkStatus.Signal"> & {
    /**
     * @generated from field: string server = 1;
     */
    server: string;
    /**
     * TODO(burdon): Where is this defined?
     *
     * @generated from field: dxos.mesh.signal.SignalState state = 2;
     */
    state: SignalState;
};
/**
 * Describes the message dxos.client.services.NetworkStatus.Signal.
 * Use `create(NetworkStatus_SignalSchema)` to create a new message.
 */
export declare const NetworkStatus_SignalSchema: GenMessage<NetworkStatus_Signal>;
/**
 * @generated from message dxos.client.services.UpdateConfigRequest
 */
export type UpdateConfigRequest = Message<"dxos.client.services.UpdateConfigRequest"> & {
    /**
     * @generated from field: dxos.client.services.ConnectionState swarm = 1;
     */
    swarm: ConnectionState;
};
/**
 * Describes the message dxos.client.services.UpdateConfigRequest.
 * Use `create(UpdateConfigRequestSchema)` to create a new message.
 */
export declare const UpdateConfigRequestSchema: GenMessage<UpdateConfigRequest>;
/**
 * @generated from message dxos.client.services.SubscribeSwarmStateRequest
 */
export type SubscribeSwarmStateRequest = Message<"dxos.client.services.SubscribeSwarmStateRequest"> & {
    /**
     * @generated from field: dxos.keys.PublicKey topic = 1;
     */
    topic?: PublicKey;
};
/**
 * Describes the message dxos.client.services.SubscribeSwarmStateRequest.
 * Use `create(SubscribeSwarmStateRequestSchema)` to create a new message.
 */
export declare const SubscribeSwarmStateRequestSchema: GenMessage<SubscribeSwarmStateRequest>;
/**
 * @generated from message dxos.client.services.QueryEdgeStatusResponse
 */
export type QueryEdgeStatusResponse = Message<"dxos.client.services.QueryEdgeStatusResponse"> & {
    /**
     * @generated from field: dxos.client.services.EdgeStatus status = 1;
     */
    status: EdgeStatus;
};
/**
 * Describes the message dxos.client.services.QueryEdgeStatusResponse.
 * Use `create(QueryEdgeStatusResponseSchema)` to create a new message.
 */
export declare const QueryEdgeStatusResponseSchema: GenMessage<QueryEdgeStatusResponse>;
/**
 * @generated from message dxos.client.services.QueryAgentStatusResponse
 */
export type QueryAgentStatusResponse = Message<"dxos.client.services.QueryAgentStatusResponse"> & {
    /**
     * @generated from field: dxos.client.services.QueryAgentStatusResponse.AgentStatus status = 1;
     */
    status: QueryAgentStatusResponse_AgentStatus;
};
/**
 * Describes the message dxos.client.services.QueryAgentStatusResponse.
 * Use `create(QueryAgentStatusResponseSchema)` to create a new message.
 */
export declare const QueryAgentStatusResponseSchema: GenMessage<QueryAgentStatusResponse>;
/**
 * @generated from enum dxos.client.services.QueryAgentStatusResponse.AgentStatus
 */
export declare enum QueryAgentStatusResponse_AgentStatus {
    /**
     * @generated from enum value: UNKNOWN = 0;
     */
    UNKNOWN = 0,
    /**
     * @generated from enum value: ACTIVE = 1;
     */
    ACTIVE = 1,
    /**
     * @generated from enum value: INACTIVE = 2;
     */
    INACTIVE = 2,
    /**
     * @generated from enum value: NOT_FOUND = 3;
     */
    NOT_FOUND = 3
}
/**
 * Describes the enum dxos.client.services.QueryAgentStatusResponse.AgentStatus.
 */
export declare const QueryAgentStatusResponse_AgentStatusSchema: GenEnum<QueryAgentStatusResponse_AgentStatus>;
/**
 * @generated from enum dxos.client.services.SystemStatus
 */
export declare enum SystemStatus {
    /**
     * @generated from enum value: INACTIVE = 0;
     */
    INACTIVE = 0,
    /**
     * @generated from enum value: ACTIVE = 1;
     */
    ACTIVE = 1
}
/**
 * Describes the enum dxos.client.services.SystemStatus.
 */
export declare const SystemStatusSchema: GenEnum<SystemStatus>;
/**
 * @generated from enum dxos.client.services.DeviceKind
 */
export declare enum DeviceKind {
    /**
     * @generated from enum value: CURRENT = 0;
     */
    CURRENT = 0,
    /**
     * @generated from enum value: TRUSTED = 1;
     */
    TRUSTED = 1
}
/**
 * Describes the enum dxos.client.services.DeviceKind.
 */
export declare const DeviceKindSchema: GenEnum<DeviceKind>;
/**
 * TODO(wittjosiah): Rename to SwarnState?
 *
 * @generated from enum dxos.client.services.ConnectionState
 */
export declare enum ConnectionState {
    /**
     * @generated from enum value: OFFLINE = 0;
     */
    OFFLINE = 0,
    /**
     * @generated from enum value: ONLINE = 1;
     */
    ONLINE = 1
}
/**
 * Describes the enum dxos.client.services.ConnectionState.
 */
export declare const ConnectionStateSchema: GenEnum<ConnectionState>;
/**
 * @generated from enum dxos.client.services.EdgeStatus
 */
export declare enum EdgeStatus {
    /**
     * @generated from enum value: NOT_CONNECTED = 0;
     */
    NOT_CONNECTED = 0,
    /**
     * @generated from enum value: CONNECTED = 1;
     */
    CONNECTED = 1
}
/**
 * Describes the enum dxos.client.services.EdgeStatus.
 */
export declare const EdgeStatusSchema: GenEnum<EdgeStatus>;
/**
 * @generated from service dxos.client.services.SystemService
 */
export declare const SystemService: GenService<{
    /**
     * / Get the static config of the client.
     *
     * @generated from rpc dxos.client.services.SystemService.GetConfig
     */
    getConfig: {
        methodKind: "unary";
        input: typeof EmptySchema;
        output: typeof ConfigSchema;
    };
    /**
     * / Get the diagnostics snapshot.
     *
     * @generated from rpc dxos.client.services.SystemService.GetDiagnostics
     */
    getDiagnostics: {
        methodKind: "unary";
        input: typeof GetDiagnosticsRequestSchema;
        output: typeof GetDiagnosticsResponseSchema;
    };
    /**
     * / Update the status of the client. Used to re-activate an inactive client.
     *
     * @generated from rpc dxos.client.services.SystemService.UpdateStatus
     */
    updateStatus: {
        methodKind: "unary";
        input: typeof UpdateStatusRequestSchema;
        output: typeof EmptySchema;
    };
    /**
     * / Stream the status of the client.
     *
     * @generated from rpc dxos.client.services.SystemService.QueryStatus
     */
    queryStatus: {
        methodKind: "server_streaming";
        input: typeof QueryStatusRequestSchema;
        output: typeof QueryStatusResponseSchema;
    };
    /**
     * / Reset the client.
     *
     * @generated from rpc dxos.client.services.SystemService.Reset
     */
    reset: {
        methodKind: "unary";
        input: typeof EmptySchema;
        output: typeof EmptySchema;
    };
    /**
     * / Get platform Information
     *
     * @generated from rpc dxos.client.services.SystemService.GetPlatform
     */
    getPlatform: {
        methodKind: "unary";
        input: typeof EmptySchema;
        output: typeof PlatformSchema;
    };
}>;
/**
 * TODO(wittjosiah): Align pluralization with other services.
 *
 * @generated from service dxos.client.services.IdentityService
 */
export declare const IdentityService: GenService<{
    /**
     * @generated from rpc dxos.client.services.IdentityService.CreateIdentity
     */
    createIdentity: {
        methodKind: "unary";
        input: typeof CreateIdentityRequestSchema;
        output: typeof IdentitySchema;
    };
    /**
     * @generated from rpc dxos.client.services.IdentityService.RequestRecoveryChallenge
     */
    requestRecoveryChallenge: {
        methodKind: "unary";
        input: typeof EmptySchema;
        output: typeof RequestRecoveryChallengeResponseSchema;
    };
    /**
     * @generated from rpc dxos.client.services.IdentityService.RecoverIdentity
     */
    recoverIdentity: {
        methodKind: "unary";
        input: typeof RecoverIdentityRequestSchema;
        output: typeof IdentitySchema;
    };
    /**
     * @generated from rpc dxos.client.services.IdentityService.CreateRecoveryCredential
     */
    createRecoveryCredential: {
        methodKind: "unary";
        input: typeof CreateRecoveryCredentialRequestSchema;
        output: typeof CreateRecoveryCredentialResponseSchema;
    };
    /**
     * @generated from rpc dxos.client.services.IdentityService.QueryIdentity
     */
    queryIdentity: {
        methodKind: "server_streaming";
        input: typeof EmptySchema;
        output: typeof QueryIdentityResponseSchema;
    };
    /**
     * @generated from rpc dxos.client.services.IdentityService.UpdateProfile
     */
    updateProfile: {
        methodKind: "unary";
        input: typeof ProfileDocumentSchema;
        output: typeof IdentitySchema;
    };
    /**
     * @generated from rpc dxos.client.services.IdentityService.SignPresentation
     */
    signPresentation: {
        methodKind: "unary";
        input: typeof SignPresentationRequestSchema;
        output: typeof PresentationSchema;
    };
    /**
     * @generated from rpc dxos.client.services.IdentityService.CreateAuthCredential
     */
    createAuthCredential: {
        methodKind: "unary";
        input: typeof EmptySchema;
        output: typeof CredentialSchema;
    };
}>;
/**
 * @generated from service dxos.client.services.DevicesService
 */
export declare const DevicesService: GenService<{
    /**
     * @generated from rpc dxos.client.services.DevicesService.UpdateDevice
     */
    updateDevice: {
        methodKind: "unary";
        input: typeof DeviceProfileDocumentSchema;
        output: typeof DeviceSchema;
    };
    /**
     * @generated from rpc dxos.client.services.DevicesService.QueryDevices
     */
    queryDevices: {
        methodKind: "server_streaming";
        input: typeof EmptySchema;
        output: typeof QueryDevicesResponseSchema;
    };
}>;
/**
 * @generated from service dxos.client.services.ContactsService
 */
export declare const ContactsService: GenService<{
    /**
     * @generated from rpc dxos.client.services.ContactsService.GetContacts
     */
    getContacts: {
        methodKind: "unary";
        input: typeof EmptySchema;
        output: typeof ContactBookSchema;
    };
    /**
     * @generated from rpc dxos.client.services.ContactsService.QueryContacts
     */
    queryContacts: {
        methodKind: "server_streaming";
        input: typeof EmptySchema;
        output: typeof ContactBookSchema;
    };
}>;
/**
 * @generated from service dxos.client.services.SpacesService
 */
export declare const SpacesService: GenService<{
    /**
     * @generated from rpc dxos.client.services.SpacesService.CreateSpace
     */
    createSpace: {
        methodKind: "unary";
        input: typeof EmptySchema;
        output: typeof SpaceSchema;
    };
    /**
     * @generated from rpc dxos.client.services.SpacesService.UpdateSpace
     */
    updateSpace: {
        methodKind: "unary";
        input: typeof UpdateSpaceRequestSchema;
        output: typeof EmptySchema;
    };
    /**
     * @generated from rpc dxos.client.services.SpacesService.QuerySpaces
     */
    querySpaces: {
        methodKind: "server_streaming";
        input: typeof EmptySchema;
        output: typeof QuerySpacesResponseSchema;
    };
    /**
     * @generated from rpc dxos.client.services.SpacesService.UpdateMemberRole
     */
    updateMemberRole: {
        methodKind: "unary";
        input: typeof UpdateMemberRoleRequestSchema;
        output: typeof EmptySchema;
    };
    /**
     * @generated from rpc dxos.client.services.SpacesService.AdmitContact
     */
    admitContact: {
        methodKind: "unary";
        input: typeof AdmitContactRequestSchema;
        output: typeof EmptySchema;
    };
    /**
     * @generated from rpc dxos.client.services.SpacesService.JoinBySpaceKey
     */
    joinBySpaceKey: {
        methodKind: "unary";
        input: typeof JoinBySpaceKeyRequestSchema;
        output: typeof JoinSpaceResponseSchema;
    };
    /**
     * / Broadcast an ephemeral message to the space swarm.
     *
     * @generated from rpc dxos.client.services.SpacesService.PostMessage
     */
    postMessage: {
        methodKind: "unary";
        input: typeof PostMessageRequestSchema;
        output: typeof EmptySchema;
    };
    /**
     * / Subscribe to messages from the space swarm.
     *
     * @generated from rpc dxos.client.services.SpacesService.SubscribeMessages
     */
    subscribeMessages: {
        methodKind: "server_streaming";
        input: typeof SubscribeMessagesRequestSchema;
        output: typeof GossipMessageSchema;
    };
    /**
     * / Write credentials to the space control feed.
     *
     * @generated from rpc dxos.client.services.SpacesService.WriteCredentials
     */
    writeCredentials: {
        methodKind: "unary";
        input: typeof WriteCredentialsRequestSchema;
        output: typeof EmptySchema;
    };
    /**
     * / Query credentials from the space control feed.
     *
     * @generated from rpc dxos.client.services.SpacesService.QueryCredentials
     */
    queryCredentials: {
        methodKind: "server_streaming";
        input: typeof QueryCredentialsRequestSchema;
        output: typeof CredentialSchema;
    };
    /**
     * @generated from rpc dxos.client.services.SpacesService.CreateEpoch
     */
    createEpoch: {
        methodKind: "unary";
        input: typeof CreateEpochRequestSchema;
        output: typeof CreateEpochResponseSchema;
    };
    /**
     * @generated from rpc dxos.client.services.SpacesService.ExportSpace
     */
    exportSpace: {
        methodKind: "unary";
        input: typeof ExportSpaceRequestSchema;
        output: typeof ExportSpaceResponseSchema;
    };
    /**
     * @generated from rpc dxos.client.services.SpacesService.ImportSpace
     */
    importSpace: {
        methodKind: "unary";
        input: typeof ImportSpaceRequestSchema;
        output: typeof ImportSpaceResponseSchema;
    };
}>;
/**
 * @generated from service dxos.client.services.InvitationsService
 */
export declare const InvitationsService: GenService<{
    /**
     * @generated from rpc dxos.client.services.InvitationsService.CreateInvitation
     */
    createInvitation: {
        methodKind: "server_streaming";
        input: typeof InvitationSchema;
        output: typeof InvitationSchema;
    };
    /**
     * @generated from rpc dxos.client.services.InvitationsService.AcceptInvitation
     */
    acceptInvitation: {
        methodKind: "server_streaming";
        input: typeof AcceptInvitationRequestSchema;
        output: typeof InvitationSchema;
    };
    /**
     * @generated from rpc dxos.client.services.InvitationsService.Authenticate
     */
    authenticate: {
        methodKind: "unary";
        input: typeof AuthenticationRequestSchema;
        output: typeof EmptySchema;
    };
    /**
     * @generated from rpc dxos.client.services.InvitationsService.CancelInvitation
     */
    cancelInvitation: {
        methodKind: "unary";
        input: typeof CancelInvitationRequestSchema;
        output: typeof EmptySchema;
    };
    /**
     * @generated from rpc dxos.client.services.InvitationsService.QueryInvitations
     */
    queryInvitations: {
        methodKind: "server_streaming";
        input: typeof EmptySchema;
        output: typeof QueryInvitationsResponseSchema;
    };
}>;
/**
 * TODO(burdon): Widen API (too heavy for single feature: e.g., status).
 *
 * @generated from service dxos.client.services.NetworkService
 */
export declare const NetworkService: GenService<{
    /**
     * @generated from rpc dxos.client.services.NetworkService.UpdateConfig
     */
    updateConfig: {
        methodKind: "unary";
        input: typeof UpdateConfigRequestSchema;
        output: typeof EmptySchema;
    };
    /**
     * @generated from rpc dxos.client.services.NetworkService.QueryStatus
     */
    queryStatus: {
        methodKind: "server_streaming";
        input: typeof EmptySchema;
        output: typeof NetworkStatusSchema;
    };
    /**
     * @generated from rpc dxos.client.services.NetworkService.JoinSwarm
     */
    joinSwarm: {
        methodKind: "unary";
        input: typeof JoinRequestSchema;
        output: typeof EmptySchema;
    };
    /**
     * @generated from rpc dxos.client.services.NetworkService.LeaveSwarm
     */
    leaveSwarm: {
        methodKind: "unary";
        input: typeof LeaveRequestSchema;
        output: typeof EmptySchema;
    };
    /**
     * *
     * Query the swarm state without joining it.
     *
     * @generated from rpc dxos.client.services.NetworkService.QuerySwarm
     */
    querySwarm: {
        methodKind: "unary";
        input: typeof QueryRequestSchema;
        output: typeof SwarmResponseSchema;
    };
    /**
     * @generated from rpc dxos.client.services.NetworkService.SubscribeSwarmState
     */
    subscribeSwarmState: {
        methodKind: "server_streaming";
        input: typeof SubscribeSwarmStateRequestSchema;
        output: typeof SwarmResponseSchema;
    };
    /**
     * @generated from rpc dxos.client.services.NetworkService.SendMessage
     */
    sendMessage: {
        methodKind: "unary";
        input: typeof MessageSchema;
        output: typeof EmptySchema;
    };
    /**
     * @generated from rpc dxos.client.services.NetworkService.SubscribeMessages
     */
    subscribeMessages: {
        methodKind: "server_streaming";
        input: typeof PeerSchema;
        output: typeof MessageSchema;
    };
}>;
/**
 * @generated from service dxos.client.services.EdgeAgentService
 */
export declare const EdgeAgentService: GenService<{
    /**
     * @generated from rpc dxos.client.services.EdgeAgentService.QueryEdgeStatus
     */
    queryEdgeStatus: {
        methodKind: "server_streaming";
        input: typeof EmptySchema;
        output: typeof QueryEdgeStatusResponseSchema;
    };
    /**
     * @generated from rpc dxos.client.services.EdgeAgentService.CreateAgent
     */
    createAgent: {
        methodKind: "unary";
        input: typeof EmptySchema;
        output: typeof EmptySchema;
    };
    /**
     * @generated from rpc dxos.client.services.EdgeAgentService.QueryAgentStatus
     */
    queryAgentStatus: {
        methodKind: "server_streaming";
        input: typeof EmptySchema;
        output: typeof QueryAgentStatusResponseSchema;
    };
}>;
//# sourceMappingURL=services_pb.d.ts.map