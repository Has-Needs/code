//
// Copyright 2021 DXOS.org
//

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts,import_extension=js"
// @generated from file dxos/gravity.proto (package dxos.gravity, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_protobuf_any } from "@bufbuild/protobuf/wkt";
import { file_dxos_keys } from "./keys_pb.js";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file dxos/gravity.proto.
 */
export const file_dxos_gravity: GenFile = /*@__PURE__*/
  fileDesc("ChJkeG9zL2dyYXZpdHkucHJvdG8SDGR4b3MuZ3Jhdml0eSKuAgoJQWdlbnRTcGVjEhQKB3ZlcnNpb24YASABKAVIAIgBARIaCg1zdGF0ZV9tYWNoaW5lGAIgASgJSAGIAQESOgoOc3RhcnRfc2VxdWVuY2UYAyABKAsyHS5keG9zLmdyYXZpdHkuQ29tbWFuZFNlcXVlbmNlSAKIAQESOQoNc3RvcF9zZXF1ZW5jZRgEIAEoCzIdLmR4b3MuZ3Jhdml0eS5Db21tYW5kU2VxdWVuY2VIA4gBARI1Cg50ZXN0X3NlcXVlbmNlcxgFIAMoCzIdLmR4b3MuZ3Jhdml0eS5Db21tYW5kU2VxdWVuY2VCCgoIX3ZlcnNpb25CEAoOX3N0YXRlX21hY2hpbmVCEQoPX3N0YXJ0X3NlcXVlbmNlQhAKDl9zdG9wX3NlcXVlbmNlIjoKD0NvbW1hbmRTZXF1ZW5jZRInCghjb21tYW5kcxgBIAMoCzIVLmR4b3MuZ3Jhdml0eS5Db21tYW5kIrUDCgdDb21tYW5kEjwKDmNyZWF0ZV9wcm9maWxlGAEgASgLMiIuZHhvcy5ncmF2aXR5LkNyZWF0ZVByb2ZpbGVDb21tYW5kSAASOAoMY3JlYXRlX3NwYWNlGAIgASgLMiAuZHhvcy5ncmF2aXR5LkNyZWF0ZVNwYWNlQ29tbWFuZEgAEk0KF2NyZWF0ZV9zcGFjZV9pbnZpdGF0aW9uGAMgASgLMiouZHhvcy5ncmF2aXR5LkNyZWF0ZVNwYWNlSW52aXRhdGlvbkNvbW1hbmRIABJNChdhY2NlcHRfc3BhY2VfaW52aXRhdGlvbhgEIAEoCzIqLmR4b3MuZ3Jhdml0eS5BY2NlcHRTcGFjZUludml0YXRpb25Db21tYW5kSAASLwoLc3luY19zZXJ2ZXIYBSABKAsyGC5keG9zLmdyYXZpdHkuU3luY1NlcnZlckgAEi8KC3N5bmNfY2xpZW50GAYgASgLMhguZHhvcy5ncmF2aXR5LlN5bmNDbGllbnRIABIrCgl0ZWFyX2Rvd24YByABKAsyFi5keG9zLmdyYXZpdHkuVGVhckRvd25IAEIFCgNDbWQiNgoUQ3JlYXRlUHJvZmlsZUNvbW1hbmQSEwoGX25vb3BfGAEgASgISACIAQFCCQoHWF9ub29wXyIsChJDcmVhdGVTcGFjZUNvbW1hbmQSDwoCaWQYASABKAlIAIgBAUIFCgNfaWQiPQocQ3JlYXRlU3BhY2VJbnZpdGF0aW9uQ29tbWFuZBIKCgJpZBgBIAEoCRIRCglzd2FybV9rZXkYAiABKAkiMQocQWNjZXB0U3BhY2VJbnZpdGF0aW9uQ29tbWFuZBIRCglzd2FybV9rZXkYASABKAkiRQoKU3luY1NlcnZlchIKCgJpZBgBIAEoCRIMCgRob3N0GAIgASgJEgwKBHBvcnQYAyABKA0SDwoHdmVyYm9zZRgEIAEoCCJVCgpTeW5jQ2xpZW50EgoKAmlkGAEgASgJEg4KBnNydl9pZBgCIAEoCRIMCgRob3N0GAMgASgJEgwKBHBvcnQYBCABKA0SDwoHdmVyYm9zZRgFIAEoCCIqCghUZWFyRG93bhITCgZfbm9vcF8YASABKAhIAIgBAUIJCgdYX25vb3BfYgZwcm90bzM", [file_google_protobuf_any, file_dxos_keys]);

/**
 * / Root specification for Agent.
 *
 * @generated from message dxos.gravity.AgentSpec
 */
export type AgentSpec = Message<"dxos.gravity.AgentSpec"> & {
  /**
   * @generated from field: optional int32 version = 1;
   */
  version?: number;

  /**
   * @generated from field: optional string state_machine = 2;
   */
  stateMachine?: string;

  /**
   * @generated from field: optional dxos.gravity.CommandSequence start_sequence = 3;
   */
  startSequence?: CommandSequence;

  /**
   * @generated from field: optional dxos.gravity.CommandSequence stop_sequence = 4;
   */
  stopSequence?: CommandSequence;

  /**
   * @generated from field: repeated dxos.gravity.CommandSequence test_sequences = 5;
   */
  testSequences: CommandSequence[];
};

/**
 * Describes the message dxos.gravity.AgentSpec.
 * Use `create(AgentSpecSchema)` to create a new message.
 */
export const AgentSpecSchema: GenMessage<AgentSpec> = /*@__PURE__*/
  messageDesc(file_dxos_gravity, 0);

/**
 * / Commands that must be run sequentially.
 *
 * @generated from message dxos.gravity.CommandSequence
 */
export type CommandSequence = Message<"dxos.gravity.CommandSequence"> & {
  /**
   * @generated from field: repeated dxos.gravity.Command commands = 1;
   */
  commands: Command[];
};

/**
 * Describes the message dxos.gravity.CommandSequence.
 * Use `create(CommandSequenceSchema)` to create a new message.
 */
export const CommandSequenceSchema: GenMessage<CommandSequence> = /*@__PURE__*/
  messageDesc(file_dxos_gravity, 1);

/**
 * / Atomic async command.
 *
 * @generated from message dxos.gravity.Command
 */
export type Command = Message<"dxos.gravity.Command"> & {
  /**
   * TODO(burdon): oneof vs. any?
   *
   * @generated from oneof dxos.gravity.Command.Cmd
   */
  Cmd: {
    /**
     * @generated from field: dxos.gravity.CreateProfileCommand create_profile = 1;
     */
    value: CreateProfileCommand;
    case: "createProfile";
  } | {
    /**
     * @generated from field: dxos.gravity.CreateSpaceCommand create_space = 2;
     */
    value: CreateSpaceCommand;
    case: "createSpace";
  } | {
    /**
     * @generated from field: dxos.gravity.CreateSpaceInvitationCommand create_space_invitation = 3;
     */
    value: CreateSpaceInvitationCommand;
    case: "createSpaceInvitation";
  } | {
    /**
     * @generated from field: dxos.gravity.AcceptSpaceInvitationCommand accept_space_invitation = 4;
     */
    value: AcceptSpaceInvitationCommand;
    case: "acceptSpaceInvitation";
  } | {
    /**
     * @generated from field: dxos.gravity.SyncServer sync_server = 5;
     */
    value: SyncServer;
    case: "syncServer";
  } | {
    /**
     * @generated from field: dxos.gravity.SyncClient sync_client = 6;
     */
    value: SyncClient;
    case: "syncClient";
  } | {
    /**
     * @generated from field: dxos.gravity.TearDown tear_down = 7;
     */
    value: TearDown;
    case: "tearDown";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message dxos.gravity.Command.
 * Use `create(CommandSchema)` to create a new message.
 */
export const CommandSchema: GenMessage<Command> = /*@__PURE__*/
  messageDesc(file_dxos_gravity, 2);

/**
 * @generated from message dxos.gravity.CreateProfileCommand
 */
export type CreateProfileCommand = Message<"dxos.gravity.CreateProfileCommand"> & {
  /**
   * @generated from field: optional bool _noop_ = 1;
   */
  Noop?: boolean;
};

/**
 * Describes the message dxos.gravity.CreateProfileCommand.
 * Use `create(CreateProfileCommandSchema)` to create a new message.
 */
export const CreateProfileCommandSchema: GenMessage<CreateProfileCommand> = /*@__PURE__*/
  messageDesc(file_dxos_gravity, 3);

/**
 * @generated from message dxos.gravity.CreateSpaceCommand
 */
export type CreateSpaceCommand = Message<"dxos.gravity.CreateSpaceCommand"> & {
  /**
   * @generated from field: optional string id = 1;
   */
  id?: string;
};

/**
 * Describes the message dxos.gravity.CreateSpaceCommand.
 * Use `create(CreateSpaceCommandSchema)` to create a new message.
 */
export const CreateSpaceCommandSchema: GenMessage<CreateSpaceCommand> = /*@__PURE__*/
  messageDesc(file_dxos_gravity, 4);

/**
 * @generated from message dxos.gravity.CreateSpaceInvitationCommand
 */
export type CreateSpaceInvitationCommand = Message<"dxos.gravity.CreateSpaceInvitationCommand"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string swarm_key = 2;
   */
  swarmKey: string;
};

/**
 * Describes the message dxos.gravity.CreateSpaceInvitationCommand.
 * Use `create(CreateSpaceInvitationCommandSchema)` to create a new message.
 */
export const CreateSpaceInvitationCommandSchema: GenMessage<CreateSpaceInvitationCommand> = /*@__PURE__*/
  messageDesc(file_dxos_gravity, 5);

/**
 * @generated from message dxos.gravity.AcceptSpaceInvitationCommand
 */
export type AcceptSpaceInvitationCommand = Message<"dxos.gravity.AcceptSpaceInvitationCommand"> & {
  /**
   * @generated from field: string swarm_key = 1;
   */
  swarmKey: string;
};

/**
 * Describes the message dxos.gravity.AcceptSpaceInvitationCommand.
 * Use `create(AcceptSpaceInvitationCommandSchema)` to create a new message.
 */
export const AcceptSpaceInvitationCommandSchema: GenMessage<AcceptSpaceInvitationCommand> = /*@__PURE__*/
  messageDesc(file_dxos_gravity, 6);

/**
 * @generated from message dxos.gravity.SyncServer
 */
export type SyncServer = Message<"dxos.gravity.SyncServer"> & {
  /**
   * server id
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * host name the sync server is running on
   *
   * @generated from field: string host = 2;
   */
  host: string;

  /**
   * port number to bind to
   *
   * @generated from field: uint32 port = 3;
   */
  port: number;

  /**
   * @generated from field: bool verbose = 4;
   */
  verbose: boolean;
};

/**
 * Describes the message dxos.gravity.SyncServer.
 * Use `create(SyncServerSchema)` to create a new message.
 */
export const SyncServerSchema: GenMessage<SyncServer> = /*@__PURE__*/
  messageDesc(file_dxos_gravity, 7);

/**
 * @generated from message dxos.gravity.SyncClient
 */
export type SyncClient = Message<"dxos.gravity.SyncClient"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string srv_id = 2;
   */
  srvId: string;

  /**
   * @generated from field: string host = 3;
   */
  host: string;

  /**
   * @generated from field: uint32 port = 4;
   */
  port: number;

  /**
   * @generated from field: bool verbose = 5;
   */
  verbose: boolean;
};

/**
 * Describes the message dxos.gravity.SyncClient.
 * Use `create(SyncClientSchema)` to create a new message.
 */
export const SyncClientSchema: GenMessage<SyncClient> = /*@__PURE__*/
  messageDesc(file_dxos_gravity, 8);

/**
 * @generated from message dxos.gravity.TearDown
 */
export type TearDown = Message<"dxos.gravity.TearDown"> & {
  /**
   * @generated from field: optional bool _noop_ = 1;
   */
  Noop?: boolean;
};

/**
 * Describes the message dxos.gravity.TearDown.
 * Use `create(TearDownSchema)` to create a new message.
 */
export const TearDownSchema: GenMessage<TearDown> = /*@__PURE__*/
  messageDesc(file_dxos_gravity, 9);

