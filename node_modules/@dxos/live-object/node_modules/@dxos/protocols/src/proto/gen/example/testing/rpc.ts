import type { Stream, RequestOptions } from "@dxos/codec-protobuf";
import substitutions from "../../../substitutions.js";
import * as dxos_agent_dashboard from "../../dxos/agent/dashboard.js";
import * as dxos_agent_echoproxy from "../../dxos/agent/echoproxy.js";
import * as dxos_agent_epoch from "../../dxos/agent/epoch.js";
import * as dxos_agent_functions from "../../dxos/agent/functions.js";
import * as dxos_bot from "../../dxos/bot.js";
import * as dxos_client_services from "../../dxos/client/services.js";
import * as dxos_config from "../../dxos/config.js";
import * as dxos_devtools_host from "../../dxos/devtools/host.js";
import * as dxos_devtools_swarm from "../../dxos/devtools/swarm.js";
import * as dxos_echo_blob from "../../dxos/echo/blob.js";
import * as dxos_echo_feed from "../../dxos/echo/feed.js";
import * as dxos_echo_filter from "../../dxos/echo/filter.js";
import * as dxos_echo_indexing from "../../dxos/echo/indexing.js";
import * as dxos_echo_metadata from "../../dxos/echo/metadata.js";
import * as dxos_echo_model_document from "../../dxos/echo/model/document.js";
import * as dxos_echo_model_messenger from "../../dxos/echo/model/messenger.js";
import * as dxos_echo_model_text from "../../dxos/echo/model/text.js";
import * as dxos_echo_object from "../../dxos/echo/object.js";
import * as dxos_echo_query from "../../dxos/echo/query.js";
import * as dxos_echo_service from "../../dxos/echo/service.js";
import * as dxos_echo_snapshot from "../../dxos/echo/snapshot.js";
import * as dxos_echo_timeframe from "../../dxos/echo/timeframe.js";
import * as dxos_edge_calls from "../../dxos/edge/calls.js";
import * as dxos_edge_messenger from "../../dxos/edge/messenger.js";
import * as dxos_edge_signal from "../../dxos/edge/signal.js";
import * as dxos_error from "../../dxos/error.js";
import * as dxos_gravity from "../../dxos/gravity.js";
import * as dxos_halo_credentials from "../../dxos/halo/credentials.js";
import * as dxos_halo_credentials_auth from "../../dxos/halo/credentials/auth.js";
import * as dxos_halo_credentials_greet from "../../dxos/halo/credentials/greet.js";
import * as dxos_halo_credentials_identity from "../../dxos/halo/credentials/identity.js";
import * as dxos_halo_invitations from "../../dxos/halo/invitations.js";
import * as dxos_halo_keyring from "../../dxos/halo/keyring.js";
import * as dxos_halo_keys from "../../dxos/halo/keys.js";
import * as dxos_halo_signed from "../../dxos/halo/signed.js";
import * as dxos_iframe from "../../dxos/iframe.js";
import * as dxos_keys from "../../dxos/keys.js";
import * as dxos_mesh_bridge from "../../dxos/mesh/bridge.js";
import * as dxos_mesh_broadcast from "../../dxos/mesh/broadcast.js";
import * as dxos_mesh_messaging from "../../dxos/mesh/messaging.js";
import * as dxos_mesh_muxer from "../../dxos/mesh/muxer.js";
import * as dxos_mesh_presence from "../../dxos/mesh/presence.js";
import * as dxos_mesh_protocol from "../../dxos/mesh/protocol.js";
import * as dxos_mesh_replicator from "../../dxos/mesh/replicator.js";
import * as dxos_mesh_signal from "../../dxos/mesh/signal.js";
import * as dxos_mesh_swarm from "../../dxos/mesh/swarm.js";
import * as dxos_mesh_teleport from "../../dxos/mesh/teleport.js";
import * as dxos_mesh_teleport_auth from "../../dxos/mesh/teleport/auth.js";
import * as dxos_mesh_teleport_automerge from "../../dxos/mesh/teleport/automerge.js";
import * as dxos_mesh_teleport_blobsync from "../../dxos/mesh/teleport/blobsync.js";
import * as dxos_mesh_teleport_control from "../../dxos/mesh/teleport/control.js";
import * as dxos_mesh_teleport_gossip from "../../dxos/mesh/teleport/gossip.js";
import * as dxos_mesh_teleport_notarization from "../../dxos/mesh/teleport/notarization.js";
import * as dxos_mesh_teleport_replicator from "../../dxos/mesh/teleport/replicator.js";
import * as dxos_registry from "../../dxos/registry.js";
import * as dxos_rpc from "../../dxos/rpc.js";
import * as dxos_service_agentmanager from "../../dxos/service/agentmanager.js";
import * as dxos_service_publisher from "../../dxos/service/publisher.js";
import * as dxos_service_supervisor from "../../dxos/service/supervisor.js";
import * as dxos_service_tunnel from "../../dxos/service/tunnel.js";
import * as dxos_tracing from "../../dxos/tracing.js";
import * as dxos_type from "../../dxos/type.js";
import * as dxos_value from "../../dxos/value.js";
import * as example_testing_data from "./data.js";
import * as google_protobuf from "../../google/protobuf.js";
/**
 * Defined in:
 *   {@link file://./../../../example/testing/rpc.proto}
 */
export interface TestRpcRequest {
    data: string;
}
/**
 * Defined in:
 *   {@link file://./../../../example/testing/rpc.proto}
 */
export interface TestRpcResponse {
    data: string;
}
/**
 * Defined in:
 *   {@link file://./../../../example/testing/rpc.proto}
 */
export interface TestStreamRpcRequest {
    data: string;
    streamLoadInterval: number;
    streamLoadChunkSize: number;
}
/**
 * Defined in:
 *   {@link file://./../../../example/testing/rpc.proto}
 */
export interface TestStreamRpcResponse {
    data: string;
    bytesSent: number;
    bytesReceived: number;
    sendErrors: number;
    receiveErrors: number;
    runningTime: number;
}
/**
 * Defined in:
 *   {@link file://./../../../example/testing/rpc.proto}
 */
export interface TestService {
    testCall: (request: TestRpcRequest, options?: RequestOptions) => Promise<TestRpcResponse>;
    voidCall: (request: void, options?: RequestOptions) => Promise<void>;
}
/**
 * Defined in:
 *   {@link file://./../../../example/testing/rpc.proto}
 */
export interface TestStreamService {
    testCall: (request: TestRpcRequest, options?: RequestOptions) => Stream<TestRpcResponse>;
}
/**
 * Defined in:
 *   {@link file://./../../../example/testing/rpc.proto}
 */
export interface TestServiceWithStreams {
    requestTestStream: (request: TestStreamRpcRequest, options?: RequestOptions) => Promise<TestRpcResponse>;
    closeTestStream: (request: TestRpcRequest, options?: RequestOptions) => Promise<TestStreamRpcResponse>;
}
/**
 * Defined in:
 *   {@link file://./../../../example/testing/rpc.proto}
 */
export interface PingRequest {
    nonce: number;
}
/**
 * Defined in:
 *   {@link file://./../../../example/testing/rpc.proto}
 */
export interface PingReponse {
    nonce: number;
}
/**
 * Defined in:
 *   {@link file://./../../../example/testing/rpc.proto}
 */
export interface PingService {
    ping: (request: PingRequest, options?: RequestOptions) => Promise<PingReponse>;
}
/**
 * Defined in:
 *   {@link file://./../../../example/testing/rpc.proto}
 */
export interface MessageWithAny {
    payload: ReturnType<(typeof substitutions)["google.protobuf.Any"]["decode"]>;
}
/**
 * Defined in:
 *   {@link file://./../../../example/testing/rpc.proto}
 */
export interface TestAnyService {
    testCall: (request: MessageWithAny, options?: RequestOptions) => Promise<MessageWithAny>;
}
