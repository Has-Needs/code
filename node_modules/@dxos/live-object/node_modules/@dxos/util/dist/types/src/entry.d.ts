/**
 * Inspired by https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.entry
 */
export declare const entry: <K, V>(map: Map<K, V>, key: K) => MapEntry<K, V, undefined>;
export declare class MapEntry<K, V, U> {
    private readonly _map;
    private readonly _key;
    get key(): K;
    get value(): V | U;
    orInsert(value: V): MapEntry<K, V, never>;
    deep<K1, V1>(this: MapEntry<K, Map<K1, V1>, Map<K1, V1>>, key: K1): MapEntry<K1, V1, undefined>;
}
//# sourceMappingURL=entry.d.ts.map