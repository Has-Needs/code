"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var node_exports = {};
__export(node_exports, {
  ReactiveArray: () => import_chunk_G7ZY3KON.ReactiveArray,
  RefArray: () => RefArray2,
  createProxy: () => import_chunk_G7ZY3KON.createProxy,
  dangerouslySetProxyId: () => import_chunk_G7ZY3KON.dangerouslySetProxyId,
  getMeta: () => getMeta2,
  getObjectMeta: () => getObjectMeta2,
  getProxyHandler: () => import_chunk_G7ZY3KON.getProxyHandler,
  getProxySlot: () => import_chunk_G7ZY3KON.getProxySlot,
  getProxyTarget: () => import_chunk_G7ZY3KON.getProxyTarget,
  getSnapshot: () => getSnapshot,
  getType: () => getType2,
  isDeleted: () => isDeleted2,
  isLiveObject: () => isLiveObject,
  isProxy: () => import_chunk_G7ZY3KON.isProxy,
  isValidProxyTarget: () => import_chunk_G7ZY3KON.isValidProxyTarget,
  live: () => import_chunk_G7ZY3KON.live,
  makeRef: () => makeRef,
  objectData: () => import_chunk_G7ZY3KON.objectData,
  refFromDXN: () => refFromDXN,
  symbolIsProxy: () => import_chunk_G7ZY3KON.symbolIsProxy
});
module.exports = __toCommonJS(node_exports);
var import_chunk_G7ZY3KON = require("./chunk-G7ZY3KON.cjs");
var EchoSchemaModule = __toESM(require("@dxos/echo-schema"));
var import_echo_schema = require("@dxos/echo-schema");
var import_util = require("@dxos/util");
var getSnapshot = (obj) => {
  return (0, import_util.deepMapValues)(obj, (value, recurse) => {
    if (import_echo_schema.Ref.isRef(value)) {
      return {
        "/": value.dxn.toString()
      };
    }
    return recurse(value);
  });
};
var isLiveObject = (value) => (0, import_chunk_G7ZY3KON.isProxy)(value);
var makeRef = EchoSchemaModule.Ref.make;
var refFromDXN = EchoSchemaModule.Ref.fromDXN;
var RefArray2 = EchoSchemaModule.RefArray;
var getObjectMeta2 = EchoSchemaModule.getObjectMeta;
var isDeleted2 = EchoSchemaModule.isDeleted;
var getType2 = EchoSchemaModule.getType;
var getMeta2 = EchoSchemaModule.getMeta;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  ReactiveArray,
  RefArray,
  createProxy,
  dangerouslySetProxyId,
  getMeta,
  getObjectMeta,
  getProxyHandler,
  getProxySlot,
  getProxyTarget,
  getSnapshot,
  getType,
  isDeleted,
  isLiveObject,
  isProxy,
  isValidProxyTarget,
  live,
  makeRef,
  objectData,
  refFromDXN,
  symbolIsProxy
});
//# sourceMappingURL=index.cjs.map
