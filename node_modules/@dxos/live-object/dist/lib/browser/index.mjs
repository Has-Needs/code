import "@dxos/node-std/globals";
import {
  ReactiveArray,
  createProxy,
  dangerouslySetProxyId,
  getProxyHandler,
  getProxySlot,
  getProxyTarget,
  isProxy,
  isValidProxyTarget,
  live,
  objectData,
  symbolIsProxy
} from "./chunk-WCX67AHT.mjs";

// packages/core/echo/live-object/src/index.ts
import * as EchoSchemaModule from "@dxos/echo-schema";

// packages/core/echo/live-object/src/snapshot.ts
import { Ref } from "@dxos/echo-schema";
import { deepMapValues } from "@dxos/util";
var getSnapshot = (obj) => {
  return deepMapValues(obj, (value, recurse) => {
    if (Ref.isRef(value)) {
      return {
        "/": value.dxn.toString()
      };
    }
    return recurse(value);
  });
};

// packages/core/echo/live-object/src/live.ts
var isLiveObject = (value) => isProxy(value);

// packages/core/echo/live-object/src/index.ts
var makeRef = EchoSchemaModule.Ref.make;
var refFromDXN = EchoSchemaModule.Ref.fromDXN;
var RefArray2 = EchoSchemaModule.RefArray;
var getObjectMeta2 = EchoSchemaModule.getObjectMeta;
var isDeleted2 = EchoSchemaModule.isDeleted;
var getType2 = EchoSchemaModule.getType;
var getMeta2 = EchoSchemaModule.getMeta;
export {
  ReactiveArray,
  RefArray2 as RefArray,
  createProxy,
  dangerouslySetProxyId,
  getMeta2 as getMeta,
  getObjectMeta2 as getObjectMeta,
  getProxyHandler,
  getProxySlot,
  getProxyTarget,
  getSnapshot,
  getType2 as getType,
  isDeleted2 as isDeleted,
  isLiveObject,
  isProxy,
  isValidProxyTarget,
  live,
  makeRef,
  objectData,
  refFromDXN,
  symbolIsProxy
};
//# sourceMappingURL=index.mjs.map
