import "@dxos/node-std/globals";
import {
  live
} from "../chunk-WCX67AHT.mjs";

// packages/core/echo/live-object/src/testing/echo-schema.ts
import { effect } from "@preact/signals-core";
import { EchoSchema, getSchemaTypename, StoredSchema, toJsonSchema } from "@dxos/echo-schema";
import { registerSignalsRuntime } from "@dxos/echo-signals";
import { assertArgument } from "@dxos/invariant";
registerSignalsRuntime();
var createEchoSchema = (schema) => {
  const typename = getSchemaTypename(schema);
  assertArgument(typename, "Schema does not have a typename.");
  const echoSchema = new EchoSchema(live(StoredSchema, {
    typename,
    version: "0.1.0",
    jsonSchema: toJsonSchema(schema)
  }));
  effect(() => {
    const _ = echoSchema.jsonSchema;
    echoSchema._invalidate();
  });
  return echoSchema;
};
export {
  createEchoSchema
};
//# sourceMappingURL=index.mjs.map
