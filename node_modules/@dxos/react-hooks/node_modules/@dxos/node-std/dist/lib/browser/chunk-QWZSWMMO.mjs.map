{
  "version": 3,
  "sources": ["../../../src/process.js"],
  "sourcesContent": ["//\n// Copyright 2023 DXOS.org\n//\n\n// !!! Duplicated in @dxos/esbuild-plugins\n// TODO(dmaretskyi): Unify.\n\n// shim for using process in browser\n// based off https://github.com/defunctzombie/node-process/blob/master/browser.js\n\n/* eslint-disable */\n\nfunction nextTick(fun, ...args) {\n  if (args.length > 0) {\n    queueMicrotask(() => fun(...args));\n  } else {\n    queueMicrotask(fun);\n  }\n}\n\nconst title = 'browser';\nconst platform = 'browser';\nconst browser = true;\nconst env = {};\nconst argv = [];\nconst version = ''; // empty string to avoid regexp issues\nconst versions = {};\nconst release = {};\nconst config = {};\n\nfunction noop() {}\n\nconst on = noop;\nconst addListener = noop;\nconst once = noop;\nconst off = noop;\nconst removeListener = noop;\nconst removeAllListeners = noop;\nconst emit = noop;\n\nfunction binding(name) {\n  throw new Error('process.binding is not supported');\n}\n\nfunction cwd() {\n  return '/';\n}\n\nfunction chdir(dir) {\n  throw new Error('process.chdir is not supported');\n}\n\nfunction umask() {\n  return 0;\n}\n\n// from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js\nvar performance = globalThis.performance || {};\nvar performanceNow =\n  performance.now ||\n  performance.mozNow ||\n  performance.msNow ||\n  performance.oNow ||\n  performance.webkitNow ||\n  function () {\n    return new Date().getTime();\n  };\n\n// generate timestamp or delta\n// see http://nodejs.org/api/process.html#process_process_hrtime\nfunction hrtime(previousTimestamp) {\n  var clocktime = performanceNow.call(performance) * 1e-3;\n  var seconds = Math.floor(clocktime);\n  var nanoseconds = Math.floor((clocktime % 1) * 1e9);\n  if (previousTimestamp) {\n    seconds = seconds - previousTimestamp[0];\n    nanoseconds = nanoseconds - previousTimestamp[1];\n    if (nanoseconds < 0) {\n      seconds--;\n      nanoseconds += 1e9;\n    }\n  }\n  return [seconds, nanoseconds];\n}\n\nhrtime.bigint = function () {\n  var clocktime = performanceNow.call(performance) * 1e-3;\n  var seconds = Math.floor(clocktime);\n  var nanoseconds = Math.floor((clocktime % 1) * 1e9);\n  return BigInt(seconds * 1e9) + BigInt(nanoseconds);\n};\n\nvar startTime = new Date();\n\nfunction uptime() {\n  var currentTime = new Date();\n  var dif = currentTime - startTime;\n  return dif / 1000;\n}\n\nexport var process = {\n  nextTick: nextTick,\n  title: title,\n  browser: browser,\n  env: env,\n  argv: argv,\n  version: version,\n  versions: versions,\n  on: on,\n  addListener: addListener,\n  once: once,\n  off: off,\n  removeListener: removeListener,\n  removeAllListeners: removeAllListeners,\n  emit: emit,\n  binding: binding,\n  cwd: cwd,\n  chdir: chdir,\n  umask: umask,\n  hrtime: hrtime,\n  platform: platform,\n  release: release,\n  config: config,\n  uptime: uptime,\n};\n\n// replace process.env.VAR with define\n\nconst defines = {};\nObject.keys(defines).forEach((key) => {\n  const segs = key.split('.');\n  let target = process;\n  for (let i = 0; i < segs.length; i++) {\n    const seg = segs[i];\n    if (i === segs.length - 1) {\n      target[seg] = defines[key];\n    } else {\n      target = target[seg] || (target[seg] = {});\n    }\n  }\n});\n"],
  "mappings": ";AAYA,SAAS,SAAS,QAAQ,MAAM;AAC9B,MAAI,KAAK,SAAS,GAAG;AACnB,mBAAe,MAAM,IAAI,GAAG,IAAI,CAAC;AAAA,EACnC,OAAO;AACL,mBAAe,GAAG;AAAA,EACpB;AACF;AAEA,IAAM,QAAQ;AACd,IAAM,WAAW;AACjB,IAAM,UAAU;AAChB,IAAM,MAAM,CAAC;AACb,IAAM,OAAO,CAAC;AACd,IAAM,UAAU;AAChB,IAAM,WAAW,CAAC;AAClB,IAAM,UAAU,CAAC;AACjB,IAAM,SAAS,CAAC;AAEhB,SAAS,OAAO;AAAC;AAEjB,IAAM,KAAK;AACX,IAAM,cAAc;AACpB,IAAM,OAAO;AACb,IAAM,MAAM;AACZ,IAAM,iBAAiB;AACvB,IAAM,qBAAqB;AAC3B,IAAM,OAAO;AAEb,SAAS,QAAQ,MAAM;AACrB,QAAM,IAAI,MAAM,kCAAkC;AACpD;AAEA,SAAS,MAAM;AACb,SAAO;AACT;AAEA,SAAS,MAAM,KAAK;AAClB,QAAM,IAAI,MAAM,gCAAgC;AAClD;AAEA,SAAS,QAAQ;AACf,SAAO;AACT;AAGA,IAAI,cAAc,WAAW,eAAe,CAAC;AAC7C,IAAI,iBACF,YAAY,OACZ,YAAY,UACZ,YAAY,SACZ,YAAY,QACZ,YAAY,aACZ,WAAY;AACV,UAAO,oBAAI,KAAK,GAAE,QAAQ;AAC5B;AAIF,SAAS,OAAO,mBAAmB;AACjC,MAAI,YAAY,eAAe,KAAK,WAAW,IAAI;AACnD,MAAI,UAAU,KAAK,MAAM,SAAS;AAClC,MAAI,cAAc,KAAK,MAAO,YAAY,IAAK,GAAG;AAClD,MAAI,mBAAmB;AACrB,cAAU,UAAU,kBAAkB,CAAC;AACvC,kBAAc,cAAc,kBAAkB,CAAC;AAC/C,QAAI,cAAc,GAAG;AACnB;AACA,qBAAe;AAAA,IACjB;AAAA,EACF;AACA,SAAO,CAAC,SAAS,WAAW;AAC9B;AAEA,OAAO,SAAS,WAAY;AAC1B,MAAI,YAAY,eAAe,KAAK,WAAW,IAAI;AACnD,MAAI,UAAU,KAAK,MAAM,SAAS;AAClC,MAAI,cAAc,KAAK,MAAO,YAAY,IAAK,GAAG;AAClD,SAAO,OAAO,UAAU,GAAG,IAAI,OAAO,WAAW;AACnD;AAEA,IAAI,YAAY,oBAAI,KAAK;AAEzB,SAAS,SAAS;AAChB,MAAI,cAAc,oBAAI,KAAK;AAC3B,MAAI,MAAM,cAAc;AACxB,SAAO,MAAM;AACf;AAEO,IAAI,UAAU;AAAA,EACnB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAIA,IAAM,UAAU,CAAC;AACjB,OAAO,KAAK,OAAO,EAAE,QAAQ,CAAC,QAAQ;AACpC,QAAM,OAAO,IAAI,MAAM,GAAG;AAC1B,MAAI,SAAS;AACb,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,UAAM,MAAM,KAAK,CAAC;AAClB,QAAI,MAAM,KAAK,SAAS,GAAG;AACzB,aAAO,GAAG,IAAI,QAAQ,GAAG;AAAA,IAC3B,OAAO;AACL,eAAS,OAAO,GAAG,MAAM,OAAO,GAAG,IAAI,CAAC;AAAA,IAC1C;AAAA,EACF;AACF,CAAC;",
  "names": []
}
