"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to2, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to2, key) && key !== except)
        __defProp(to2, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to2;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var promises_exports = {};
__export(promises_exports, {
  access: () => access,
  appendFile: () => appendFile,
  chmod: () => chmod,
  chown: () => chown,
  copyFile: () => copyFile,
  cp: () => cp,
  lchmod: () => lchmod,
  lchown: () => lchown,
  link: () => link,
  lstat: () => lstat,
  lutimes: () => lutimes,
  mkdir: () => mkdir,
  mkdtemp: () => mkdtemp,
  open: () => open,
  opendir: () => opendir,
  readFile: () => readFile,
  readdir: () => readdir,
  readlink: () => readlink,
  realpath: () => realpath,
  rename: () => rename,
  rm: () => rm,
  rmdir: () => rmdir,
  stat: () => stat,
  symlink: () => symlink,
  to: () => to,
  truncate: () => truncate,
  unlink: () => unlink,
  utimes: () => utimes,
  watch: () => watch,
  writeFile: () => writeFile
});
module.exports = __toCommonJS(promises_exports);
var import_chunk_6SZKM6EC = require("../chunk-6SZKM6EC.cjs");
var notAvailable = () => {
  throw new Error("Not available on this platform");
};
var access = () => notAvailable();
var copyFile = () => notAvailable();
var open = () => notAvailable();
var rename = () => notAvailable();
var truncate = () => notAvailable();
var rmdir = () => notAvailable();
var rm = () => notAvailable();
var mkdir = () => notAvailable();
var readdir = () => notAvailable();
var readlink = () => notAvailable();
var symlink = () => notAvailable();
var lstat = () => notAvailable();
var stat = () => notAvailable();
var link = () => notAvailable();
var unlink = () => notAvailable();
var chmod = () => notAvailable();
var lchmod = () => notAvailable();
var lchown = () => notAvailable();
var lutimes = () => notAvailable();
var chown = () => notAvailable();
var utimes = () => notAvailable();
var to = () => notAvailable();
var realpath = () => notAvailable();
var mkdtemp = () => notAvailable();
var writeFile = () => notAvailable();
var appendFile = () => notAvailable();
var readFile = () => notAvailable();
var opendir = () => notAvailable();
var watch = () => notAvailable();
var cp = () => notAvailable();
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  access,
  appendFile,
  chmod,
  chown,
  copyFile,
  cp,
  lchmod,
  lchown,
  link,
  lstat,
  lutimes,
  mkdir,
  mkdtemp,
  open,
  opendir,
  readFile,
  readdir,
  readlink,
  realpath,
  rename,
  rm,
  rmdir,
  stat,
  symlink,
  to,
  truncate,
  unlink,
  utimes,
  watch,
  writeFile
});
//# sourceMappingURL=promises.cjs.map
