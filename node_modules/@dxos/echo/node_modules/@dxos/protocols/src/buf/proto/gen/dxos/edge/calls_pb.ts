//
// Copyright 2024 DXOS.org
//

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts,import_extension=js"
// @generated from file dxos/edge/calls.proto (package dxos.edge.calls, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";
import { file_dxos_keys } from "../keys_pb.js";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file dxos/edge/calls.proto.
 */
export const file_dxos_edge_calls: GenFile = /*@__PURE__*/
  fileDesc("ChVkeG9zL2VkZ2UvY2FsbHMucHJvdG8SD2R4b3MuZWRnZS5jYWxscyKEAgoGVHJhY2tzEhIKBWF1ZGlvGAEgASgJSACIAQESGgoNYXVkaW9fZW5hYmxlZBgCIAEoCEgBiAEBEhIKBXZpZGVvGAMgASgJSAKIAQESGgoNdmlkZW9fZW5hYmxlZBgEIAEoCEgDiAEBEhgKC3NjcmVlbnNoYXJlGAUgASgJSASIAQESIAoTc2NyZWVuc2hhcmVfZW5hYmxlZBgGIAEoCEgFiAEBQggKBl9hdWRpb0IQCg5fYXVkaW9fZW5hYmxlZEIICgZfdmlkZW9CEAoOX3ZpZGVvX2VuYWJsZWRCDgoMX3NjcmVlbnNoYXJlQhYKFF9zY3JlZW5zaGFyZV9lbmFibGVkItMCCglVc2VyU3RhdGUSCgoCaWQYASABKAkSDAoEbmFtZRgCIAEoCRIjChZ0cmFuc2NlaXZlcl9zZXNzaW9uX2lkGAMgASgJSACIAQESEwoLcmFpc2VkX2hhbmQYBCABKAgSEAoIc3BlYWtpbmcYBSABKAgSDgoGam9pbmVkGAYgASgIEicKBnRyYWNrcxgHIAEoCzIXLmR4b3MuZWRnZS5jYWxscy5UcmFja3MSPgoKYWN0aXZpdGllcxgIIAMoCzIqLmR4b3MuZWRnZS5jYWxscy5Vc2VyU3RhdGUuQWN0aXZpdGllc0VudHJ5GkwKD0FjdGl2aXRpZXNFbnRyeRILCgNrZXkYASABKAkSKAoFdmFsdWUYAiABKAsyGS5keG9zLmVkZ2UuY2FsbHMuQWN0aXZpdHk6AjgBQhkKF190cmFuc2NlaXZlcl9zZXNzaW9uX2lkInIKCEFjdGl2aXR5EjwKEWxhbXBvcnRfdGltZXN0YW1wGAEgASgLMiEuZHhvcy5lZGdlLmNhbGxzLkxhbXBvcnRUaW1lc3RhbXASKAoHcGF5bG9hZBgKIAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3QiWwoOTWVldGluZ1BheWxvYWQSEgoKbWVldGluZ19pZBgBIAEoCRIWCg50cmFuc2NyaXB0X2R4bhgCIAEoCRIdChV0cmFuc2NyaXB0aW9uX2VuYWJsZWQYAyABKAgiLwoQTGFtcG9ydFRpbWVzdGFtcBIPCgd2ZXJzaW9uGAEgASgFEgoKAmlkGAIgASgJYgZwcm90bzM", [file_google_protobuf_struct, file_dxos_keys]);

/**
 * @generated from message dxos.edge.calls.Tracks
 */
export type Tracks = Message<"dxos.edge.calls.Tracks"> & {
  /**
   * @generated from field: optional string audio = 1;
   */
  audio?: string;

  /**
   * @generated from field: optional bool audio_enabled = 2;
   */
  audioEnabled?: boolean;

  /**
   * @generated from field: optional string video = 3;
   */
  video?: string;

  /**
   * @generated from field: optional bool video_enabled = 4;
   */
  videoEnabled?: boolean;

  /**
   * @generated from field: optional string screenshare = 5;
   */
  screenshare?: string;

  /**
   * @generated from field: optional bool screenshare_enabled = 6;
   */
  screenshareEnabled?: boolean;
};

/**
 * Describes the message dxos.edge.calls.Tracks.
 * Use `create(TracksSchema)` to create a new message.
 */
export const TracksSchema: GenMessage<Tracks> = /*@__PURE__*/
  messageDesc(file_dxos_edge_calls, 0);

/**
 * @generated from message dxos.edge.calls.UserState
 */
export type UserState = Message<"dxos.edge.calls.UserState"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: optional string transceiver_session_id = 3;
   */
  transceiverSessionId?: string;

  /**
   * @generated from field: bool raised_hand = 4;
   */
  raisedHand: boolean;

  /**
   * @generated from field: bool speaking = 5;
   */
  speaking: boolean;

  /**
   * @generated from field: bool joined = 6;
   */
  joined: boolean;

  /**
   * @generated from field: dxos.edge.calls.Tracks tracks = 7;
   */
  tracks?: Tracks;

  /**
   * @generated from field: map<string, dxos.edge.calls.Activity> activities = 8;
   */
  activities: { [key: string]: Activity };
};

/**
 * Describes the message dxos.edge.calls.UserState.
 * Use `create(UserStateSchema)` to create a new message.
 */
export const UserStateSchema: GenMessage<UserState> = /*@__PURE__*/
  messageDesc(file_dxos_edge_calls, 1);

/**
 * *
 * Activity state.
 * It will be merged across all users in the room based on the Lamport timestamp (last one wins).
 *
 * @generated from message dxos.edge.calls.Activity
 */
export type Activity = Message<"dxos.edge.calls.Activity"> & {
  /**
   * @generated from field: dxos.edge.calls.LamportTimestamp lamport_timestamp = 1;
   */
  lamportTimestamp?: LamportTimestamp;

  /**
   * @generated from field: google.protobuf.Struct payload = 10;
   */
  payload?: JsonObject;
};

/**
 * Describes the message dxos.edge.calls.Activity.
 * Use `create(ActivitySchema)` to create a new message.
 */
export const ActivitySchema: GenMessage<Activity> = /*@__PURE__*/
  messageDesc(file_dxos_edge_calls, 2);

/**
 * *
 * Meeting state.
 *
 * Used to encode/decode the Any payload of a call activity for the meeting plugin.
 *
 * @generated from message dxos.edge.calls.MeetingPayload
 */
export type MeetingPayload = Message<"dxos.edge.calls.MeetingPayload"> & {
  /**
   * @generated from field: string meeting_id = 1;
   */
  meetingId: string;

  /**
   * @generated from field: string transcript_dxn = 2;
   */
  transcriptDxn: string;

  /**
   * @generated from field: bool transcription_enabled = 3;
   */
  transcriptionEnabled: boolean;
};

/**
 * Describes the message dxos.edge.calls.MeetingPayload.
 * Use `create(MeetingPayloadSchema)` to create a new message.
 */
export const MeetingPayloadSchema: GenMessage<MeetingPayload> = /*@__PURE__*/
  messageDesc(file_dxos_edge_calls, 3);

/**
 * *
 * Lamport Timestamp.
 * @see https://en.wikipedia.org/wiki/Lamport_timestamp
 *
 * @generated from message dxos.edge.calls.LamportTimestamp
 */
export type LamportTimestamp = Message<"dxos.edge.calls.LamportTimestamp"> & {
  /**
   * @generated from field: int32 version = 1;
   */
  version: number;

  /**
   * @generated from field: string id = 2;
   */
  id: string;
};

/**
 * Describes the message dxos.edge.calls.LamportTimestamp.
 * Use `create(LamportTimestampSchema)` to create a new message.
 */
export const LamportTimestampSchema: GenMessage<LamportTimestamp> = /*@__PURE__*/
  messageDesc(file_dxos_edge_calls, 4);

