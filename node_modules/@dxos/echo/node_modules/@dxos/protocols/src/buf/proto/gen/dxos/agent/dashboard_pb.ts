//
// Copyright 2023 DXOS.org
//

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts,import_extension=js"
// @generated from file dxos/agent/dashboard.proto (package dxos.agent.dashboard, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";
import type { Runtime_Agent_Plugin } from "../config_pb.js";
import { file_dxos_config } from "../config_pb.js";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file dxos/agent/dashboard.proto.
 */
export const file_dxos_agent_dashboard: GenFile = /*@__PURE__*/
  fileDesc("ChpkeG9zL2FnZW50L2Rhc2hib2FyZC5wcm90bxIUZHhvcy5hZ2VudC5kYXNoYm9hcmQimgIKC0FnZW50U3RhdHVzEjgKBnN0YXR1cxgBIAEoDjIoLmR4b3MuYWdlbnQuZGFzaGJvYXJkLkFnZW50U3RhdHVzLlN0YXR1cxI9CgZtZW1vcnkYAiABKAsyKC5keG9zLmFnZW50LmRhc2hib2FyZC5BZ2VudFN0YXR1cy5NZW1vcnlIAIgBARIyCgdwbHVnaW5zGAMgAygLMiEuZHhvcy5hZ2VudC5kYXNoYm9hcmQuUGx1Z2luU3RhdGUaOAoGTWVtb3J5Eg0KBXRvdGFsGAEgASgJEgwKBGZyZWUYAiABKAkSEQoJcmFtX3VzYWdlGAMgASgJIhkKBlN0YXR1cxIGCgJPThAAEgcKA09GRhABQgkKB19tZW1vcnkiTAoLUGx1Z2luU3RhdGUSCgoCaWQYASABKAkSMQoGY29uZmlnGAIgASgLMiEuZHhvcy5jb25maWcuUnVudGltZS5BZ2VudC5QbHVnaW4yWQoQRGFzaGJvYXJkU2VydmljZRJFCgZzdGF0dXMSFi5nb29nbGUucHJvdG9idWYuRW1wdHkaIS5keG9zLmFnZW50LmRhc2hib2FyZC5BZ2VudFN0YXR1czABYgZwcm90bzM", [file_google_protobuf_empty, file_google_protobuf_struct, file_dxos_config]);

/**
 * @generated from message dxos.agent.dashboard.AgentStatus
 */
export type AgentStatus = Message<"dxos.agent.dashboard.AgentStatus"> & {
  /**
   * @generated from field: dxos.agent.dashboard.AgentStatus.Status status = 1;
   */
  status: AgentStatus_Status;

  /**
   * @generated from field: optional dxos.agent.dashboard.AgentStatus.Memory memory = 2;
   */
  memory?: AgentStatus_Memory;

  /**
   * @generated from field: repeated dxos.agent.dashboard.PluginState plugins = 3;
   */
  plugins: PluginState[];
};

/**
 * Describes the message dxos.agent.dashboard.AgentStatus.
 * Use `create(AgentStatusSchema)` to create a new message.
 */
export const AgentStatusSchema: GenMessage<AgentStatus> = /*@__PURE__*/
  messageDesc(file_dxos_agent_dashboard, 0);

/**
 * @generated from message dxos.agent.dashboard.AgentStatus.Memory
 */
export type AgentStatus_Memory = Message<"dxos.agent.dashboard.AgentStatus.Memory"> & {
  /**
   * / The total amount of system memory in bytes as a string.
   *
   * @generated from field: string total = 1;
   */
  total: string;

  /**
   * / The amount of free system memory in bytes as a string.
   *
   * @generated from field: string free = 2;
   */
  free: string;

  /**
   * @generated from field: string ram_usage = 3;
   */
  ramUsage: string;
};

/**
 * Describes the message dxos.agent.dashboard.AgentStatus.Memory.
 * Use `create(AgentStatus_MemorySchema)` to create a new message.
 */
export const AgentStatus_MemorySchema: GenMessage<AgentStatus_Memory> = /*@__PURE__*/
  messageDesc(file_dxos_agent_dashboard, 0, 0);

/**
 * @generated from enum dxos.agent.dashboard.AgentStatus.Status
 */
export enum AgentStatus_Status {
  /**
   * @generated from enum value: ON = 0;
   */
  ON = 0,

  /**
   * @generated from enum value: OFF = 1;
   */
  OFF = 1,
}

/**
 * Describes the enum dxos.agent.dashboard.AgentStatus.Status.
 */
export const AgentStatus_StatusSchema: GenEnum<AgentStatus_Status> = /*@__PURE__*/
  enumDesc(file_dxos_agent_dashboard, 0, 0);

/**
 * @generated from message dxos.agent.dashboard.PluginState
 */
export type PluginState = Message<"dxos.agent.dashboard.PluginState"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: dxos.config.Runtime.Agent.Plugin config = 2;
   */
  config?: Runtime_Agent_Plugin;
};

/**
 * Describes the message dxos.agent.dashboard.PluginState.
 * Use `create(PluginStateSchema)` to create a new message.
 */
export const PluginStateSchema: GenMessage<PluginState> = /*@__PURE__*/
  messageDesc(file_dxos_agent_dashboard, 1);

/**
 * @generated from service dxos.agent.dashboard.DashboardService
 */
export const DashboardService: GenService<{
  /**
   * @generated from rpc dxos.agent.dashboard.DashboardService.status
   */
  status: {
    methodKind: "server_streaming";
    input: typeof EmptySchema;
    output: typeof AgentStatusSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_dxos_agent_dashboard, 0);

