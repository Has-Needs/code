import type { Stream, RequestOptions } from "@dxos/codec-protobuf";
import substitutions from "../../substitutions.js";
import * as dxos_client_services from "./client/services.js";
import * as dxos_error from "./error.js";
/**
 * Defined in:
 *   {@link file://./../../dxos/tracing.proto}
 */
export declare enum TraceLevel {
    DISABLED = 0,
    PRODUCTION = 10,
    DEVELOPMENT = 20,
    DEBUG = 30
}
/**
 * Defined in:
 *   {@link file://./../../dxos/tracing.proto}
 */
export interface Resource {
    id: number;
    className: string;
    instanceId: number;
    info: ReturnType<(typeof substitutions)["google.protobuf.Struct"]["decode"]>;
    links?: ResourceLink[];
    metrics?: Metric[];
}
/**
 * Defined in:
 *   {@link file://./../../dxos/tracing.proto}
 */
export interface ResourceLink {
    from: number;
    to: number;
    attributes: ReturnType<(typeof substitutions)["google.protobuf.Struct"]["decode"]>;
}
/**
 * Defined in:
 *   {@link file://./../../dxos/tracing.proto}
 */
export interface Span {
    id: number;
    /**
     * Options:
     *   - proto3_optional = true
     */
    parentId?: number;
    /**
     * Options:
     *   - proto3_optional = true
     */
    resourceId?: number;
    methodName: string;
    startTs: string;
    /**
     * Options:
     *   - proto3_optional = true
     */
    endTs?: string;
    /**
     * Options:
     *   - proto3_optional = true
     */
    error?: dxos_error.Error;
}
/**
 * Defined in:
 *   {@link file://./../../dxos/tracing.proto}
 */
export interface StreamTraceEvent {
    resourceAdded?: StreamTraceEvent.ResourceAdded[];
    resourceRemoved?: StreamTraceEvent.ResourceRemoved[];
    spanAdded?: StreamTraceEvent.SpanAdded[];
    logAdded?: StreamTraceEvent.LogAdded[];
}
export declare namespace StreamTraceEvent {
    /**
     * Defined in:
     *   {@link file://./../../dxos/tracing.proto}
     */
    interface ResourceAdded {
        resource: Resource;
    }
    /**
     * Defined in:
     *   {@link file://./../../dxos/tracing.proto}
     */
    interface ResourceRemoved {
        id: number;
    }
    /**
     * Defined in:
     *   {@link file://./../../dxos/tracing.proto}
     */
    interface SpanAdded {
        span: Span;
    }
    /**
     * Defined in:
     *   {@link file://./../../dxos/tracing.proto}
     */
    interface LogAdded {
        log: dxos_client_services.LogEntry;
    }
}
/**
 * Defined in:
 *   {@link file://./../../dxos/tracing.proto}
 */
export interface Metric {
    name: string;
    counter?: Metric.Counter;
    timeSeries?: Metric.TimeSeries;
    multiCounter?: Metric.MultiCounter;
    custom?: Metric.Custom;
}
export declare namespace Metric {
    /**
     * Defined in:
     *   {@link file://./../../dxos/tracing.proto}
     */
    interface Counter {
        value: number;
        /**
         * Options:
         *   - proto3_optional = true
         */
        units?: string;
    }
    /**
     * Defined in:
     *   {@link file://./../../dxos/tracing.proto}
     */
    interface MultiCounter {
        records?: Metric.MultiCounter.Record[];
        /**
         * Options:
         *   - proto3_optional = true
         */
        units?: string;
    }
    namespace MultiCounter {
        /**
         * Defined in:
         *   {@link file://./../../dxos/tracing.proto}
         */
        interface Record {
            key: string;
            value: number;
        }
    }
    /**
     * Defined in:
     *   {@link file://./../../dxos/tracing.proto}
     */
    interface TimeSeries {
        tracks?: Metric.TimeSeries.Track[];
    }
    namespace TimeSeries {
        /**
         * Defined in:
         *   {@link file://./../../dxos/tracing.proto}
         */
        interface Point {
            value: number;
        }
        /**
         * Defined in:
         *   {@link file://./../../dxos/tracing.proto}
         */
        interface Track {
            name: string;
            /**
             * Options:
             *   - proto3_optional = true
             */
            units?: string;
            points?: Metric.TimeSeries.Point[];
            total: number;
        }
    }
    /**
     * Defined in:
     *   {@link file://./../../dxos/tracing.proto}
     */
    interface Custom {
        payload: ReturnType<(typeof substitutions)["google.protobuf.Struct"]["decode"]>;
    }
}
/**
 * Defined in:
 *   {@link file://./../../dxos/tracing.proto}
 */
export interface TracingService {
    streamTrace: (request: void, options?: RequestOptions) => Stream<StreamTraceEvent>;
}
//# sourceMappingURL=tracing.d.ts.map