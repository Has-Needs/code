import substitutions from "../../../../substitutions.js";
/**
 * The payload for a SignedMessage sent during handshake for replication authentication.
 *
 * Defined in:
 *   {@link file://./../../../../dxos/halo/credentials/auth.proto}
 */
export interface Auth {
    /**
     * The publicKey of the target Space for these credentials.
     */
    spaceKey: ReturnType<(typeof substitutions)["dxos.keys.PublicKey"]["decode"]>;
    /**
     * The publicKey of the authenticating Device.
     */
    deviceKey: ReturnType<(typeof substitutions)["dxos.keys.PublicKey"]["decode"]>;
    /**
     * The publicKey of the authenticating Identity.
     */
    identityKey: ReturnType<(typeof substitutions)["dxos.keys.PublicKey"]["decode"]>;
    /**
     * The publicKey of the authenticating Identity.
     *
     * Options:
     *   - proto3_optional = true
     */
    feedKey?: ReturnType<(typeof substitutions)["dxos.keys.PublicKey"]["decode"]>;
    /**
     * FeedAdmit message to the should be written to a control feed in case the `feed_key` is not admitted to the space.
     *
     * Options:
     *   - proto3_optional = true
     */
    feedAdmit?: ReturnType<(typeof substitutions)["google.protobuf.Any"]["decode"]>;
}
//# sourceMappingURL=auth.d.ts.map