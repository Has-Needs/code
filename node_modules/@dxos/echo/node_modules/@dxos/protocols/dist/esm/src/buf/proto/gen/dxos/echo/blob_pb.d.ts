import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";
/**
 * Describes the file dxos/echo/blob.proto.
 */
export declare const file_dxos_echo_blob: GenFile;
/**
 * @generated from message dxos.echo.blob.BlobMeta
 */
export type BlobMeta = Message<"dxos.echo.blob.BlobMeta"> & {
    /**
     * / Hash of blob content.
     *
     * @generated from field: bytes id = 1;
     */
    id: Uint8Array;
    /**
     * @generated from field: dxos.echo.blob.BlobMeta.State state = 2;
     */
    state: BlobMeta_State;
    /**
     * / Length of blob in bytes.
     *
     * @generated from field: int32 length = 3;
     */
    length: number;
    /**
     * / Size of chunk in bytes. Must be a power of 2. Default is 4096.
     *
     * @generated from field: int32 chunk_size = 4;
     */
    chunkSize: number;
    /**
     * TODO(dmaretskyi): Optional for future compatability: we might want to compress bitfields with RLE encoding.
     *
     * @generated from field: optional bytes bitfield = 5;
     */
    bitfield?: Uint8Array;
    /**
     * @generated from field: optional google.protobuf.Timestamp created = 6;
     */
    created?: Timestamp;
    /**
     * @generated from field: optional google.protobuf.Timestamp updated = 7;
     */
    updated?: Timestamp;
};
/**
 * Describes the message dxos.echo.blob.BlobMeta.
 * Use `create(BlobMetaSchema)` to create a new message.
 */
export declare const BlobMetaSchema: GenMessage<BlobMeta>;
/**
 * @generated from enum dxos.echo.blob.BlobMeta.State
 */
export declare enum BlobMeta_State {
    /**
     * @generated from enum value: PARTIALLY_PRESENT = 0;
     */
    PARTIALLY_PRESENT = 0,
    /**
     * @generated from enum value: FULLY_PRESENT = 1;
     */
    FULLY_PRESENT = 1
}
/**
 * Describes the enum dxos.echo.blob.BlobMeta.State.
 */
export declare const BlobMeta_StateSchema: GenEnum<BlobMeta_State>;
//# sourceMappingURL=blob_pb.d.ts.map