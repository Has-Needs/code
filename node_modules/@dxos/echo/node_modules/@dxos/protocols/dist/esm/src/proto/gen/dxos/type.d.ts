import substitutions from "../../substitutions.js";
import * as dxos_registry from "./registry.js";
/**
 * Defined in:
 *   {@link file://./../../dxos/type.proto}
 */
export interface Repo {
    name: string;
    url: string;
    version: string;
}
/**
 * Defined in:
 *   {@link file://./../../dxos/type.proto}
 */
export interface App {
    /**
     * Optional **semver 2.0** compliant record version.
     * Should conform to the semver regex (see https://semver.org/).
     *
     * Options:
     *   - proto3_optional = true
     */
    version?: string;
    /**
     * Options:
     *   - proto3_optional = true
     */
    license?: string;
    repos?: Repo[];
    /**
     * App bundle content Id in the CID v0 format (https://docs.ipfs.io/concepts/content-addressing/#identifier-formats).
     *
     * Options:
     *   - proto3_optional = true
     */
    bundle?: Uint8Array;
    web?: App.Web;
    /**
     * Options:
     *   - proto3_optional = true
     */
    extension?: dxos_registry.Record.Extension;
}
export declare namespace App {
    /**
     * Defined in:
     *   {@link file://./../../dxos/type.proto}
     */
    interface Web {
        /**
         * Relative path in resource to entrypoint, defaults to index.html.
         *
         * Options:
         *   - proto3_optional = true
         */
        indexFile?: string;
        /**
         * Relative path in resource to entrypoint, defaults to main.js.
         *
         * Options:
         *   - proto3_optional = true
         */
        entryPoint?: string;
    }
}
/**
 * Defined in:
 *   {@link file://./../../dxos/type.proto}
 */
export interface Bot {
    /**
     * Optional **semver 2.0** compliant record version.
     * Should conform to the semver regex (see https://semver.org/).
     */
    version: string;
    license: string;
    repos?: Repo[];
    /**
     * Bot bundle content Id in the CID v0 format (https://docs.ipfs.io/concepts/content-addressing/#identifier-formats).
     */
    bundle: Uint8Array;
    /**
     * This would be the path to the bot executable in bot-factory's file-system.
     */
    localPath: string;
    extension: dxos_registry.Record.Extension;
}
/**
 * Defined in:
 *   {@link file://./../../dxos/type.proto}
 */
export interface StateMachine {
    /**
     * Set of protobuf messages.
     */
    mutationProtobufDefs: ReturnType<(typeof substitutions)["google.protobuf.Struct"]["decode"]>;
    /**
     * Set of protobuf messages.
     */
    snapshotProtobufDefs: ReturnType<(typeof substitutions)["google.protobuf.Struct"]["decode"]>;
    codeIpfsCid: Uint8Array;
}
/**
 * Defined in:
 *   {@link file://./../../dxos/type.proto}
 */
export interface File {
    contentType: string;
    fileName: string;
    /**
     * File content Id in the CID v0 format (https://docs.ipfs.io/concepts/content-addressing/#identifier-formats).
     */
    bundle: Uint8Array;
    extension: dxos_registry.Record.Extension;
}
/**
 * Defined in:
 *   {@link file://./../../dxos/type.proto}
 */
export interface KUBE {
    url: string;
    extension: dxos_registry.Record.Extension;
}
/**
 * Defined in:
 *   {@link file://./../../dxos/type.proto}
 */
export interface Service {
    type: string;
    kube: Uint8Array;
    extension: dxos_registry.Record.Extension;
}
/**
 * Defined in:
 *   {@link file://./../../dxos/type.proto}
 */
export interface IPFS {
    protocol: string;
    addresses?: string[];
    extension: dxos_registry.Record.Extension;
}
/**
 * Defined in:
 *   {@link file://./../../dxos/type.proto}
 */
export interface BotFactory {
    topic: string;
    extension: dxos_registry.Record.Extension;
}
/**
 * Defined in:
 *   {@link file://./../../dxos/type.proto}
 */
export interface Signal {
    bootstrap: string;
    url: string;
    extension: dxos_registry.Record.Extension;
}
/**
 * Defined in:
 *   {@link file://./../../dxos/type.proto}
 */
export interface AppServer {
    url: string;
    extension: dxos_registry.Record.Extension;
}
//# sourceMappingURL=type.d.ts.map