export type Command = 'begin' | 'end' | 'update';
export type TraceStatus = 'ok' | 'error';
export type DataType = Record<string, any>;
export type TracingContext = {
    span?: {
        id: string;
        command?: Command;
        parent?: string;
        status?: TraceStatus;
        data?: DataType;
    };
};
export type Trace = {
    begin: (opts: {
        id: string;
        parentId?: string;
        data?: DataType;
    }) => TracingContext;
    end: (opts: {
        id: string;
        status?: 'ok' | 'error';
        data?: DataType;
    }) => TracingContext;
    update: (opts: {
        id: string;
        data: DataType;
    }) => TracingContext;
    error: (opts: {
        id: string;
        error: Error;
        data?: DataType;
    }) => TracingContext;
};
export declare const trace: Trace;
export type DataPipelineProcessed = {
    spaceKey: string;
    feedKey: string;
    seq: number;
};
//# sourceMappingURL=tracing.d.ts.map