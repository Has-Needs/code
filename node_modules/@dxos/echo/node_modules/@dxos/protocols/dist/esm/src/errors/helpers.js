//
// Copyright 2023 DXOS.org
//
import { invariant } from '@dxos/invariant';
import { SystemError } from './base-errors.js';
export const reconstructError = (error) => {
    const { name, message, context } = error;
    return errorFromCode(name, message, context);
};
const errorRegistry = new Map();
export const registerError = (code, make) => {
    invariant(!errorRegistry.has(code), `Error code already registered: ${code}`);
    errorRegistry.set(code, make);
};
export const registerErrorNoArgs = (code, Constructor) => {
    registerError(code, () => new Constructor());
};
export const registerErrorMessageContext = (code, Constructor) => {
    registerError(code, (message, context) => new Constructor(message, context));
};
export const errorFromCode = (code, message, context) => {
    if (code && errorRegistry.has(code)) {
        return errorRegistry.get(code)(message, context);
    }
    else {
        return new SystemError(code ?? 'Error', message, context);
    }
};
//# sourceMappingURL=helpers.js.map