import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Any, EmptySchema, Timestamp } from "@bufbuild/protobuf/wkt";
import type { PublicKey } from "../../keys_pb.js";
import type { Message } from "@bufbuild/protobuf";
/**
 * Describes the file dxos/mesh/teleport/gossip.proto.
 */
export declare const file_dxos_mesh_teleport_gossip: GenFile;
/**
 * @generated from message dxos.mesh.teleport.gossip.GossipMessage
 */
export type GossipMessage = Message<"dxos.mesh.teleport.gossip.GossipMessage"> & {
    /**
     * @generated from field: dxos.keys.PublicKey peer_id = 1;
     */
    peerId?: PublicKey;
    /**
     * / Used to route different payload types to correct listeners.
     *
     * @generated from field: string channel_id = 2;
     */
    channelId: string;
    /**
     * / Peer tracks what had been sent by message id.
     *
     * @generated from field: dxos.keys.PublicKey message_id = 3;
     */
    messageId?: PublicKey;
    /**
     * @generated from field: google.protobuf.Timestamp timestamp = 4;
     */
    timestamp?: Timestamp;
    /**
     * @generated from field: google.protobuf.Any payload = 10;
     */
    payload?: Any;
};
/**
 * Describes the message dxos.mesh.teleport.gossip.GossipMessage.
 * Use `create(GossipMessageSchema)` to create a new message.
 */
export declare const GossipMessageSchema: GenMessage<GossipMessage>;
/**
 * @generated from service dxos.mesh.teleport.gossip.GossipService
 */
export declare const GossipService: GenService<{
    /**
     * @generated from rpc dxos.mesh.teleport.gossip.GossipService.Announce
     */
    announce: {
        methodKind: "unary";
        input: typeof GossipMessageSchema;
        output: typeof EmptySchema;
    };
}>;
//# sourceMappingURL=gossip_pb.d.ts.map