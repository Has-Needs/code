{"version":3,"file":"hocTransformer.mjs","sources":["../../../src/handlers/hocTransformer.ts"],"sourcesContent":["import { ReactNode } from \"react\";\nimport { getComponentName } from \"../shared\";\nimport { DisplayNameTransform } from \"../type\";\n\nconst calculateDisplayNameTransform = (\n  prevName: string,\n  displayNameTransform: DisplayNameTransform\n) => {\n  if (displayNameTransform.type === \"prefix\") {\n    return displayNameTransform.value + prevName;\n  }\n  if (displayNameTransform.type === \"rewrite\") {\n    return displayNameTransform.value;\n  }\n  if (displayNameTransform.type === \"rewrite-dynamic\") {\n    return displayNameTransform.value(prevName);\n  }\n  return prevName;\n};\n\n// Using classes to save memory\nexport class HocTransformer implements ProxyHandler<Function> {\n  _displayNameField = Symbol(\"displayName\");\n  constructor(\n    private transformer:\n      | null\n      | ((...args: readonly any[]) => ReadonlyArray<any> | any[]),\n    private resultTransformer: null | ((result: ReactNode) => ReactNode),\n    private displayNameTransform: null | DisplayNameTransform\n  ) {}\n\n  apply(target: Function, self: Function, args: any[]) {\n    const result = target.apply(\n      self,\n      this.transformer ? this.transformer(args) : args\n    );\n\n    return this.resultTransformer ? this.resultTransformer(result) : result;\n  }\n\n  get(target: Function, p: string | symbol, receiver: any) {\n    if (\n      process.env.NODE_ENV === \"production\" ||\n      p !== \"displayName\" ||\n      !this.displayNameTransform\n    ) {\n      return Reflect.get(target, p, receiver);\n    }\n    if (!(this._displayNameField in target)) {\n      // @ts-expect-error\n      target[this._displayNameField] = calculateDisplayNameTransform(\n        getComponentName(target),\n        this.displayNameTransform\n      );\n    }\n\n    // @ts-expect-error\n    return target[this._displayNameField];\n  }\n  set(target: Function, p: string | symbol, value: any) {\n    if (process.env.NODE_ENV !== \"production\" && p === \"displayName\") {\n      // @ts-expect-error\n      target[this._displayNameField] = value;\n      return true;\n    }\n    return Reflect.set(target, p, value);\n  }\n}\n"],"names":[],"mappings":";;AAIA,MAAM,6BAAA,GAAgC,CACpC,QAAA,EACA,oBACG,KAAA;AACH,EAAI,IAAA,oBAAA,CAAqB,SAAS,QAAU,EAAA;AAC1C,IAAA,OAAO,qBAAqB,KAAQ,GAAA,QAAA,CAAA;AAAA,GACtC;AACA,EAAI,IAAA,oBAAA,CAAqB,SAAS,SAAW,EAAA;AAC3C,IAAA,OAAO,oBAAqB,CAAA,KAAA,CAAA;AAAA,GAC9B;AACA,EAAI,IAAA,oBAAA,CAAqB,SAAS,iBAAmB,EAAA;AACnD,IAAO,OAAA,oBAAA,CAAqB,MAAM,QAAQ,CAAA,CAAA;AAAA,GAC5C;AACA,EAAO,OAAA,QAAA,CAAA;AACT,CAAA,CAAA;AAGO,MAAM,cAAiD,CAAA;AAAA,EAE5D,WAAA,CACU,WAGA,EAAA,iBAAA,EACA,oBACR,EAAA;AALQ,IAAA,IAAA,CAAA,WAAA,GAAA,WAAA,CAAA;AAGA,IAAA,IAAA,CAAA,iBAAA,GAAA,iBAAA,CAAA;AACA,IAAA,IAAA,CAAA,oBAAA,GAAA,oBAAA,CAAA;AANV,IAAA,IAAA,CAAA,iBAAA,GAAoB,OAAO,aAAa,CAAA,CAAA;AAAA,GAOrC;AAAA,EAEH,KAAA,CAAM,MAAkB,EAAA,IAAA,EAAgB,IAAa,EAAA;AACnD,IAAA,MAAM,SAAS,MAAO,CAAA,KAAA;AAAA,MACpB,IAAA;AAAA,MACA,IAAK,CAAA,WAAA,GAAc,IAAK,CAAA,WAAA,CAAY,IAAI,CAAI,GAAA,IAAA;AAAA,KAC9C,CAAA;AAEA,IAAA,OAAO,IAAK,CAAA,iBAAA,GAAoB,IAAK,CAAA,iBAAA,CAAkB,MAAM,CAAI,GAAA,MAAA,CAAA;AAAA,GACnE;AAAA,EAEA,GAAA,CAAI,MAAkB,EAAA,CAAA,EAAoB,QAAe,EAAA;AACvD,IACE,IAAA,OAAA,CAAQ,IAAI,QAAa,KAAA,YAAA,IACzB,MAAM,aACN,IAAA,CAAC,KAAK,oBACN,EAAA;AACA,MAAA,OAAO,OAAQ,CAAA,GAAA,CAAI,MAAQ,EAAA,CAAA,EAAG,QAAQ,CAAA,CAAA;AAAA,KACxC;AACA,IAAI,IAAA,EAAE,IAAK,CAAA,iBAAA,IAAqB,MAAS,CAAA,EAAA;AAEvC,MAAO,MAAA,CAAA,IAAA,CAAK,iBAAiB,CAAI,GAAA,6BAAA;AAAA,QAC/B,iBAAiB,MAAM,CAAA;AAAA,QACvB,IAAK,CAAA,oBAAA;AAAA,OACP,CAAA;AAAA,KACF;AAGA,IAAO,OAAA,MAAA,CAAO,KAAK,iBAAiB,CAAA,CAAA;AAAA,GACtC;AAAA,EACA,GAAA,CAAI,MAAkB,EAAA,CAAA,EAAoB,KAAY,EAAA;AACpD,IAAA,IAAI,OAAQ,CAAA,GAAA,CAAI,QAAa,KAAA,YAAA,IAAgB,MAAM,aAAe,EAAA;AAEhE,MAAO,MAAA,CAAA,IAAA,CAAK,iBAAiB,CAAI,GAAA,KAAA,CAAA;AACjC,MAAO,OAAA,IAAA,CAAA;AAAA,KACT;AACA,IAAA,OAAO,OAAQ,CAAA,GAAA,CAAI,MAAQ,EAAA,CAAA,EAAG,KAAK,CAAA,CAAA;AAAA,GACrC;AACF;;;;"}