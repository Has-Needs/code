{"version":3,"file":"transformProps.mjs","sources":["../../src/transformProps.ts"],"sourcesContent":["import type { ComponentPropsWithRef } from \"react\";\nimport { createTransformProps } from \"./createTransformProps\";\nimport type {\n  CreateTransformPropsOptions,\n  PropsBase,\n  TransformProps,\n  TransformPropsReturn,\n} from \"./type\";\n\n/**\n * transformProps is a function that takes a component, a props transformer function, and an\n * optional display name prefix, and returns a higher-order component that wraps the input\n * component with the specified props transformations.\n *\n * @param Component The input component to be wrapped with the props transformations.\n * @param transformer A function that takes the new props and returns the previous props for the input component.\n * @param options Optional string to prefix the display name of the resulting component.\n * @returns A higher-order component that wraps the input component with the specified props transformations.\n */\nexport const transformProps: TransformProps = <\n  TComponent extends React.ComponentType<any>,\n  TNewProps extends PropsBase = ComponentPropsWithRef<TComponent>,\n  TPreviousProps extends ComponentPropsWithRef<TComponent> = ComponentPropsWithRef<TComponent>\n>(\n  Component: TComponent,\n  transformer: (props: TNewProps) => TPreviousProps,\n  options?: CreateTransformPropsOptions\n): TransformPropsReturn<TComponent, TNewProps> =>\n  createTransformProps(\n    // @ts-expect-error\n    transformer,\n    options\n  )(Component) as unknown as TransformPropsReturn<TComponent, TNewProps>;\n"],"names":[],"mappings":";;AAmBO,MAAM,cAAiC,GAAA,CAK5C,SACA,EAAA,WAAA,EACA,OAEA,KAAA,oBAAA;AAAA;AAAA,EAEE,WAAA;AAAA,EACA,OAAA;AACF,CAAA,CAAE,SAAS;;;;"}