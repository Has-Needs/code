{"version":3,"file":"mimicToNewComponent.cjs","sources":["../../../src/handlers/mimicToNewComponent.ts"],"sourcesContent":["export class MimicToNewComponentHandler implements ProxyHandler<object> {\n  private _componentProps = new WeakMap<Function, Map<PropertyKey, unknown>>();\n\n  get(target: Function, p: PropertyKey, receiver: any) {\n    const overridenProps = this._componentProps.get(target);\n    if (overridenProps && overridenProps.has(p)) {\n      return overridenProps.get(p);\n    }\n    return Reflect.get(target, p, receiver);\n  }\n  set(target: Function, p: PropertyKey, value: any) {\n    const overridenProps = this._componentProps.get(target);\n    if (overridenProps) {\n      overridenProps.set(p, value);\n      return true;\n    }\n\n    this._componentProps.set(target, new Map([[p, value]]));\n    return true;\n  }\n  defineProperty(\n    target: Function,\n    property: PropertyKey,\n    attributes: PropertyDescriptor\n  ) {\n    if (!(\"value\" in attributes)) {\n      console.error(\"Only value property is supported\");\n      return false;\n    }\n    const overridenProps = this._componentProps.get(target);\n    if (overridenProps) {\n      overridenProps.set(property, attributes.value);\n      return true;\n    }\n\n    this._componentProps.set(target, new Map([[property, attributes.value]]));\n    return true;\n  }\n  deleteProperty(target: Function, p: PropertyKey) {\n    // TODO: IMPROVE\n    const overridenProps = this._componentProps.get(target);\n    if (overridenProps) {\n      overridenProps.delete(p);\n      return true;\n    }\n    return Reflect.deleteProperty(target, p);\n  }\n  has(target: Function, prop: PropertyKey) {\n    return (\n      this._componentProps.get(target)?.has(prop) || Reflect.has(target, prop)\n    );\n  }\n}\n"],"names":[],"mappings":";;AAAO,MAAM,0BAA2D,CAAA;AAAA,EAAjE,WAAA,GAAA;AACL,IAAQ,IAAA,CAAA,eAAA,uBAAsB,OAA6C,EAAA,CAAA;AAAA,GAAA;AAAA,EAE3E,GAAA,CAAI,MAAkB,EAAA,CAAA,EAAgB,QAAe,EAAA;AACnD,IAAA,MAAM,cAAiB,GAAA,IAAA,CAAK,eAAgB,CAAA,GAAA,CAAI,MAAM,CAAA,CAAA;AACtD,IAAA,IAAI,cAAkB,IAAA,cAAA,CAAe,GAAI,CAAA,CAAC,CAAG,EAAA;AAC3C,MAAO,OAAA,cAAA,CAAe,IAAI,CAAC,CAAA,CAAA;AAAA,KAC7B;AACA,IAAA,OAAO,OAAQ,CAAA,GAAA,CAAI,MAAQ,EAAA,CAAA,EAAG,QAAQ,CAAA,CAAA;AAAA,GACxC;AAAA,EACA,GAAA,CAAI,MAAkB,EAAA,CAAA,EAAgB,KAAY,EAAA;AAChD,IAAA,MAAM,cAAiB,GAAA,IAAA,CAAK,eAAgB,CAAA,GAAA,CAAI,MAAM,CAAA,CAAA;AACtD,IAAA,IAAI,cAAgB,EAAA;AAClB,MAAe,cAAA,CAAA,GAAA,CAAI,GAAG,KAAK,CAAA,CAAA;AAC3B,MAAO,OAAA,IAAA,CAAA;AAAA,KACT;AAEA,IAAK,IAAA,CAAA,eAAA,CAAgB,GAAI,CAAA,MAAA,kBAAY,IAAA,GAAA,CAAI,CAAC,CAAC,CAAG,EAAA,KAAK,CAAC,CAAC,CAAC,CAAA,CAAA;AACtD,IAAO,OAAA,IAAA,CAAA;AAAA,GACT;AAAA,EACA,cAAA,CACE,MACA,EAAA,QAAA,EACA,UACA,EAAA;AACA,IAAI,IAAA,EAAE,WAAW,UAAa,CAAA,EAAA;AAC5B,MAAA,OAAA,CAAQ,MAAM,kCAAkC,CAAA,CAAA;AAChD,MAAO,OAAA,KAAA,CAAA;AAAA,KACT;AACA,IAAA,MAAM,cAAiB,GAAA,IAAA,CAAK,eAAgB,CAAA,GAAA,CAAI,MAAM,CAAA,CAAA;AACtD,IAAA,IAAI,cAAgB,EAAA;AAClB,MAAe,cAAA,CAAA,GAAA,CAAI,QAAU,EAAA,UAAA,CAAW,KAAK,CAAA,CAAA;AAC7C,MAAO,OAAA,IAAA,CAAA;AAAA,KACT;AAEA,IAAA,IAAA,CAAK,eAAgB,CAAA,GAAA,CAAI,MAAQ,kBAAA,IAAI,GAAI,CAAA,CAAC,CAAC,QAAA,EAAU,UAAW,CAAA,KAAK,CAAC,CAAC,CAAC,CAAA,CAAA;AACxE,IAAO,OAAA,IAAA,CAAA;AAAA,GACT;AAAA,EACA,cAAA,CAAe,QAAkB,CAAgB,EAAA;AAE/C,IAAA,MAAM,cAAiB,GAAA,IAAA,CAAK,eAAgB,CAAA,GAAA,CAAI,MAAM,CAAA,CAAA;AACtD,IAAA,IAAI,cAAgB,EAAA;AAClB,MAAA,cAAA,CAAe,OAAO,CAAC,CAAA,CAAA;AACvB,MAAO,OAAA,IAAA,CAAA;AAAA,KACT;AACA,IAAO,OAAA,OAAA,CAAQ,cAAe,CAAA,MAAA,EAAQ,CAAC,CAAA,CAAA;AAAA,GACzC;AAAA,EACA,GAAA,CAAI,QAAkB,IAAmB,EAAA;AA/C3C,IAAA,IAAA,EAAA,CAAA;AAgDI,IACE,OAAA,CAAA,CAAA,EAAA,GAAA,IAAA,CAAK,eAAgB,CAAA,GAAA,CAAI,MAAM,CAAA,KAA/B,IAAkC,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,GAAA,CAAI,IAAS,CAAA,KAAA,OAAA,CAAQ,GAAI,CAAA,MAAA,EAAQ,IAAI,CAAA,CAAA;AAAA,GAE3E;AACF;;;;"}