'use strict';

const react = require('react');
const shared = require('./shared.cjs');

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
const FC_STORE = /* @__PURE__ */ new WeakMap();
const _toFunctional = (Component) => {
  if (!isClassComponent(Component)) {
    FC_STORE.set(Component, Component);
    return Component;
  }
  const FunctionalWrapper = react.forwardRef(
    (props, ref) => react.createElement(
      Component,
      __spreadProps(__spreadValues({}, props), {
        ref
      }),
      props == null ? void 0 : props.children
    )
  );
  FC_STORE.set(Component, FunctionalWrapper);
  FC_STORE.set(FunctionalWrapper, FunctionalWrapper);
  if (process.env.NODE_ENV === "production") {
    return FunctionalWrapper;
  }
  const name = `${shared.getComponentName(Component)}.FunctionalWrapper`;
  FunctionalWrapper.displayName = name;
  return FunctionalWrapper;
};
const toFunctional = (Component) => FC_STORE.get(Component) || _toFunctional(Component);
const isPrototypeOf = Function.call.bind(Object.prototype.isPrototypeOf);
const isClassComponent = isPrototypeOf.bind(
  isPrototypeOf,
  react.Component
);

exports.FC_STORE = FC_STORE;
exports.isClassComponent = isClassComponent;
exports.toFunctional = toFunctional;
//# sourceMappingURL=toFunctional.cjs.map
