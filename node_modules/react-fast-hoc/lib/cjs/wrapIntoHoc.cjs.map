{"version":3,"file":"wrapIntoHoc.cjs","sources":["../../src/wrapIntoHoc.ts"],"sourcesContent":["import { Identity } from \"hotscript\";\nimport type { HocTransformer } from \"./handlers\";\nimport { wrapComponentIntoHoc } from \"./internals\";\nimport type { PropsBase, WrappedComponent } from \"./type\";\n\n/**\n * allows to wrap component into the proxy as functional component\n */\nexport const wrapIntoProxy =\n  (proxy: ProxyHandler<Function>) =>\n  <T extends React.ComponentType<any>>(Component: T) =>\n    wrapComponentIntoHoc(\n      Component,\n      proxy as HocTransformer,\n      null\n    ) as WrappedComponent<Identity, PropsBase, T>;\n"],"names":["wrapComponentIntoHoc"],"mappings":";;;;AAQO,MAAM,aACX,GAAA,CAAC,KACD,KAAA,CAAqC,SACnC,KAAAA,8BAAA;AAAA,EACE,SAAA;AAAA,EACA,KAAA;AAAA,EACA,IAAA;AACF;;;;"}