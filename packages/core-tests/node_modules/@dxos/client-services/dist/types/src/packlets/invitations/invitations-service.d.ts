import { Stream } from '@dxos/codec-protobuf/stream';
import { type AuthenticationRequest, type AcceptInvitationRequest, type Invitation, type InvitationsService, QueryInvitationsResponse } from '@dxos/protocols/proto/dxos/client/services';
import { type InvitationsManager } from './invitations-manager';
/**
 * Adapts invitation service observable to client/service stream.
 */
export declare class InvitationsServiceImpl implements InvitationsService {
    private readonly _invitationsManager;
    constructor(_invitationsManager: InvitationsManager);
    getLoggingContext(): {};
    createInvitation(options: Invitation): Stream<Invitation>;
    acceptInvitation(request: AcceptInvitationRequest): Stream<Invitation>;
    authenticate(request: AuthenticationRequest): Promise<void>;
    cancelInvitation(request: {
        invitationId: string;
    }): Promise<void>;
    queryInvitations(): Stream<QueryInvitationsResponse>;
}
//# sourceMappingURL=invitations-service.d.ts.map