import { type AuthenticatingInvitation, type CancellableInvitation } from '@dxos/client-protocol';
import { Invitation } from '@dxos/protocols/proto/dxos/client/services';
import { type DeviceProfileDocument } from '@dxos/protocols/proto/dxos/halo/credentials';
import { ServiceContext } from '../services';
/**
 * Strip secrets from invitation before giving it to the peer.
 */
export declare const sanitizeInvitation: (invitation: Invitation) => Invitation;
export type InvitationHost = {
    share(options?: Partial<Invitation>): CancellableInvitation;
};
export type InvitationGuest = {
    join(invitation: Invitation | string, deviceProfile?: DeviceProfileDocument): AuthenticatingInvitation;
};
export type PerformInvitationCallbacks<T> = {
    onConnecting?: (value: T) => boolean | void;
    onConnected?: (value: T) => boolean | void;
    onReady?: (value: T) => boolean | void;
    onAuthenticating?: (value: T) => boolean | void;
    onSuccess?: (value: T) => boolean | void;
    onCancelled?: (value: T) => boolean | void;
    onTimeout?: (value: T) => boolean | void;
    onError?: (value: T) => boolean | void;
};
export type PerformInvitationParams = {
    host: ServiceContext | InvitationHost;
    guest: ServiceContext | InvitationGuest;
    options?: Partial<Invitation>;
    hooks?: {
        host?: PerformInvitationCallbacks<CancellableInvitation>;
        guest?: PerformInvitationCallbacks<AuthenticatingInvitation>;
    };
    guestDeviceProfile?: DeviceProfileDocument;
    codeInputDelay?: number;
};
export type Result = {
    invitation?: Invitation;
    error?: Error;
};
export declare const performInvitation: ({ host, guest, options, hooks, guestDeviceProfile, codeInputDelay, }: PerformInvitationParams) => [Promise<Result>, Promise<Result>];
export declare const createInvitation: (host: ServiceContext | InvitationHost, options?: Partial<Invitation>) => Promise<CancellableInvitation>;
export declare const acceptInvitation: (guest: ServiceContext | InvitationGuest, invitation: Invitation, guestDeviceProfile?: DeviceProfileDocument) => AuthenticatingInvitation;
//# sourceMappingURL=invitation-utils.d.ts.map