import { type Context } from './context';
import { ContextDisposedError } from './context-disposed-error';
/**
 * @returns A promise that rejects when the context is disposed.
 */
export declare const rejectOnDispose: (ctx: Context, error?: ContextDisposedError) => Promise<never>;
/**
 * Rejects the promise if the context is disposed.
 */
export declare const cancelWithContext: <T>(ctx: Context, promise: Promise<T>) => Promise<T>;
//# sourceMappingURL=promise-utils.d.ts.map