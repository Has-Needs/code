import { type KeyPair, PublicKey, type PublicKeyLike } from '@dxos/keys';
export declare const SIGNATURE_LENGTH = 64;
/**
 * @deprecated
 */
export declare const createId: () => string;
export declare const createKeyPair: (seed?: Buffer) => KeyPair;
export declare const validateKeyPair: (publicKey: PublicKey, secretKey: Buffer) => any;
export declare const discoveryKey: (key: PublicKeyLike) => Buffer;
/**
 * Return random bytes of length.
 * @param [length=32]
 * @return {Buffer}
 */
export declare const randomBytes: (length?: number) => Buffer;
/**
 * Sign the contents of message with secret_key
 * @param {Buffer} message
 * @param {Buffer} secretKey
 * @returns {Buffer} signature
 */
export declare const sign: (message: Buffer, secretKey: Buffer) => Buffer;
/**
 * Verifies the signature against the message and public_key.
 * @param {Buffer} message
 * @param {Buffer} publicKey
 * @param {Buffer} signature
 * @return {boolean}
 */
export declare const verify: (message: Buffer, signature: Buffer, publicKey: Buffer) => boolean;
//# sourceMappingURL=keys.d.ts.map