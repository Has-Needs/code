import { Event } from '@dxos/async';
import { type ClientServices, type ClientServicesProvider } from '@dxos/client-protocol';
import { type ServiceBundle } from '@dxos/rpc';
export declare const getUnixSocket: (profile: string, protocol?: string) => string;
export type FromAgentOptions = {
    profile?: string;
};
/**
 * Connects to locally running CLI daemon.
 */
export declare const fromAgent: ({ profile, }?: FromAgentOptions) => ClientServicesProvider;
export declare class AgentClientServiceProvider implements ClientServicesProvider {
    private readonly _profile;
    readonly closed: Event<Error | undefined>;
    private _client?;
    constructor(_profile: string);
    get descriptors(): ServiceBundle<ClientServices>;
    get services(): Partial<ClientServices>;
    open(): Promise<void>;
    close(): Promise<void>;
}
//# sourceMappingURL=agent.d.ts.map