import { MulticastObservable } from '@dxos/async';
import { type ClientServicesProvider } from '@dxos/client-protocol';
import { type NetworkStatus, ConnectionState } from '@dxos/protocols/proto/dxos/client/services';
/**
 * Public API for MESH services.
 */
export declare class MeshProxy {
    private readonly _serviceProvider;
    private readonly _networkStatusUpdated;
    private readonly _networkStatus;
    private _ctx?;
    private readonly _instanceId;
    constructor(_serviceProvider: ClientServicesProvider, 
    /**
     * @internal
     */
    _traceParent?: string | undefined);
    toJSON(): {
        networkStatus: NetworkStatus;
    };
    get networkStatus(): MulticastObservable<NetworkStatus>;
    updateConfig(swarm: ConnectionState): Promise<void>;
}
//# sourceMappingURL=mesh-proxy.d.ts.map