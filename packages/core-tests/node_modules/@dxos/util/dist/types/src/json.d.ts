export type JsonValue = string | number | boolean | null | JsonValue[] | {
    [key: string]: JsonValue;
};
/**
 * JSON.stringify replacer.
 */
export declare function jsonReplacer(this: any, key: string, value: any): any;
/**
 * Recursively converts an object into a JSON-compatible object.
 */
export declare const jsonify: (value: any, depth?: number, visitedObjects?: WeakSet<any>) => any;
/**
 * Recursively converts an object into a JSON-compatible object appropriate for logging.
 */
export declare const jsonlogify: (value: any, depth?: number, visitedObjects?: WeakSet<any>) => any;
export type JsonKeyOptions = {
    truncate?: boolean;
    humanize?: boolean;
};
export declare const jsonKeyReplacer: (options?: JsonKeyOptions) => (key: string, value: any) => any;
//# sourceMappingURL=json.d.ts.map