import type { Stream, RequestOptions } from "@dxos/codec-protobuf";
import substitutions from "../../substitutions.js";
import * as dxos_agent_dashboard from "./agent/dashboard.js";
import * as dxos_agent_echoproxy from "./agent/echoproxy.js";
import * as dxos_agent_epoch from "./agent/epoch.js";
import * as dxos_agent_functions from "./agent/functions.js";
import * as dxos_bot from "./bot.js";
import * as dxos_client_services from "./client/services.js";
import * as dxos_config from "./config.js";
import * as dxos_devtools_host from "./devtools/host.js";
import * as dxos_devtools_swarm from "./devtools/swarm.js";
import * as dxos_echo_blob from "./echo/blob.js";
import * as dxos_echo_feed from "./echo/feed.js";
import * as dxos_echo_filter from "./echo/filter.js";
import * as dxos_echo_indexing from "./echo/indexing.js";
import * as dxos_echo_metadata from "./echo/metadata.js";
import * as dxos_echo_model_document from "./echo/model/document.js";
import * as dxos_echo_model_messenger from "./echo/model/messenger.js";
import * as dxos_echo_model_text from "./echo/model/text.js";
import * as dxos_echo_object from "./echo/object.js";
import * as dxos_echo_query from "./echo/query.js";
import * as dxos_echo_service from "./echo/service.js";
import * as dxos_echo_snapshot from "./echo/snapshot.js";
import * as dxos_echo_timeframe from "./echo/timeframe.js";
import * as dxos_edge_calls from "./edge/calls.js";
import * as dxos_edge_messenger from "./edge/messenger.js";
import * as dxos_edge_signal from "./edge/signal.js";
import * as dxos_error from "./error.js";
import * as dxos_gravity from "./gravity.js";
import * as dxos_halo_credentials from "./halo/credentials.js";
import * as dxos_halo_credentials_auth from "./halo/credentials/auth.js";
import * as dxos_halo_credentials_greet from "./halo/credentials/greet.js";
import * as dxos_halo_credentials_identity from "./halo/credentials/identity.js";
import * as dxos_halo_invitations from "./halo/invitations.js";
import * as dxos_halo_keyring from "./halo/keyring.js";
import * as dxos_halo_keys from "./halo/keys.js";
import * as dxos_halo_signed from "./halo/signed.js";
import * as dxos_iframe from "./iframe.js";
import * as dxos_keys from "./keys.js";
import * as dxos_mesh_bridge from "./mesh/bridge.js";
import * as dxos_mesh_broadcast from "./mesh/broadcast.js";
import * as dxos_mesh_messaging from "./mesh/messaging.js";
import * as dxos_mesh_muxer from "./mesh/muxer.js";
import * as dxos_mesh_presence from "./mesh/presence.js";
import * as dxos_mesh_protocol from "./mesh/protocol.js";
import * as dxos_mesh_replicator from "./mesh/replicator.js";
import * as dxos_mesh_signal from "./mesh/signal.js";
import * as dxos_mesh_swarm from "./mesh/swarm.js";
import * as dxos_mesh_teleport from "./mesh/teleport.js";
import * as dxos_mesh_teleport_auth from "./mesh/teleport/auth.js";
import * as dxos_mesh_teleport_automerge from "./mesh/teleport/automerge.js";
import * as dxos_mesh_teleport_blobsync from "./mesh/teleport/blobsync.js";
import * as dxos_mesh_teleport_control from "./mesh/teleport/control.js";
import * as dxos_mesh_teleport_gossip from "./mesh/teleport/gossip.js";
import * as dxos_mesh_teleport_notarization from "./mesh/teleport/notarization.js";
import * as dxos_mesh_teleport_replicator from "./mesh/teleport/replicator.js";
import * as dxos_registry from "./registry.js";
import * as dxos_rpc from "./rpc.js";
import * as dxos_service_agentmanager from "./service/agentmanager.js";
import * as dxos_service_publisher from "./service/publisher.js";
import * as dxos_service_supervisor from "./service/supervisor.js";
import * as dxos_service_tunnel from "./service/tunnel.js";
import * as dxos_tracing from "./tracing.js";
import * as dxos_value from "./value.js";
import * as example_testing_data from "../example/testing/data.js";
import * as example_testing_rpc from "../example/testing/rpc.js";
import * as google_protobuf from "../google/protobuf.js";
/**
 * Defined in:
 *   {@link file://./../../dxos/type.proto}
 */
export interface Repo {
    name: string;
    url: string;
    version: string;
}
/**
 * Defined in:
 *   {@link file://./../../dxos/type.proto}
 */
export interface App {
    /**
     * Optional **semver 2.0** compliant record version.
     * Should conform to the semver regex (see https://semver.org/).
     *
     * Options:
     *   - proto3_optional = true
     */
    version?: string;
    /**
     * Options:
     *   - proto3_optional = true
     */
    license?: string;
    repos?: Repo[];
    /**
     * App bundle content Id in the CID v0 format (https://docs.ipfs.io/concepts/content-addressing/#identifier-formats).
     *
     * Options:
     *   - proto3_optional = true
     */
    bundle?: Uint8Array;
    web?: App.Web;
    /**
     * Options:
     *   - proto3_optional = true
     */
    extension?: dxos_registry.Record.Extension;
}
export namespace App {
    /**
     * Defined in:
     *   {@link file://./../../dxos/type.proto}
     */
    export interface Web {
        /**
         * Relative path in resource to entrypoint, defaults to index.html.
         *
         * Options:
         *   - proto3_optional = true
         */
        indexFile?: string;
        /**
         * Relative path in resource to entrypoint, defaults to main.js.
         *
         * Options:
         *   - proto3_optional = true
         */
        entryPoint?: string;
    }
}
/**
 * Defined in:
 *   {@link file://./../../dxos/type.proto}
 */
export interface Bot {
    /**
     * Optional **semver 2.0** compliant record version.
     * Should conform to the semver regex (see https://semver.org/).
     */
    version: string;
    license: string;
    repos?: Repo[];
    /**
     * Bot bundle content Id in the CID v0 format (https://docs.ipfs.io/concepts/content-addressing/#identifier-formats).
     */
    bundle: Uint8Array;
    /**
     * This would be the path to the bot executable in bot-factory's file-system.
     */
    localPath: string;
    extension: dxos_registry.Record.Extension;
}
/**
 * Defined in:
 *   {@link file://./../../dxos/type.proto}
 */
export interface StateMachine {
    /**
     * Set of protobuf messages.
     */
    mutationProtobufDefs: ReturnType<(typeof substitutions)["google.protobuf.Struct"]["decode"]>;
    /**
     * Set of protobuf messages.
     */
    snapshotProtobufDefs: ReturnType<(typeof substitutions)["google.protobuf.Struct"]["decode"]>;
    codeIpfsCid: Uint8Array;
}
/**
 * Defined in:
 *   {@link file://./../../dxos/type.proto}
 */
export interface File {
    contentType: string;
    fileName: string;
    /**
     * File content Id in the CID v0 format (https://docs.ipfs.io/concepts/content-addressing/#identifier-formats).
     */
    bundle: Uint8Array;
    extension: dxos_registry.Record.Extension;
}
/**
 * Defined in:
 *   {@link file://./../../dxos/type.proto}
 */
export interface KUBE {
    url: string;
    extension: dxos_registry.Record.Extension;
}
/**
 * Defined in:
 *   {@link file://./../../dxos/type.proto}
 */
export interface Service {
    type: string;
    kube: Uint8Array;
    extension: dxos_registry.Record.Extension;
}
/**
 * Defined in:
 *   {@link file://./../../dxos/type.proto}
 */
export interface IPFS {
    protocol: string;
    addresses?: string[];
    extension: dxos_registry.Record.Extension;
}
/**
 * Defined in:
 *   {@link file://./../../dxos/type.proto}
 */
export interface BotFactory {
    topic: string;
    extension: dxos_registry.Record.Extension;
}
/**
 * Defined in:
 *   {@link file://./../../dxos/type.proto}
 */
export interface Signal {
    bootstrap: string;
    url: string;
    extension: dxos_registry.Record.Extension;
}
/**
 * Defined in:
 *   {@link file://./../../dxos/type.proto}
 */
export interface AppServer {
    url: string;
    extension: dxos_registry.Record.Extension;
}
