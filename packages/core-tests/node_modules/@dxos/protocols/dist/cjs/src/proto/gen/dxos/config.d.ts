import substitutions from "../../substitutions.js";
/**
 * Defined in:
 *   {@link file://./../../dxos/config.proto}
 */
export interface Config {
    /**
     * Options:
     *   - proto3_optional = true
     */
    version?: number;
    /**
     * Options:
     *   - proto3_optional = true
     */
    package?: Package;
    /**
     * Options:
     *   - proto3_optional = true
     */
    runtime?: Runtime;
}
/**
 * Defined in:
 *   {@link file://./../../dxos/config.proto}
 */
export interface Package {
    /**
     * Options:
     *   - proto3_optional = true
     */
    license?: string;
    repos?: Repo[];
    modules?: Module[];
}
/**
 * Defined in:
 *   {@link file://./../../dxos/config.proto}
 */
export interface Repo {
    /**
     * Options:
     *   - proto3_optional = true
     */
    name?: string;
    /**
     * Options:
     *   - proto3_optional = true
     */
    url?: string;
    /**
     * Options:
     *   - proto3_optional = true
     */
    version?: string;
}
/**
 * Defined in:
 *   {@link file://./../../dxos/config.proto}
 */
export interface Module {
    /**
     * Options:
     *   - proto3_optional = true
     */
    id?: string;
    /**
     * Options:
     *   - proto3_optional = true
     */
    name?: string;
    /**
     * Options:
     *   - proto3_optional = true
     */
    type?: string;
    /**
     * Options:
     *   - proto3_optional = true
     */
    displayName?: string;
    /**
     * Options:
     *   - proto3_optional = true
     */
    description?: string;
    tags?: string[];
    /**
     * Options:
     *   - proto3_optional = true
     */
    bundle?: Uint8Array;
    /**
     * Options:
     *   - proto3_optional = true
     */
    tunnel?: boolean;
    deps?: Module[];
    /**
     * Options:
     *   - proto3_optional = true
     */
    build?: Module.Build;
    repos?: Repo[];
    /**
     * The data will be validated based on the type when being published.
     *
     * Options:
     *   - proto3_optional = true
     */
    record?: ReturnType<(typeof substitutions)["google.protobuf.Any"]["decode"]>;
}
export declare namespace Module {
    /**
     * Defined in:
     *   {@link file://./../../dxos/config.proto}
     */
    interface Build {
        /**
         * Options:
         *   - proto3_optional = true
         */
        command?: string;
        /**
         * Options:
         *   - proto3_optional = true
         */
        outdir?: string;
        /**
         * Options:
         *   - proto3_optional = true
         */
        version?: string;
        /**
         * Options:
         *   - proto3_optional = true
         */
        tag?: string;
        /**
         * Options:
         *   - proto3_optional = true
         */
        env?: ReturnType<(typeof substitutions)["google.protobuf.Struct"]["decode"]>;
    }
}
/**
 * Defined in:
 *   {@link file://./../../dxos/config.proto}
 */
export interface Runtime {
    /**
     * Options:
     *   - proto3_optional = true
     */
    client?: Runtime.Client;
    /**
     * Options:
     *   - proto3_optional = true
     */
    app?: Runtime.App;
    /**
     * Options:
     *   - proto3_optional = true
     */
    cli?: Runtime.CLI;
    /**
     * Options:
     *   - proto3_optional = true
     */
    props?: Runtime.Props;
    /**
     * Options:
     *   - proto3_optional = true
     */
    services?: Runtime.Services;
    /**
     * Options:
     *   - proto3_optional = true
     */
    system?: Runtime.System;
    /**
     * Options:
     *   - proto3_optional = true
     */
    kube?: Runtime.Kube;
    keys?: Runtime.Keys[];
    /**
     * Options:
     *   - proto3_optional = true
     */
    agent?: Runtime.Agent;
}
export declare namespace Runtime {
    /**
     * Defined in:
     *   {@link file://./../../dxos/config.proto}
     */
    interface Client {
        /**
         * Options:
         *   - proto3_optional = true
         */
        log?: Runtime.Client.Log;
        /**
         * Options:
         *   - proto3_optional = true
         */
        storage?: Runtime.Client.Storage;
        /**
         * Options:
         *   - proto3_optional = true
         */
        enableSnapshots?: boolean;
        /**
         * Milliseconds
         *
         * Options:
         *   - proto3_optional = true
         */
        snapshotInterval?: number;
        /**
         * Milliseconds
         *
         * Options:
         *   - proto3_optional = true
         */
        invitationExpiration?: number;
        /**
         * Options:
         *   - proto3_optional = true
         */
        remoteSource?: string;
        /**
         * Options:
         *   - proto3_optional = true
         */
        remoteSourceAuthenticationToken?: string;
        /**
         * Connect to and serve client services to a remote proxy.
         *
         * Options:
         *   - proto3_optional = true
         */
        devtoolsProxy?: string;
        /**
         * Spaces will stay in SpaceState.CLOSED until explicitly opened. Speeds up client-services initialization.
         *
         * Options:
         *   - proto3_optional = true
         */
        lazySpaceOpen?: boolean;
        /**
         * Disabled automerge & hypercore replication through P2P connections.
         *
         * Options:
         *   - proto3_optional = true
         */
        disableP2pReplication?: boolean;
        /**
         * Options:
         *   - proto3_optional = true
         */
        enableVectorIndexing?: boolean;
        /**
         * Options:
         *   - proto3_optional = true
         */
        edgeFeatures?: Runtime.Client.EdgeFeatures;
    }
    namespace Client {
        /**
         * Defined in:
         *   {@link file://./../../dxos/config.proto}
         */
        interface Storage {
            /**
             * Options:
             *   - proto3_optional = true
             */
            persistent?: boolean;
            /**
             * Options:
             *   - proto3_optional = true
             */
            keyStore?: Runtime.Client.Storage.StorageDriver;
            /**
             * Options:
             *   - proto3_optional = true
             */
            dataStore?: Runtime.Client.Storage.StorageDriver;
            /**
             * Options:
             *   - proto3_optional = true
             */
            dataRoot?: string;
            /**
             * @deprecated
             *
             * Options:
             *   - proto3_optional = true
             */
            spaceFragmentation?: boolean;
        }
        namespace Storage {
            /**
             * Defined in:
             *   {@link file://./../../dxos/config.proto}
             */
            enum StorageDriver {
                RAM = 0,
                IDB = 1,
                CHROME = 2,
                FIREFOX = 3,
                NODE = 4,
                WEBFS = 5,
                LEVELJS = 11,
                JSONDOWN = 12
            }
        }
        /**
         * Defined in:
         *   {@link file://./../../dxos/config.proto}
         */
        interface Log {
            /**
             * Options:
             *   - (env_var) = "LOG_FILTER"
             *   - proto3_optional = true
             */
            filter?: string;
            /**
             * Options:
             *   - (env_var) = "LOG_PREFIX"
             *   - proto3_optional = true
             */
            prefix?: string;
        }
        /**
         * Defined in:
         *   {@link file://./../../dxos/config.proto}
         */
        interface EdgeFeatures {
            /**
             * Options:
             *   - proto3_optional = true
             */
            feedReplicator?: boolean;
            /**
             * Options:
             *   - proto3_optional = true
             */
            echoReplicator?: boolean;
            /**
             * Options:
             *   - proto3_optional = true
             */
            signaling?: boolean;
            /**
             * Options:
             *   - proto3_optional = true
             */
            agents?: boolean;
        }
    }
    /**
     * Defined in:
     *   {@link file://./../../dxos/config.proto}
     */
    interface App {
        /**
         * Options:
         *   - proto3_optional = true
         */
        org?: string;
        /**
         * Options:
         *   - proto3_optional = true
         */
        theme?: string;
        /**
         * Options:
         *   - proto3_optional = true
         */
        website?: string;
        /**
         * Options:
         *   - (env_var) = "PUBLIC_URL"
         *   - proto3_optional = true
         */
        publicUrl?: string;
        /**
         * Options:
         *   - proto3_optional = true
         */
        build?: Runtime.App.BuildInfo;
        /**
         * Options:
         *   - proto3_optional = true
         */
        env?: ReturnType<(typeof substitutions)["google.protobuf.Struct"]["decode"]>;
    }
    namespace App {
        /**
         * Defined in:
         *   {@link file://./../../dxos/config.proto}
         */
        interface BuildInfo {
            /**
             * RFC-3339 datetime string.
             *
             * Options:
             *   - proto3_optional = true
             */
            timestamp?: string;
            /**
             * Options:
             *   - proto3_optional = true
             */
            commitHash?: string;
            /**
             * Version from package.json.
             *
             * Options:
             *   - proto3_optional = true
             */
            version?: string;
            /**
             * Options:
             *   - proto3_optional = true
             */
            branch?: string;
        }
    }
    /**
     * Defined in:
     *   {@link file://./../../dxos/config.proto}
     */
    interface Agent {
        plugins?: Runtime.Agent.Plugin[];
    }
    namespace Agent {
        /**
         * Defined in:
         *   {@link file://./../../dxos/config.proto}
         */
        interface Plugin {
            id: string;
            /**
             * Options:
             *   - proto3_optional = true
             */
            name?: string;
            /**
             * Options:
             *   - proto3_optional = true
             */
            enabled?: boolean;
            /**
             * Options:
             *   - proto3_optional = true
             */
            config?: ReturnType<(typeof substitutions)["google.protobuf.Any"]["decode"]>;
        }
    }
    /**
     * Defined in:
     *   {@link file://./../../dxos/config.proto}
     */
    interface CLI {
        /**
         * Options:
         *   - proto3_optional = true
         */
        nodePath?: string;
        /**
         * Options:
         *   - proto3_optional = true
         */
        app?: Runtime.CLI.AppServe;
        /**
         * Options:
         *   - proto3_optional = true
         */
        console?: Runtime.CLI.Package;
        /**
         * Options:
         *   - proto3_optional = true
         */
        mdns?: Runtime.CLI.Package;
        /**
         * Options:
         *   - proto3_optional = true
         */
        signal?: Runtime.CLI.Package;
        /**
         * Options:
         *   - proto3_optional = true
         */
        npmClient?: string;
        /**
         * Options:
         *   - proto3_optional = true
         */
        channel?: string;
    }
    namespace CLI {
        /**
         * Defined in:
         *   {@link file://./../../dxos/config.proto}
         */
        interface AppServe {
            /**
             * Options:
             *   - proto3_optional = true
             */
            serve?: Runtime.CLI.AppServe.Serve;
        }
        namespace AppServe {
            /**
             * Defined in:
             *   {@link file://./../../dxos/config.proto}
             */
            interface Serve {
                /**
                 * Options:
                 *   - proto3_optional = true
                 */
                config?: string;
                /**
                 * Options:
                 *   - proto3_optional = true
                 */
                loginApp?: string;
                /**
                 * Options:
                 *   - proto3_optional = true
                 */
                keyPhrase?: string;
            }
        }
        /**
         * Defined in:
         *   {@link file://./../../dxos/config.proto}
         */
        interface Package {
            /**
             * Options:
             *   - proto3_optional = true
             */
            package?: string;
            /**
             * Options:
             *   - proto3_optional = true
             */
            channel?: string;
            /**
             * Options:
             *   - proto3_optional = true
             */
            bin?: string;
            /**
             * Options:
             *   - proto3_optional = true
             */
            config?: string;
        }
    }
    /**
     * Defined in:
     *   {@link file://./../../dxos/config.proto}
     */
    interface Props {
        /**
         * Options:
         *   - proto3_optional = true
         */
        title?: string;
    }
    /**
     * Defined in:
     *   {@link file://./../../dxos/config.proto}
     */
    interface System {
        /**
         * Options:
         *   - proto3_optional = true
         */
        debug?: string;
    }
    /**
     * Defined in:
     *   {@link file://./../../dxos/config.proto}
     */
    interface Kube {
        host: string;
        port: string;
        autoupdate: Runtime.Kube.Autoupdate;
        https: Runtime.Kube.Https;
        p2p: Runtime.Kube.P2P;
        confhost: string;
        env?: string[];
        alias?: string[];
        monitoring: Runtime.Kube.Monitoring;
        trace: Runtime.Kube.Trace;
        telemetry: Runtime.Kube.Telemetry;
        gravity: Runtime.Kube.Gravity;
        appTunneling: Runtime.Kube.AppTunneling;
        bots: Runtime.Kube.Bots;
        ipfsApiAuthorizations?: Runtime.Kube.KuboApiAuthorization[];
    }
    namespace Kube {
        /**
         * Defined in:
         *   {@link file://./../../dxos/config.proto}
         */
        interface Autoupdate {
            enabled: boolean;
            /**
             * Seconds
             */
            interval: number;
        }
        /**
         * Defined in:
         *   {@link file://./../../dxos/config.proto}
         */
        interface Https {
            enabled: boolean;
            port: string;
            email: string;
            certfile: string;
            keyfile: string;
            dnsprovider: string;
        }
        /**
         * Defined in:
         *   {@link file://./../../dxos/config.proto}
         */
        interface P2P {
            privatekey: string;
            port: string;
            bootstrap?: string[];
        }
        /**
         * Defined in:
         *   {@link file://./../../dxos/config.proto}
         */
        interface Monitoring {
            enabled: boolean;
            endpoint: string;
            /**
             * Seconds
             */
            interval: number;
        }
        /**
         * Defined in:
         *   {@link file://./../../dxos/config.proto}
         */
        interface Trace {
            disabled: boolean;
        }
        /**
         * Defined in:
         *   {@link file://./../../dxos/config.proto}
         */
        interface Telemetry {
            disabled: boolean;
            tags?: string[];
        }
        /**
         * Defined in:
         *   {@link file://./../../dxos/config.proto}
         */
        interface Gravity {
            disabled: boolean;
            name: string;
            /**
             * Options:
             *   - proto3_optional = true
             */
            logDir?: string;
        }
        /**
         * Defined in:
         *   {@link file://./../../dxos/config.proto}
         */
        interface AppTunneling {
            enabled: boolean;
            commandTemplate: string;
            outputRe: string;
            port: string;
        }
        /**
         * Defined in:
         *   {@link file://./../../dxos/config.proto}
         */
        interface Bots {
            enabled: boolean;
            /**
             * Refresh interval - Seconds
             */
            interval: number;
        }
        /**
         * https://github.com/ipfs/kubo/blob/master/docs/config.md#apiauthorizations
         *
         * Defined in:
         *   {@link file://./../../dxos/config.proto}
         */
        interface KuboApiAuthorization {
            /**
             * Just for organizational purposes.
             */
            name: string;
            authSecret: string;
            allowedPaths?: string[];
        }
    }
    /**
     * Defined in:
     *   {@link file://./../../dxos/config.proto}
     */
    interface Services {
        /**
         * Options:
         *   - proto3_optional = true
         */
        kube?: Runtime.Services.Kube;
        /**
         * Options:
         *   - proto3_optional = true
         */
        app?: Runtime.Services.AppServer;
        /**
         * Options:
         *   - proto3_optional = true
         */
        dxns?: Runtime.Services.Dxns;
        /**
         * Options:
         *   - proto3_optional = true
         */
        ipfs?: Runtime.Services.Ipfs;
        signaling?: Runtime.Services.Signal[];
        ice?: Runtime.Services.Ice[];
        iceProviders?: Runtime.Services.IceProvider[];
        /**
         * Options:
         *   - proto3_optional = true
         */
        machine?: Runtime.Services.Machine;
        /**
         * Options:
         *   - proto3_optional = true
         */
        bot?: Runtime.Services.BotHost;
        /**
         * Options:
         *   - proto3_optional = true
         */
        publisher?: Runtime.Services.Publisher;
        /**
         * Options:
         *   - proto3_optional = true
         */
        supervisor?: Runtime.Services.Supervisor;
        /**
         * Options:
         *   - proto3_optional = true
         */
        tunneling?: Runtime.Services.Tunneling;
        /**
         * Options:
         *   - proto3_optional = true
         */
        faasd?: Runtime.Services.Faasd;
        /**
         * Options:
         *   - proto3_optional = true
         */
        agentHosting?: Runtime.Services.AgentHosting;
        /**
         * Options:
         *   - proto3_optional = true
         */
        edge?: Runtime.Services.Edge;
        /**
         * Options:
         *   - proto3_optional = true
         */
        ai?: Runtime.Services.Ai;
    }
    namespace Services {
        /**
         * Defined in:
         *   {@link file://./../../dxos/config.proto}
         */
        interface Kube {
            /**
             * Options:
             *   - proto3_optional = true
             */
            endpoints?: Runtime.Services.Kube.Endpoints;
            /**
             * Options:
             *   - proto3_optional = true
             */
            publicUrl?: string;
        }
        namespace Kube {
            /**
             * Defined in:
             *   {@link file://./../../dxos/config.proto}
             */
            interface Endpoints {
                /**
                 * Options:
                 *   - proto3_optional = true
                 */
                logs?: string;
                /**
                 * Options:
                 *   - proto3_optional = true
                 */
                services?: string;
                /**
                 * Options:
                 *   - proto3_optional = true
                 */
                cert?: string;
            }
        }
        /**
         * Defined in:
         *   {@link file://./../../dxos/config.proto}
         */
        interface AppServer {
            /**
             * Options:
             *   - proto3_optional = true
             */
            prefix?: string;
            /**
             * Options:
             *   - proto3_optional = true
             */
            server?: string;
        }
        /**
         * Defined in:
         *   {@link file://./../../dxos/config.proto}
         */
        interface Dxns {
            /**
             * DXNS endpoint.
             *
             * Options:
             *   - proto3_optional = true
             */
            server?: string;
            /**
             * Substrate account URI. This is a secret.
             * KUBEs do not serve this with the config but we store it in profile.yml.
             *
             * TODO(dmaretskyi): Deprecate this and move it to keyring.
             *
             * Options:
             *   - proto3_optional = true
             */
            accountUri?: string;
            /**
             * Public Polkadot Address.
             *
             * Options:
             *   - proto3_optional = true
             */
            address?: string;
            /**
             * Public address of a DXNS Account.
             *
             * Options:
             *   - proto3_optional = true
             */
            account?: string;
            /**
             * Options:
             *   - proto3_optional = true
             */
            faucet?: string;
        }
        /**
         * Defined in:
         *   {@link file://./../../dxos/config.proto}
         */
        interface Ipfs {
            /**
             * Options:
             *   - proto3_optional = true
             */
            server?: string;
            /**
             * Options:
             *   - proto3_optional = true
             */
            gateway?: string;
            /**
             * Same secret format as https://github.com/ipfs/kubo/blob/master/docs/config.md#apiauthorizations
             *
             * Options:
             *   - proto3_optional = true
             */
            serverAuthSecret?: string;
        }
        /**
         * Defined in:
         *   {@link file://./../../dxos/config.proto}
         */
        interface Signal {
            server: string;
            /**
             * Options:
             *   - proto3_optional = true
             */
            api?: string;
            /**
             * Options:
             *   - proto3_optional = true
             */
            status?: string;
        }
        /**
         * Defined in:
         *   {@link file://./../../dxos/config.proto}
         */
        interface Ice {
            urls: string;
            /**
             * Options:
             *   - proto3_optional = true
             */
            username?: string;
            /**
             * Options:
             *   - proto3_optional = true
             */
            credential?: string;
        }
        /**
         * Defined in:
         *   {@link file://./../../dxos/config.proto}
         */
        interface IceProvider {
            urls: string;
        }
        /**
         * Defined in:
         *   {@link file://./../../dxos/config.proto}
         */
        interface Machine {
            /**
             * Options:
             *   - proto3_optional = true
             */
            doAccessToken?: string;
            /**
             * Options:
             *   - proto3_optional = true
             */
            githubAccessToken?: string;
            /**
             * Options:
             *   - proto3_optional = true
             */
            githubUsername?: string;
            /**
             * Options:
             *   - proto3_optional = true
             */
            dnsDomain?: string;
            /**
             * Options:
             *   - proto3_optional = true
             */
            npmAccessToken?: string;
        }
        /**
         * Defined in:
         *   {@link file://./../../dxos/config.proto}
         */
        interface BotHost {
            /**
             * Options:
             *   - proto3_optional = true
             */
            proxy?: string;
        }
        /**
         * Defined in:
         *   {@link file://./../../dxos/config.proto}
         */
        interface Publisher {
            /**
             * Options:
             *   - proto3_optional = true
             */
            server?: string;
        }
        /**
         * Defined in:
         *   {@link file://./../../dxos/config.proto}
         */
        interface Tunneling {
            /**
             * Options:
             *   - proto3_optional = true
             */
            server?: string;
        }
        /**
         * Defined in:
         *   {@link file://./../../dxos/config.proto}
         */
        interface Supervisor {
            /**
             * Options:
             *   - proto3_optional = true
             */
            server?: string;
        }
        /**
         * Defined in:
         *   {@link file://./../../dxos/config.proto}
         */
        interface Faasd {
            /**
             * Options:
             *   - proto3_optional = true
             */
            gateway?: string;
            /**
             * Options:
             *   - proto3_optional = true
             */
            username?: string;
            /**
             * Options:
             *   - proto3_optional = true
             */
            password?: string;
        }
        /**
         * Defined in:
         *   {@link file://./../../dxos/config.proto}
         */
        interface AgentHosting {
            /**
             * Options:
             *   - proto3_optional = true
             */
            server?: string;
            /**
             * Options:
             *   - proto3_optional = true
             */
            type?: string;
        }
        /**
         * Defined in:
         *   {@link file://./../../dxos/config.proto}
         */
        interface Edge {
            /**
             * Options:
             *   - proto3_optional = true
             */
            url?: string;
        }
        /**
         * Defined in:
         *   {@link file://./../../dxos/config.proto}
         */
        interface Ai {
            /**
             * Options:
             *   - proto3_optional = true
             */
            server?: string;
        }
    }
    /**
     * Defined in:
     *   {@link file://./../../dxos/config.proto}
     */
    interface Keys {
        /**
         * Options:
         *   - proto3_optional = true
         */
        name?: string;
        /**
         * Options:
         *   - proto3_optional = true
         */
        value?: string;
    }
}
//# sourceMappingURL=config.d.ts.map