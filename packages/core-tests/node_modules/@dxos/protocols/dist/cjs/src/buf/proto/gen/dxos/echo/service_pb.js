"use strict";
//
// Copyright 2021 DXOS.org
//
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataService = exports.SpaceSyncState_PeerStateSchema = exports.SpaceSyncStateSchema = exports.GetSpaceSyncStateRequestSchema = exports.ReIndexHeadsRequestSchema = exports.WaitUntilHeadsReplicatedRequestSchema = exports.GetDocumentHeadsResponseSchema = exports.GetDocumentHeadsRequestSchema = exports.DocHeadsList_EntrySchema = exports.DocHeadsListSchema = exports.DocumentUpdateSchema = exports.FlushRequestSchema = exports.UpdateSubscriptionRequestSchema = exports.UpdateRequestSchema = exports.BatchedDocumentUpdatesSchema = exports.SubscribeRequestSchema = exports.file_dxos_echo_service = void 0;
const codegenv1_1 = require("@bufbuild/protobuf/codegenv1");
const keys_pb_js_1 = require("../keys_pb.js");
const wkt_1 = require("@bufbuild/protobuf/wkt");
/**
 * Describes the file dxos/echo/service.proto.
 */
exports.file_dxos_echo_service = (0, codegenv1_1.fileDesc)("ChdkeG9zL2VjaG8vc2VydmljZS5wcm90bxIRZHhvcy5lY2hvLnNlcnZpY2UiPQoQU3Vic2NyaWJlUmVxdWVzdBIXCg9zdWJzY3JpcHRpb25faWQYASABKAkSEAoIc3BhY2VfaWQYAiABKAkiTAoWQmF0Y2hlZERvY3VtZW50VXBkYXRlcxIyCgd1cGRhdGVzGAEgAygLMiEuZHhvcy5lY2hvLnNlcnZpY2UuRG9jdW1lbnRVcGRhdGUiXAoNVXBkYXRlUmVxdWVzdBIXCg9zdWJzY3JpcHRpb25faWQYASABKAkSMgoHdXBkYXRlcxgCIAMoCzIhLmR4b3MuZWNoby5zZXJ2aWNlLkRvY3VtZW50VXBkYXRlIlkKGVVwZGF0ZVN1YnNjcmlwdGlvblJlcXVlc3QSFwoPc3Vic2NyaXB0aW9uX2lkGAEgASgJEg8KB2FkZF9pZHMYAyADKAkSEgoKcmVtb3ZlX2lkcxgEIAMoCSIkCgxGbHVzaFJlcXVlc3QSFAoMZG9jdW1lbnRfaWRzGAEgAygJIlcKDkRvY3VtZW50VXBkYXRlEhMKC2RvY3VtZW50X2lkGAEgASgJEhAKCG11dGF0aW9uGAIgASgMEhMKBmlzX25ldxgDIAEoCEgAiAEBQgkKB19pc19uZXcicwoMRG9jSGVhZHNMaXN0EjYKB2VudHJpZXMYASADKAsyJS5keG9zLmVjaG8uc2VydmljZS5Eb2NIZWFkc0xpc3QuRW50cnkaKwoFRW50cnkSEwoLZG9jdW1lbnRfaWQYASABKAkSDQoFaGVhZHMYAiADKAkiLwoXR2V0RG9jdW1lbnRIZWFkc1JlcXVlc3QSFAoMZG9jdW1lbnRfaWRzGAEgAygJIkoKGEdldERvY3VtZW50SGVhZHNSZXNwb25zZRIuCgVoZWFkcxgBIAEoCzIfLmR4b3MuZWNoby5zZXJ2aWNlLkRvY0hlYWRzTGlzdCJRCh9XYWl0VW50aWxIZWFkc1JlcGxpY2F0ZWRSZXF1ZXN0Ei4KBWhlYWRzGAEgASgLMh8uZHhvcy5lY2hvLnNlcnZpY2UuRG9jSGVhZHNMaXN0IisKE1JlSW5kZXhIZWFkc1JlcXVlc3QSFAoMZG9jdW1lbnRfaWRzGAEgAygJIiwKGEdldFNwYWNlU3luY1N0YXRlUmVxdWVzdBIQCghzcGFjZV9pZBgBIAEoCSL6AQoOU3BhY2VTeW5jU3RhdGUSOgoFcGVlcnMYASADKAsyKy5keG9zLmVjaG8uc2VydmljZS5TcGFjZVN5bmNTdGF0ZS5QZWVyU3RhdGUaqwEKCVBlZXJTdGF0ZRIPCgdwZWVyX2lkGAEgASgJEhkKEW1pc3Npbmdfb25fcmVtb3RlGAogASgFEhgKEG1pc3Npbmdfb25fbG9jYWwYCyABKAUSGwoTZGlmZmVyZW50X2RvY3VtZW50cxgMIAEoBRIcChRsb2NhbF9kb2N1bWVudF9jb3VudBgNIAEoBRIdChVyZW1vdGVfZG9jdW1lbnRfY291bnQYDiABKAUyoQYKC0RhdGFTZXJ2aWNlEl0KCVN1YnNjcmliZRIjLmR4b3MuZWNoby5zZXJ2aWNlLlN1YnNjcmliZVJlcXVlc3QaKS5keG9zLmVjaG8uc2VydmljZS5CYXRjaGVkRG9jdW1lbnRVcGRhdGVzMAESWgoSVXBkYXRlU3Vic2NyaXB0aW9uEiwuZHhvcy5lY2hvLnNlcnZpY2UuVXBkYXRlU3Vic2NyaXB0aW9uUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRJCCgZVcGRhdGUSIC5keG9zLmVjaG8uc2VydmljZS5VcGRhdGVSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5EkAKBUZsdXNoEh8uZHhvcy5lY2hvLnNlcnZpY2UuRmx1c2hSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5EmsKEEdldERvY3VtZW50SGVhZHMSKi5keG9zLmVjaG8uc2VydmljZS5HZXREb2N1bWVudEhlYWRzUmVxdWVzdBorLmR4b3MuZWNoby5zZXJ2aWNlLkdldERvY3VtZW50SGVhZHNSZXNwb25zZRJmChhXYWl0VW50aWxIZWFkc1JlcGxpY2F0ZWQSMi5keG9zLmVjaG8uc2VydmljZS5XYWl0VW50aWxIZWFkc1JlcGxpY2F0ZWRSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5Ek4KDFJlSW5kZXhIZWFkcxImLmR4b3MuZWNoby5zZXJ2aWNlLlJlSW5kZXhIZWFkc1JlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkSPwoNVXBkYXRlSW5kZXhlcxIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRJrChdTdWJzY3JpYmVTcGFjZVN5bmNTdGF0ZRIrLmR4b3MuZWNoby5zZXJ2aWNlLkdldFNwYWNlU3luY1N0YXRlUmVxdWVzdBohLmR4b3MuZWNoby5zZXJ2aWNlLlNwYWNlU3luY1N0YXRlMAFiBnByb3RvMw", [keys_pb_js_1.file_dxos_keys, wkt_1.file_google_protobuf_empty]);
/**
 * Describes the message dxos.echo.service.SubscribeRequest.
 * Use `create(SubscribeRequestSchema)` to create a new message.
 */
exports.SubscribeRequestSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_echo_service, 0);
/**
 * Describes the message dxos.echo.service.BatchedDocumentUpdates.
 * Use `create(BatchedDocumentUpdatesSchema)` to create a new message.
 */
exports.BatchedDocumentUpdatesSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_echo_service, 1);
/**
 * Describes the message dxos.echo.service.UpdateRequest.
 * Use `create(UpdateRequestSchema)` to create a new message.
 */
exports.UpdateRequestSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_echo_service, 2);
/**
 * Describes the message dxos.echo.service.UpdateSubscriptionRequest.
 * Use `create(UpdateSubscriptionRequestSchema)` to create a new message.
 */
exports.UpdateSubscriptionRequestSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_echo_service, 3);
/**
 * Describes the message dxos.echo.service.FlushRequest.
 * Use `create(FlushRequestSchema)` to create a new message.
 */
exports.FlushRequestSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_echo_service, 4);
/**
 * Describes the message dxos.echo.service.DocumentUpdate.
 * Use `create(DocumentUpdateSchema)` to create a new message.
 */
exports.DocumentUpdateSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_echo_service, 5);
/**
 * Describes the message dxos.echo.service.DocHeadsList.
 * Use `create(DocHeadsListSchema)` to create a new message.
 */
exports.DocHeadsListSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_echo_service, 6);
/**
 * Describes the message dxos.echo.service.DocHeadsList.Entry.
 * Use `create(DocHeadsList_EntrySchema)` to create a new message.
 */
exports.DocHeadsList_EntrySchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_echo_service, 6, 0);
/**
 * Describes the message dxos.echo.service.GetDocumentHeadsRequest.
 * Use `create(GetDocumentHeadsRequestSchema)` to create a new message.
 */
exports.GetDocumentHeadsRequestSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_echo_service, 7);
/**
 * Describes the message dxos.echo.service.GetDocumentHeadsResponse.
 * Use `create(GetDocumentHeadsResponseSchema)` to create a new message.
 */
exports.GetDocumentHeadsResponseSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_echo_service, 8);
/**
 * Describes the message dxos.echo.service.WaitUntilHeadsReplicatedRequest.
 * Use `create(WaitUntilHeadsReplicatedRequestSchema)` to create a new message.
 */
exports.WaitUntilHeadsReplicatedRequestSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_echo_service, 9);
/**
 * Describes the message dxos.echo.service.ReIndexHeadsRequest.
 * Use `create(ReIndexHeadsRequestSchema)` to create a new message.
 */
exports.ReIndexHeadsRequestSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_echo_service, 10);
/**
 * Describes the message dxos.echo.service.GetSpaceSyncStateRequest.
 * Use `create(GetSpaceSyncStateRequestSchema)` to create a new message.
 */
exports.GetSpaceSyncStateRequestSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_echo_service, 11);
/**
 * Describes the message dxos.echo.service.SpaceSyncState.
 * Use `create(SpaceSyncStateSchema)` to create a new message.
 */
exports.SpaceSyncStateSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_echo_service, 12);
/**
 * Describes the message dxos.echo.service.SpaceSyncState.PeerState.
 * Use `create(SpaceSyncState_PeerStateSchema)` to create a new message.
 */
exports.SpaceSyncState_PeerStateSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_echo_service, 12, 0);
/**
 * @generated from service dxos.echo.service.DataService
 */
exports.DataService = (0, codegenv1_1.serviceDesc)(exports.file_dxos_echo_service, 0);
//# sourceMappingURL=service_pb.js.map