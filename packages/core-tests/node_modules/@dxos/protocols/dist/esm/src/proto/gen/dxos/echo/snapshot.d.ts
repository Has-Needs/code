import substitutions from "../../../substitutions.js";
import * as dxos_echo_object from "./object.js";
/**
 * Snapshots define full space state at a given point in time.
 * They must have enough information to be able to recover the space state without reading the feed messages.
 *
 * Each snapshot is identified by a space key and a timeframe.
 * The timeframe defines the set of feed messages that have already been processed.
 * When loading from the snapshot, application would skip all of the feed messages up to (and including) the provided timeframe.
 *
 * Defined in:
 *   {@link file://./../../../dxos/echo/snapshot.proto}
 */
export interface SpaceSnapshot {
    spaceKey: Uint8Array;
    /**
     * Options:
     *   - proto3_optional = true
     */
    timeframe?: ReturnType<(typeof substitutions)["dxos.echo.timeframe.TimeframeVector"]["decode"]>;
    /**
     * Options:
     *   - proto3_optional = true
     */
    timestamp?: number;
    database: EchoSnapshot;
}
/**
 * Database Snapshot
 *
 * Defined in:
 *   {@link file://./../../../dxos/echo/snapshot.proto}
 */
export interface EchoSnapshot {
    items?: dxos_echo_object.EchoObject[];
}
//# sourceMappingURL=snapshot.d.ts.map