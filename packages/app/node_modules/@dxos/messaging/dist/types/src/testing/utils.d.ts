import { type Event } from '@dxos/async';
import { type Any } from '@dxos/codec-protobuf';
import { PublicKey } from '@dxos/keys';
import { type SignalMethods, type Message, type PeerInfo } from '../signal-methods';
export declare const expectPeerAvailable: (client: SignalMethods, expectedTopic: PublicKey, peer: PeerInfo) => Promise<import("@dxos/protocols/proto/dxos/edge/signal").SwarmEvent>;
export declare const expectPeerLeft: (client: SignalMethods, expectedTopic: PublicKey, peer: PeerInfo) => Promise<import("@dxos/protocols/proto/dxos/edge/signal").SwarmEvent>;
export declare const expectReceivedMessage: (event: Event<Message>, expectedMessage: Message) => Promise<Message>;
export declare const createMessage: (author: PeerInfo, recipient: PeerInfo, payload?: Any) => Message;
export declare const messageEqual: (msg1: Message, msg2: Message) => boolean;
//# sourceMappingURL=utils.d.ts.map