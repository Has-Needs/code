export type Selection = any[];
export interface SubscriptionHandle {
    update: (selection: Selection) => SubscriptionHandle;
    subscribed: boolean;
    unsubscribe: () => void;
    selected: Set<any>;
}
export type UpdateInfo = {
    updated: any[];
    added: any[];
    removed: any[];
};
/**
 * Subscribe to database updates.
 * Calls the callback when any object from the selection changes.
 * Calls the callback when the selection changes.
 * Always calls the callback on the first `selection.update` call.
 */
export declare const createSubscription: (onUpdate: (info: UpdateInfo) => void) => SubscriptionHandle;
//# sourceMappingURL=subscription.d.ts.map