import { Reference } from '@dxos/echo-protocol';
import { type BaseObject, type ForeignKey } from '@dxos/echo-schema';
import { type Live } from '@dxos/live-object';
import { type AnyLiveObject } from './echo-handler';
import { type EchoDatabase } from '../proxy-db';
export declare const getDatabaseFromObject: (obj: Live<any>) => EchoDatabase | undefined;
/**
 * @deprecated
 */
export declare const getReferenceWithSpaceKey: (obj: AnyLiveObject<any>) => Reference | undefined;
export declare const findObjectWithForeignKey: <T extends BaseObject>(objects: AnyLiveObject<T>[], foreignKey: ForeignKey) => AnyLiveObject<T> | undefined;
export declare const matchKeys: (a: ForeignKey[], b: ForeignKey[]) => boolean;
//# sourceMappingURL=util.d.ts.map