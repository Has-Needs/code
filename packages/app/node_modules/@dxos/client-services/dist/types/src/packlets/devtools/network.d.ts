import { Stream } from '@dxos/codec-protobuf/stream';
import { type SignalManager } from '@dxos/messaging';
import { type SwarmNetworkManager } from '@dxos/network-manager';
import { type GetNetworkPeersRequest, type GetNetworkPeersResponse, type SubscribeToNetworkTopicsResponse, type SubscribeToSignalStatusResponse, type SignalResponse, type SubscribeToSwarmInfoResponse } from '@dxos/protocols/proto/dxos/devtools/host';
export declare const subscribeToNetworkStatus: ({ signalManager }: {
    signalManager: SignalManager;
}) => Stream<SubscribeToSignalStatusResponse>;
export declare const subscribeToSignal: ({ signalManager }: {
    signalManager: SignalManager;
}) => Stream<SignalResponse>;
export declare const subscribeToNetworkTopics: ({ networkManager }: {
    networkManager: SwarmNetworkManager;
}) => Stream<SubscribeToNetworkTopicsResponse>;
export declare const subscribeToSwarmInfo: ({ networkManager }: {
    networkManager: SwarmNetworkManager;
}) => Stream<SubscribeToSwarmInfoResponse>;
export declare const getNetworkPeers: ({ networkManager }: {
    networkManager: SwarmNetworkManager;
}, request: GetNetworkPeersRequest) => GetNetworkPeersResponse;
//# sourceMappingURL=network.d.ts.map