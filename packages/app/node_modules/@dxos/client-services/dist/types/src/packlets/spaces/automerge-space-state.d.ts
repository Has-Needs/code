import { Event } from '@dxos/async';
import { Resource, type Context } from '@dxos/context';
import { type CredentialProcessor, type SpecificCredential } from '@dxos/credentials';
import { type Credential, type Epoch } from '@dxos/protocols/proto/dxos/halo/credentials';
export declare class AutomergeSpaceState extends Resource implements CredentialProcessor {
    private readonly _onNewRoot;
    rootUrl: string | undefined;
    lastEpoch: SpecificCredential<Epoch> | undefined;
    readonly onNewEpoch: Event<SpecificCredential<Epoch>>;
    private _isProcessingRootDocs;
    constructor(_onNewRoot: (rootUrl: string) => void);
    protected _open(ctx: Context): Promise<void>;
    protected _close(ctx: Context): Promise<void>;
    processCredential(credential: Credential): Promise<void>;
    startProcessingRootDocs(): void;
    ensureEpochInitialized(): Promise<void>;
}
//# sourceMappingURL=automerge-space-state.d.ts.map