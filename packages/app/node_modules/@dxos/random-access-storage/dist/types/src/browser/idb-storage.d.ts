import { type RandomAccessStorage } from 'random-access-storage';
import { AbstractStorage, StorageType } from '../common';
/**
 * Storage interface implementation for index DB.
 * https://github.com/random-access-storage/random-access-idb
 */
export declare class IDbStorage extends AbstractStorage {
    type: StorageType;
    private _db;
    private readonly _store;
    private _initialized;
    protected readonly _fileStorage: (filename: string, opts?: {}) => RandomAccessStorage;
    constructor(path: string);
    protected _createFileStorage(path: string): (filename: string, opts?: {}) => RandomAccessStorage;
    close(): Promise<void>;
    reset(): Promise<void>;
    protected _destroy(): Promise<void>;
    protected _createFile(path: string, filename: string): RandomAccessStorage;
    _loadFiles(path: string): Promise<void>;
    protected _getFiles(path: string): Promise<Map<string, import("..").File>>;
}
//# sourceMappingURL=idb-storage.d.ts.map