"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default"));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var devtools_exports = {};
__export(devtools_exports, {
  useDevtools: () => useDevtools,
  useStream: () => useStream
});
module.exports = __toCommonJS(devtools_exports);
var import_chunk_5RUIFUEC = require("../chunk-5RUIFUEC.cjs");
__reExport(devtools_exports, require("@dxos/client/devtools"), module.exports);
var import_debug = require("@dxos/debug");
var import_react = require("react");
var import_log = require("@dxos/log");
var useDevtools = () => {
  const client = (0, import_chunk_5RUIFUEC.useClient)();
  return client.services.services.DevtoolsHost ?? (0, import_debug.raise)(new Error("DevtoolsHost not available."));
};
var __dxlog_file = "/home/runner/work/dxos/dxos/packages/sdk/react-client/src/devtools/useStream.ts";
var useStream = (streamFactory, defaultValue, deps = []) => {
  const [value, setValue] = (0, import_react.useState)(defaultValue);
  (0, import_react.useEffect)(() => {
    const stream = streamFactory();
    stream.subscribe((response) => setValue(response), (err) => {
      if (err) {
        import_log.log.catch(err, void 0, {
          F: __dxlog_file,
          L: 21,
          S: void 0,
          C: (f, a) => f(...a)
        });
      }
    });
    return () => {
      void stream.close();
    };
  }, deps);
  return value ?? defaultValue;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  useDevtools,
  useStream,
  ...require("@dxos/client/devtools")
});
//# sourceMappingURL=index.cjs.map
