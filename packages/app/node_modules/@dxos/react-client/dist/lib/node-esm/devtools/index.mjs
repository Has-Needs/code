import { createRequire } from 'node:module';const require = createRequire(import.meta.url);
import {
  useClient
} from "../chunk-NBTZZNQ5.mjs";

// packages/sdk/react-client/src/devtools/index.ts
export * from "@dxos/client/devtools";

// packages/sdk/react-client/src/devtools/useDevtools.ts
import { raise } from "@dxos/debug";
var useDevtools = () => {
  const client = useClient();
  return client.services.services.DevtoolsHost ?? raise(new Error("DevtoolsHost not available."));
};

// packages/sdk/react-client/src/devtools/useStream.ts
import { useState, useEffect } from "react";
import { log } from "@dxos/log";
var __dxlog_file = "/home/runner/work/dxos/dxos/packages/sdk/react-client/src/devtools/useStream.ts";
var useStream = (streamFactory, defaultValue, deps = []) => {
  const [value, setValue] = useState(defaultValue);
  useEffect(() => {
    const stream = streamFactory();
    stream.subscribe((response) => setValue(response), (err) => {
      if (err) {
        log.catch(err, void 0, {
          F: __dxlog_file,
          L: 21,
          S: void 0,
          C: (f, a) => f(...a)
        });
      }
    });
    return () => {
      void stream.close();
    };
  }, deps);
  return value ?? defaultValue;
};
export {
  useDevtools,
  useStream
};
//# sourceMappingURL=index.mjs.map
