import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Any } from "@bufbuild/protobuf/wkt";
import type { PublicKey } from "../keys_pb.js";
import type { Message } from "@bufbuild/protobuf";
/**
 * Describes the file dxos/mesh/messaging.proto.
 */
export declare const file_dxos_mesh_messaging: GenFile;
/**
 * @generated from message dxos.mesh.messaging.ReliablePayload
 */
export type ReliablePayload = Message<"dxos.mesh.messaging.ReliablePayload"> & {
    /**
     * / Unique message identifier. Used for Acknolegment.
     *
     * @generated from field: dxos.keys.PublicKey message_id = 1;
     */
    messageId?: PublicKey;
    /**
     * / Payload for signal server netwrok.
     *
     * @generated from field: google.protobuf.Any payload = 2;
     */
    payload?: Any;
};
/**
 * Describes the message dxos.mesh.messaging.ReliablePayload.
 * Use `create(ReliablePayloadSchema)` to create a new message.
 */
export declare const ReliablePayloadSchema: GenMessage<ReliablePayload>;
/**
 * @generated from message dxos.mesh.messaging.Acknowledgement
 */
export type Acknowledgement = Message<"dxos.mesh.messaging.Acknowledgement"> & {
    /**
     * / MessageId of the Message that is being acknowledged.
     *
     * @generated from field: dxos.keys.PublicKey message_id = 1;
     */
    messageId?: PublicKey;
};
/**
 * Describes the message dxos.mesh.messaging.Acknowledgement.
 * Use `create(AcknowledgementSchema)` to create a new message.
 */
export declare const AcknowledgementSchema: GenMessage<Acknowledgement>;
//# sourceMappingURL=messaging_pb.d.ts.map