//
// Copyright 2022 DXOS.org
//

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts,import_extension=js"
// @generated from file dxos/devtools/swarm.proto (package dxos.devtools.swarm, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { PublicKey } from "../keys_pb.js";
import { file_dxos_keys } from "../keys_pb.js";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file dxos/devtools/swarm.proto.
 */
export const file_dxos_devtools_swarm: GenFile = /*@__PURE__*/
  fileDesc("ChlkeG9zL2RldnRvb2xzL3N3YXJtLnByb3RvEhNkeG9zLmRldnRvb2xzLnN3YXJtIr0BCglTd2FybUluZm8SIAoCaWQYASABKAsyFC5keG9zLmtleXMuUHVibGljS2V5EiMKBXRvcGljGAIgASgLMhQuZHhvcy5rZXlzLlB1YmxpY0tleRISCgVsYWJlbBgDIAEoCUgAiAEBEhEKCWlzX2FjdGl2ZRgEIAEoCBI4Cgtjb25uZWN0aW9ucxgFIAMoCzIjLmR4b3MuZGV2dG9vbHMuc3dhcm0uQ29ubmVjdGlvbkluZm9CCAoGX2xhYmVsIvsICg5Db25uZWN0aW9uSW5mbxINCgVzdGF0ZRgBIAEoCRIoCgpzZXNzaW9uX2lkGAIgASgLMhQuZHhvcy5rZXlzLlB1YmxpY0tleRIsCg5yZW1vdGVfcGVlcl9pZBgDIAEoCzIULmR4b3Mua2V5cy5QdWJsaWNLZXkSFgoJdHJhbnNwb3J0GAQgASgJSACIAQESGwoTcHJvdG9jb2xfZXh0ZW5zaW9ucxgFIAMoCRI0CgZldmVudHMYBiADKAsyJC5keG9zLmRldnRvb2xzLnN3YXJtLkNvbm5lY3Rpb25FdmVudBJACgdzdHJlYW1zGAcgAygLMi8uZHhvcy5kZXZ0b29scy5zd2FybS5Db25uZWN0aW9uSW5mby5TdHJlYW1TdGF0cxIZCgxjbG9zZV9yZWFzb24YCCABKAlIAYgBARIVCghpZGVudGl0eRgJIAEoCUgCiAEBEhsKDnJlYWRCdWZmZXJTaXplGAogASgNSAOIAQESHAoPd3JpdGVCdWZmZXJTaXplGAsgASgNSASIAQESNAoLbGFzdF91cGRhdGUYDCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wSAWIAQESHgoRdHJhbnNwb3J0X2RldGFpbHMYDSABKAlIBogBARIhChR0cmFuc3BvcnRfYnl0ZXNfc2VudBgOIAEoDUgHiAEBEiUKGHRyYW5zcG9ydF9ieXRlc19yZWNlaXZlZBgPIAEoDUgIiAEBEiMKFnRyYW5zcG9ydF9wYWNrZXRzX3NlbnQYECABKA1ICYgBARInChp0cmFuc3BvcnRfcGFja2V0c19yZWNlaXZlZBgRIAEoDUgKiAEBGpACCgtTdHJlYW1TdGF0cxIKCgJpZBgBIAEoDRILCgN0YWcYAiABKAkSGAoLY29udGVudFR5cGUYBSABKAlIAIgBARIRCglieXRlc1NlbnQYAyABKA0SFQoNYnl0ZXNSZWNlaXZlZBgEIAEoDRIaCg1ieXRlc1NlbnRSYXRlGAYgASgNSAGIAQESHgoRYnl0ZXNSZWNlaXZlZFJhdGUYByABKA1IAogBARIcCg93cml0ZUJ1ZmZlclNpemUYCCABKA1IA4gBAUIOCgxfY29udGVudFR5cGVCEAoOX2J5dGVzU2VudFJhdGVCFAoSX2J5dGVzUmVjZWl2ZWRSYXRlQhIKEF93cml0ZUJ1ZmZlclNpemVCDAoKX3RyYW5zcG9ydEIPCg1fY2xvc2VfcmVhc29uQgsKCV9pZGVudGl0eUIRCg9fcmVhZEJ1ZmZlclNpemVCEgoQX3dyaXRlQnVmZmVyU2l6ZUIOCgxfbGFzdF91cGRhdGVCFAoSX3RyYW5zcG9ydF9kZXRhaWxzQhcKFV90cmFuc3BvcnRfYnl0ZXNfc2VudEIbChlfdHJhbnNwb3J0X2J5dGVzX3JlY2VpdmVkQhkKF190cmFuc3BvcnRfcGFja2V0c19zZW50Qh0KG190cmFuc3BvcnRfcGFja2V0c19yZWNlaXZlZCJjCg9Db25uZWN0aW9uRXZlbnQSDAoEdHlwZRgBIAEoCRIWCgluZXdfc3RhdGUYAiABKAlIAIgBARISCgVlcnJvchgDIAEoCUgBiAEBQgwKCl9uZXdfc3RhdGVCCAoGX2Vycm9yYgZwcm90bzM", [file_google_protobuf_timestamp, file_dxos_keys]);

/**
 * @generated from message dxos.devtools.swarm.SwarmInfo
 */
export type SwarmInfo = Message<"dxos.devtools.swarm.SwarmInfo"> & {
  /**
   * @generated from field: dxos.keys.PublicKey id = 1;
   */
  id?: PublicKey;

  /**
   * @generated from field: dxos.keys.PublicKey topic = 2;
   */
  topic?: PublicKey;

  /**
   * @generated from field: optional string label = 3;
   */
  label?: string;

  /**
   * @generated from field: bool is_active = 4;
   */
  isActive: boolean;

  /**
   * @generated from field: repeated dxos.devtools.swarm.ConnectionInfo connections = 5;
   */
  connections: ConnectionInfo[];
};

/**
 * Describes the message dxos.devtools.swarm.SwarmInfo.
 * Use `create(SwarmInfoSchema)` to create a new message.
 */
export const SwarmInfoSchema: GenMessage<SwarmInfo> = /*@__PURE__*/
  messageDesc(file_dxos_devtools_swarm, 0);

/**
 * @generated from message dxos.devtools.swarm.ConnectionInfo
 */
export type ConnectionInfo = Message<"dxos.devtools.swarm.ConnectionInfo"> & {
  /**
   * @generated from field: string state = 1;
   */
  state: string;

  /**
   * @generated from field: dxos.keys.PublicKey session_id = 2;
   */
  sessionId?: PublicKey;

  /**
   * @generated from field: dxos.keys.PublicKey remote_peer_id = 3;
   */
  remotePeerId?: PublicKey;

  /**
   * @generated from field: optional string transport = 4;
   */
  transport?: string;

  /**
   * @generated from field: repeated string protocol_extensions = 5;
   */
  protocolExtensions: string[];

  /**
   * @generated from field: repeated dxos.devtools.swarm.ConnectionEvent events = 6;
   */
  events: ConnectionEvent[];

  /**
   * @generated from field: repeated dxos.devtools.swarm.ConnectionInfo.StreamStats streams = 7;
   */
  streams: ConnectionInfo_StreamStats[];

  /**
   * @generated from field: optional string close_reason = 8;
   */
  closeReason?: string;

  /**
   * @generated from field: optional string identity = 9;
   */
  identity?: string;

  /**
   * @generated from field: optional uint32 readBufferSize = 10;
   */
  readBufferSize?: number;

  /**
   * @generated from field: optional uint32 writeBufferSize = 11;
   */
  writeBufferSize?: number;

  /**
   * @generated from field: optional google.protobuf.Timestamp last_update = 12;
   */
  lastUpdate?: Timestamp;

  /**
   * @generated from field: optional string transport_details = 13;
   */
  transportDetails?: string;

  /**
   * TODO(nf): uint64?
   *
   * @generated from field: optional uint32 transport_bytes_sent = 14;
   */
  transportBytesSent?: number;

  /**
   * @generated from field: optional uint32 transport_bytes_received = 15;
   */
  transportBytesReceived?: number;

  /**
   * @generated from field: optional uint32 transport_packets_sent = 16;
   */
  transportPacketsSent?: number;

  /**
   * @generated from field: optional uint32 transport_packets_received = 17;
   */
  transportPacketsReceived?: number;
};

/**
 * Describes the message dxos.devtools.swarm.ConnectionInfo.
 * Use `create(ConnectionInfoSchema)` to create a new message.
 */
export const ConnectionInfoSchema: GenMessage<ConnectionInfo> = /*@__PURE__*/
  messageDesc(file_dxos_devtools_swarm, 1);

/**
 * @generated from message dxos.devtools.swarm.ConnectionInfo.StreamStats
 */
export type ConnectionInfo_StreamStats = Message<"dxos.devtools.swarm.ConnectionInfo.StreamStats"> & {
  /**
   * @generated from field: uint32 id = 1;
   */
  id: number;

  /**
   * @generated from field: string tag = 2;
   */
  tag: string;

  /**
   * @generated from field: optional string contentType = 5;
   */
  contentType?: string;

  /**
   * @generated from field: uint32 bytesSent = 3;
   */
  bytesSent: number;

  /**
   * @generated from field: uint32 bytesReceived = 4;
   */
  bytesReceived: number;

  /**
   * bytes per second.
   *
   * @generated from field: optional uint32 bytesSentRate = 6;
   */
  bytesSentRate?: number;

  /**
   * @generated from field: optional uint32 bytesReceivedRate = 7;
   */
  bytesReceivedRate?: number;

  /**
   * @generated from field: optional uint32 writeBufferSize = 8;
   */
  writeBufferSize?: number;
};

/**
 * Describes the message dxos.devtools.swarm.ConnectionInfo.StreamStats.
 * Use `create(ConnectionInfo_StreamStatsSchema)` to create a new message.
 */
export const ConnectionInfo_StreamStatsSchema: GenMessage<ConnectionInfo_StreamStats> = /*@__PURE__*/
  messageDesc(file_dxos_devtools_swarm, 1, 0);

/**
 * @generated from message dxos.devtools.swarm.ConnectionEvent
 */
export type ConnectionEvent = Message<"dxos.devtools.swarm.ConnectionEvent"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: optional string new_state = 2;
   */
  newState?: string;

  /**
   * @generated from field: optional string error = 3;
   */
  error?: string;
};

/**
 * Describes the message dxos.devtools.swarm.ConnectionEvent.
 * Use `create(ConnectionEventSchema)` to create a new message.
 */
export const ConnectionEventSchema: GenMessage<ConnectionEvent> = /*@__PURE__*/
  messageDesc(file_dxos_devtools_swarm, 2);

