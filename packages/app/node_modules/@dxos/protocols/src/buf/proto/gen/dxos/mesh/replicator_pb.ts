//
// Copyright 2019 DXOS.org
//

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts,import_extension=js"
// @generated from file dxos/mesh/replicator.proto (package dxos.mesh.replicator, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Any } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file dxos/mesh/replicator.proto.
 */
export const file_dxos_mesh_replicator: GenFile = /*@__PURE__*/
  fileDesc("ChpkeG9zL21lc2gvcmVwbGljYXRvci5wcm90bxIUZHhvcy5tZXNoLnJlcGxpY2F0b3IiPQoJQ29udGFpbmVyEgwKBHR5cGUYASABKAkSIgoEZGF0YRgCIAMoCzIULmdvb2dsZS5wcm90b2J1Zi5BbnkiTgoERmVlZBIQCgNrZXkYASABKAxIAIgBARIaCg1kaXNjb3Zlcnlfa2V5GAIgASgMSAGIAQFCBgoEX2tleUIQCg5fZGlzY292ZXJ5X2tleWIGcHJvdG8z", [file_google_protobuf_any]);

/**
 * @generated from message dxos.mesh.replicator.Container
 */
export type Container = Message<"dxos.mesh.replicator.Container"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: repeated google.protobuf.Any data = 2;
   */
  data: Any[];
};

/**
 * Describes the message dxos.mesh.replicator.Container.
 * Use `create(ContainerSchema)` to create a new message.
 */
export const ContainerSchema: GenMessage<Container> = /*@__PURE__*/
  messageDesc(file_dxos_mesh_replicator, 0);

/**
 * @generated from message dxos.mesh.replicator.Feed
 */
export type Feed = Message<"dxos.mesh.replicator.Feed"> & {
  /**
   * @generated from field: optional bytes key = 1;
   */
  key?: Uint8Array;

  /**
   * @generated from field: optional bytes discovery_key = 2;
   */
  discoveryKey?: Uint8Array;
};

/**
 * Describes the message dxos.mesh.replicator.Feed.
 * Use `create(FeedSchema)` to create a new message.
 */
export const FeedSchema: GenMessage<Feed> = /*@__PURE__*/
  messageDesc(file_dxos_mesh_replicator, 1);

