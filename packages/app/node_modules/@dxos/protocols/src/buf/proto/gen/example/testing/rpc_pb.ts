//
// Copyright 2020 DXOS.org
//

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts,import_extension=js"
// @generated from file example/testing/rpc.proto (package example.testing.rpc, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Any, EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any, file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file example/testing/rpc.proto.
 */
export const file_example_testing_rpc: GenFile = /*@__PURE__*/
  fileDesc("ChlleGFtcGxlL3Rlc3RpbmcvcnBjLnByb3RvEhNleGFtcGxlLnRlc3RpbmcucnBjIh4KDlRlc3RScGNSZXF1ZXN0EgwKBGRhdGEYASABKAkiHwoPVGVzdFJwY1Jlc3BvbnNlEgwKBGRhdGEYASABKAkiXQoUVGVzdFN0cmVhbVJwY1JlcXVlc3QSDAoEZGF0YRgBIAEoCRIaChJzdHJlYW1Mb2FkSW50ZXJ2YWwYAiABKA0SGwoTc3RyZWFtTG9hZENodW5rU2l6ZRgDIAEoDSKPAQoVVGVzdFN0cmVhbVJwY1Jlc3BvbnNlEgwKBGRhdGEYASABKAkSEQoJYnl0ZXNTZW50GAIgASgNEhUKDWJ5dGVzUmVjZWl2ZWQYAyABKA0SEgoKc2VuZEVycm9ycxgEIAEoDRIVCg1yZWNlaXZlRXJyb3JzGAUgASgNEhMKC3J1bm5pbmdUaW1lGAYgASgNIhwKC1BpbmdSZXF1ZXN0Eg0KBW5vbmNlGAEgASgFIhwKC1BpbmdSZXBvbnNlEg0KBW5vbmNlGAEgASgFIjcKDk1lc3NhZ2VXaXRoQW55EiUKB3BheWxvYWQYASABKAsyFC5nb29nbGUucHJvdG9idWYuQW55MqABCgtUZXN0U2VydmljZRJVCghUZXN0Q2FsbBIjLmV4YW1wbGUudGVzdGluZy5ycGMuVGVzdFJwY1JlcXVlc3QaJC5leGFtcGxlLnRlc3RpbmcucnBjLlRlc3RScGNSZXNwb25zZRI6CghWb2lkQ2FsbBIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eTJsChFUZXN0U3RyZWFtU2VydmljZRJXCghUZXN0Q2FsbBIjLmV4YW1wbGUudGVzdGluZy5ycGMuVGVzdFJwY1JlcXVlc3QaJC5leGFtcGxlLnRlc3RpbmcucnBjLlRlc3RScGNSZXNwb25zZTABMuIBChZUZXN0U2VydmljZVdpdGhTdHJlYW1zEmQKEVJlcXVlc3RUZXN0U3RyZWFtEikuZXhhbXBsZS50ZXN0aW5nLnJwYy5UZXN0U3RyZWFtUnBjUmVxdWVzdBokLmV4YW1wbGUudGVzdGluZy5ycGMuVGVzdFJwY1Jlc3BvbnNlEmIKD0Nsb3NlVGVzdFN0cmVhbRIjLmV4YW1wbGUudGVzdGluZy5ycGMuVGVzdFJwY1JlcXVlc3QaKi5leGFtcGxlLnRlc3RpbmcucnBjLlRlc3RTdHJlYW1ScGNSZXNwb25zZTJZCgtQaW5nU2VydmljZRJKCgRQaW5nEiAuZXhhbXBsZS50ZXN0aW5nLnJwYy5QaW5nUmVxdWVzdBogLmV4YW1wbGUudGVzdGluZy5ycGMuUGluZ1JlcG9uc2UyZgoOVGVzdEFueVNlcnZpY2USVAoIVGVzdENhbGwSIy5leGFtcGxlLnRlc3RpbmcucnBjLk1lc3NhZ2VXaXRoQW55GiMuZXhhbXBsZS50ZXN0aW5nLnJwYy5NZXNzYWdlV2l0aEFueUI0WjJnaXRodWIuY29tL2R4b3MvZHhvcy9wcm90by9kZWYvZXhhbXBsZS90ZXN0aW5nL3JwY2IGcHJvdG8z", [file_google_protobuf_any, file_google_protobuf_empty]);

/**
 * @generated from message example.testing.rpc.TestRpcRequest
 */
export type TestRpcRequest = Message<"example.testing.rpc.TestRpcRequest"> & {
  /**
   * @generated from field: string data = 1;
   */
  data: string;
};

/**
 * Describes the message example.testing.rpc.TestRpcRequest.
 * Use `create(TestRpcRequestSchema)` to create a new message.
 */
export const TestRpcRequestSchema: GenMessage<TestRpcRequest> = /*@__PURE__*/
  messageDesc(file_example_testing_rpc, 0);

/**
 * @generated from message example.testing.rpc.TestRpcResponse
 */
export type TestRpcResponse = Message<"example.testing.rpc.TestRpcResponse"> & {
  /**
   * @generated from field: string data = 1;
   */
  data: string;
};

/**
 * Describes the message example.testing.rpc.TestRpcResponse.
 * Use `create(TestRpcResponseSchema)` to create a new message.
 */
export const TestRpcResponseSchema: GenMessage<TestRpcResponse> = /*@__PURE__*/
  messageDesc(file_example_testing_rpc, 1);

/**
 * @generated from message example.testing.rpc.TestStreamRpcRequest
 */
export type TestStreamRpcRequest = Message<"example.testing.rpc.TestStreamRpcRequest"> & {
  /**
   * @generated from field: string data = 1;
   */
  data: string;

  /**
   * @generated from field: uint32 streamLoadInterval = 2;
   */
  streamLoadInterval: number;

  /**
   * @generated from field: uint32 streamLoadChunkSize = 3;
   */
  streamLoadChunkSize: number;
};

/**
 * Describes the message example.testing.rpc.TestStreamRpcRequest.
 * Use `create(TestStreamRpcRequestSchema)` to create a new message.
 */
export const TestStreamRpcRequestSchema: GenMessage<TestStreamRpcRequest> = /*@__PURE__*/
  messageDesc(file_example_testing_rpc, 2);

/**
 * @generated from message example.testing.rpc.TestStreamRpcResponse
 */
export type TestStreamRpcResponse = Message<"example.testing.rpc.TestStreamRpcResponse"> & {
  /**
   * @generated from field: string data = 1;
   */
  data: string;

  /**
   * @generated from field: uint32 bytesSent = 2;
   */
  bytesSent: number;

  /**
   * @generated from field: uint32 bytesReceived = 3;
   */
  bytesReceived: number;

  /**
   * @generated from field: uint32 sendErrors = 4;
   */
  sendErrors: number;

  /**
   * @generated from field: uint32 receiveErrors = 5;
   */
  receiveErrors: number;

  /**
   * @generated from field: uint32 runningTime = 6;
   */
  runningTime: number;
};

/**
 * Describes the message example.testing.rpc.TestStreamRpcResponse.
 * Use `create(TestStreamRpcResponseSchema)` to create a new message.
 */
export const TestStreamRpcResponseSchema: GenMessage<TestStreamRpcResponse> = /*@__PURE__*/
  messageDesc(file_example_testing_rpc, 3);

/**
 * @generated from message example.testing.rpc.PingRequest
 */
export type PingRequest = Message<"example.testing.rpc.PingRequest"> & {
  /**
   * @generated from field: int32 nonce = 1;
   */
  nonce: number;
};

/**
 * Describes the message example.testing.rpc.PingRequest.
 * Use `create(PingRequestSchema)` to create a new message.
 */
export const PingRequestSchema: GenMessage<PingRequest> = /*@__PURE__*/
  messageDesc(file_example_testing_rpc, 4);

/**
 * @generated from message example.testing.rpc.PingReponse
 */
export type PingReponse = Message<"example.testing.rpc.PingReponse"> & {
  /**
   * @generated from field: int32 nonce = 1;
   */
  nonce: number;
};

/**
 * Describes the message example.testing.rpc.PingReponse.
 * Use `create(PingReponseSchema)` to create a new message.
 */
export const PingReponseSchema: GenMessage<PingReponse> = /*@__PURE__*/
  messageDesc(file_example_testing_rpc, 5);

/**
 * @generated from message example.testing.rpc.MessageWithAny
 */
export type MessageWithAny = Message<"example.testing.rpc.MessageWithAny"> & {
  /**
   * @generated from field: google.protobuf.Any payload = 1;
   */
  payload?: Any;
};

/**
 * Describes the message example.testing.rpc.MessageWithAny.
 * Use `create(MessageWithAnySchema)` to create a new message.
 */
export const MessageWithAnySchema: GenMessage<MessageWithAny> = /*@__PURE__*/
  messageDesc(file_example_testing_rpc, 6);

/**
 * @generated from service example.testing.rpc.TestService
 */
export const TestService: GenService<{
  /**
   * @generated from rpc example.testing.rpc.TestService.TestCall
   */
  testCall: {
    methodKind: "unary";
    input: typeof TestRpcRequestSchema;
    output: typeof TestRpcResponseSchema;
  },
  /**
   * @generated from rpc example.testing.rpc.TestService.VoidCall
   */
  voidCall: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_example_testing_rpc, 0);

/**
 * @generated from service example.testing.rpc.TestStreamService
 */
export const TestStreamService: GenService<{
  /**
   * @generated from rpc example.testing.rpc.TestStreamService.TestCall
   */
  testCall: {
    methodKind: "server_streaming";
    input: typeof TestRpcRequestSchema;
    output: typeof TestRpcResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_example_testing_rpc, 1);

/**
 * @generated from service example.testing.rpc.TestServiceWithStreams
 */
export const TestServiceWithStreams: GenService<{
  /**
   * @generated from rpc example.testing.rpc.TestServiceWithStreams.RequestTestStream
   */
  requestTestStream: {
    methodKind: "unary";
    input: typeof TestStreamRpcRequestSchema;
    output: typeof TestRpcResponseSchema;
  },
  /**
   * @generated from rpc example.testing.rpc.TestServiceWithStreams.CloseTestStream
   */
  closeTestStream: {
    methodKind: "unary";
    input: typeof TestRpcRequestSchema;
    output: typeof TestStreamRpcResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_example_testing_rpc, 2);

/**
 * @generated from service example.testing.rpc.PingService
 */
export const PingService: GenService<{
  /**
   * @generated from rpc example.testing.rpc.PingService.Ping
   */
  ping: {
    methodKind: "unary";
    input: typeof PingRequestSchema;
    output: typeof PingReponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_example_testing_rpc, 3);

/**
 * @generated from service example.testing.rpc.TestAnyService
 */
export const TestAnyService: GenService<{
  /**
   * @generated from rpc example.testing.rpc.TestAnyService.TestCall
   */
  testCall: {
    methodKind: "unary";
    input: typeof MessageWithAnySchema;
    output: typeof MessageWithAnySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_example_testing_rpc, 4);

