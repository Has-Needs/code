//
// Copyright 2020 DXOS.org
//

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts,import_extension=js"
// @generated from file dxos/bot.proto (package dxos.bot, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { EmptySchema, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Invitation } from "./client/invitation_pb.js";
import { file_dxos_client_invitation } from "./client/invitation_pb.js";
import type { Config } from "./config_pb.js";
import { file_dxos_config } from "./config_pb.js";
import type { TimeframeVector } from "./echo/timeframe_pb.js";
import { file_dxos_echo_timeframe } from "./echo/timeframe_pb.js";
import type { PublicKey } from "./keys_pb.js";
import { file_dxos_keys } from "./keys_pb.js";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file dxos/bot.proto.
 */
export const file_dxos_bot: GenFile = /*@__PURE__*/
  fileDesc("Cg5keG9zL2JvdC5wcm90bxIIZHhvcy5ib3QiVwoTQm90UGFja2FnZVNwZWNpZmllchIOCgRuYW1lGAEgASgJSAASEgoIaXBmc19jaWQYAiABKAlIABIUCgpsb2NhbF9wYXRoGAMgASgJSABCBgoEa2luZCLrBQoDQm90EgoKAmlkGAEgASgJEikKBnN0YXR1cxgCIAEoDjIULmR4b3MuYm90LkJvdC5TdGF0dXNIAIgBARIwCg1kZXNpcmVkX3N0YXRlGDcgASgOMhQuZHhvcy5ib3QuQm90LlN0YXR1c0gBiAEBEi4KIWF0dGVtcHRzX3RvX2FjaGlldmVfZGVzaXJlZF9zdGF0ZRg4IAEoBUgCiAEBEj0KEXBhY2thZ2Vfc3BlY2lmaWVyGAMgASgLMh0uZHhvcy5ib3QuQm90UGFja2FnZVNwZWNpZmllckgDiAEBEjMKCmxhc3Rfc3RhcnQYBCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wSASIAQESLAoJc3BhY2Vfa2V5GAUgASgLMhQuZHhvcy5rZXlzLlB1YmxpY0tleUgFiAEBEisKB3J1bnRpbWUYBiABKAsyFS5keG9zLmJvdC5Cb3QuUnVudGltZUgGiAEBEigKBnJlcG9ydBgHIAEoCzITLmR4b3MuYm90LkJvdFJlcG9ydEgHiAEBGncKB1J1bnRpbWUSFgoJZXhpdF9jb2RlGAEgASgFSACIAQESGAoLZXhpdF9zaWduYWwYAiABKAlIAYgBARISCgVlcnJvchgDIAEoCUgCiAEBQgwKCl9leGl0X2NvZGVCDgoMX2V4aXRfc2lnbmFsQggKBl9lcnJvciJMCgZTdGF0dXMSCwoHU1RPUFBFRBAAEgwKCFNUQVJUSU5HEAESCwoHUlVOTklORxACEgwKCFNUT1BQSU5HEAMSDAoIU1BBV05JTkcQBEIJCgdfc3RhdHVzQhAKDl9kZXNpcmVkX3N0YXRlQiQKIl9hdHRlbXB0c190b19hY2hpZXZlX2Rlc2lyZWRfc3RhdGVCFAoSX3BhY2thZ2Vfc3BlY2lmaWVyQg0KC19sYXN0X3N0YXJ0QgwKCl9zcGFjZV9rZXlCCgoIX3J1bnRpbWVCCQoHX3JlcG9ydCIuCg9HZXRCb3RzUmVzcG9uc2USGwoEYm90cxgBIAMoCzINLmR4b3MuYm90LkJvdCLYAQoPU3Bhd25Cb3RSZXF1ZXN0EjMKB3BhY2thZ2UYASABKAsyHS5keG9zLmJvdC5Cb3RQYWNrYWdlU3BlY2lmaWVySACIAQESOQoKaW52aXRhdGlvbhgCIAEoCzIgLmR4b3MuY2xpZW50LnNlcnZpY2VzLkludml0YXRpb25IAYgBARIsCglzcGFjZV9rZXkYAyABKAsyFC5keG9zLmtleXMuUHVibGljS2V5SAKIAQFCCgoIX3BhY2thZ2VCDQoLX2ludml0YXRpb25CDAoKX3NwYWNlX2tleSJWChJTZW5kQ29tbWFuZFJlcXVlc3QSEwoGYm90X2lkGAEgASgJSACIAQESFAoHY29tbWFuZBgCIAEoDEgBiAEBQgkKB19ib3RfaWRCCgoIX2NvbW1hbmQiOQoTU2VuZENvbW1hbmRSZXNwb25zZRIVCghyZXNwb25zZRgBIAEoDEgAiAEBQgsKCV9yZXNwb25zZSIgCg9HZXRMb2dzUmVzcG9uc2USDQoFY2h1bmsYASABKAwiIAoOR2V0TG9nc1JlcXVlc3QSDgoGYm90X2lkGAEgASgJImsKCUJvdFJlcG9ydBJGChNwcm9jZXNzZWRfdGltZWZyYW1lGAEgASgLMiQuZHhvcy5lY2hvLnRpbWVmcmFtZS5UaW1lZnJhbWVWZWN0b3JIAIgBAUIWChRfcHJvY2Vzc2VkX3RpbWVmcmFtZSKqAQoRSW5pdGlhbGl6ZVJlcXVlc3QSKAoGY29uZmlnGAEgASgLMhMuZHhvcy5jb25maWcuQ29uZmlnSACIAQESOQoKaW52aXRhdGlvbhgCIAEoCzIgLmR4b3MuY2xpZW50LnNlcnZpY2VzLkludml0YXRpb25IAYgBARIPCgJpZBgDIAEoCUgCiAEBQgkKB19jb25maWdCDQoLX2ludml0YXRpb25CBQoDX2lkIjMKDFN0YXJ0UmVxdWVzdBIjCgZjb25maWcYASABKAsyEy5keG9zLmNvbmZpZy5Db25maWcy0AMKEUJvdEZhY3RvcnlTZXJ2aWNlEjwKB0dldEJvdHMSFi5nb29nbGUucHJvdG9idWYuRW1wdHkaGS5keG9zLmJvdC5HZXRCb3RzUmVzcG9uc2USNAoIU3Bhd25Cb3QSGS5keG9zLmJvdC5TcGF3bkJvdFJlcXVlc3QaDS5keG9zLmJvdC5Cb3QSJQoFU3RhcnQSDS5keG9zLmJvdC5Cb3QaDS5keG9zLmJvdC5Cb3QSJAoEU3RvcBINLmR4b3MuYm90LkJvdBoNLmR4b3MuYm90LkJvdBIvCgZSZW1vdmUSDS5keG9zLmJvdC5Cb3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkSQAoHR2V0TG9ncxIYLmR4b3MuYm90LkdldExvZ3NSZXF1ZXN0GhkuZHhvcy5ib3QuR2V0TG9nc1Jlc3BvbnNlMAESSgoLU2VuZENvbW1hbmQSHC5keG9zLmJvdC5TZW5kQ29tbWFuZFJlcXVlc3QaHS5keG9zLmJvdC5TZW5kQ29tbWFuZFJlc3BvbnNlEjsKCVJlbW92ZUFsbBIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eTLJAgoKQm90U2VydmljZRJBCgpJbml0aWFsaXplEhsuZHhvcy5ib3QuSW5pdGlhbGl6ZVJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkSNwoFU3RhcnQSFi5keG9zLmJvdC5TdGFydFJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkSRgoHQ29tbWFuZBIcLmR4b3MuYm90LlNlbmRDb21tYW5kUmVxdWVzdBodLmR4b3MuYm90LlNlbmRDb21tYW5kUmVzcG9uc2USNgoEU3RvcBIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRI/Cg5TdGFydFJlcG9ydGluZxIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRoTLmR4b3MuYm90LkJvdFJlcG9ydDABYgZwcm90bzM", [file_google_protobuf_empty, file_google_protobuf_timestamp, file_dxos_client_invitation, file_dxos_config, file_dxos_echo_timeframe, file_dxos_keys]);

/**
 * TODO(burdon): Rename.
 *
 * @generated from message dxos.bot.BotPackageSpecifier
 */
export type BotPackageSpecifier = Message<"dxos.bot.BotPackageSpecifier"> & {
  /**
   * @generated from oneof dxos.bot.BotPackageSpecifier.kind
   */
  kind: {
    /**
     * / DXN of the bot in the DXNS registry.
     *
     * @generated from field: string name = 1;
     */
    value: string;
    case: "name";
  } | {
    /**
     * @generated from field: string ipfs_cid = 2;
     */
    value: string;
    case: "ipfsCid";
  } | {
    /**
     * @generated from field: string local_path = 3;
     */
    value: string;
    case: "localPath";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message dxos.bot.BotPackageSpecifier.
 * Use `create(BotPackageSpecifierSchema)` to create a new message.
 */
export const BotPackageSpecifierSchema: GenMessage<BotPackageSpecifier> = /*@__PURE__*/
  messageDesc(file_dxos_bot, 0);

/**
 * @generated from message dxos.bot.Bot
 */
export type Bot = Message<"dxos.bot.Bot"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * TODO: Rename to state.
   *
   * @generated from field: optional dxos.bot.Bot.Status status = 2;
   */
  status?: Bot_Status;

  /**
   * / The state that the bot aims to be in. Can be only either RUNNING or STOPPED.
   *
   * @generated from field: optional dxos.bot.Bot.Status desired_state = 55;
   */
  desiredState?: Bot_Status;

  /**
   * @generated from field: optional int32 attempts_to_achieve_desired_state = 56;
   */
  attemptsToAchieveDesiredState?: number;

  /**
   * @generated from field: optional dxos.bot.BotPackageSpecifier package_specifier = 3;
   */
  packageSpecifier?: BotPackageSpecifier;

  /**
   * @generated from field: optional google.protobuf.Timestamp last_start = 4;
   */
  lastStart?: Timestamp;

  /**
   * @generated from field: optional dxos.keys.PublicKey space_key = 5;
   */
  spaceKey?: PublicKey;

  /**
   * @generated from field: optional dxos.bot.Bot.Runtime runtime = 6;
   */
  runtime?: Bot_Runtime;

  /**
   * @generated from field: optional dxos.bot.BotReport report = 7;
   */
  report?: BotReport;
};

/**
 * Describes the message dxos.bot.Bot.
 * Use `create(BotSchema)` to create a new message.
 */
export const BotSchema: GenMessage<Bot> = /*@__PURE__*/
  messageDesc(file_dxos_bot, 1);

/**
 * @generated from message dxos.bot.Bot.Runtime
 */
export type Bot_Runtime = Message<"dxos.bot.Bot.Runtime"> & {
  /**
   * @generated from field: optional int32 exit_code = 1;
   */
  exitCode?: number;

  /**
   * @generated from field: optional string exit_signal = 2;
   */
  exitSignal?: string;

  /**
   * @generated from field: optional string error = 3;
   */
  error?: string;
};

/**
 * Describes the message dxos.bot.Bot.Runtime.
 * Use `create(Bot_RuntimeSchema)` to create a new message.
 */
export const Bot_RuntimeSchema: GenMessage<Bot_Runtime> = /*@__PURE__*/
  messageDesc(file_dxos_bot, 1, 0);

/**
 * TODO(burdon): Rename to state.
 *
 * @generated from enum dxos.bot.Bot.Status
 */
export enum Bot_Status {
  /**
   * / Bot is stopped.
   *
   * @generated from enum value: STOPPED = 0;
   */
  STOPPED = 0,

  /**
   * / Starting bot process.
   *
   * @generated from enum value: STARTING = 1;
   */
  STARTING = 1,

  /**
   * / Bot is running.
   *
   * @generated from enum value: RUNNING = 2;
   */
  RUNNING = 2,

  /**
   * / Bot is stopping.
   *
   * @generated from enum value: STOPPING = 3;
   */
  STOPPING = 3,

  /**
   * / Bot is being spawned. Bot factory is downloading the bot bundle and initializing resources.
   *
   * @generated from enum value: SPAWNING = 4;
   */
  SPAWNING = 4,
}

/**
 * Describes the enum dxos.bot.Bot.Status.
 */
export const Bot_StatusSchema: GenEnum<Bot_Status> = /*@__PURE__*/
  enumDesc(file_dxos_bot, 1, 0);

/**
 * @generated from message dxos.bot.GetBotsResponse
 */
export type GetBotsResponse = Message<"dxos.bot.GetBotsResponse"> & {
  /**
   * @generated from field: repeated dxos.bot.Bot bots = 1;
   */
  bots: Bot[];
};

/**
 * Describes the message dxos.bot.GetBotsResponse.
 * Use `create(GetBotsResponseSchema)` to create a new message.
 */
export const GetBotsResponseSchema: GenMessage<GetBotsResponse> = /*@__PURE__*/
  messageDesc(file_dxos_bot, 2);

/**
 * @generated from message dxos.bot.SpawnBotRequest
 */
export type SpawnBotRequest = Message<"dxos.bot.SpawnBotRequest"> & {
  /**
   * @generated from field: optional dxos.bot.BotPackageSpecifier package = 1;
   */
  package?: BotPackageSpecifier;

  /**
   * / Invitation for the bot to join the target space.
   *
   * @generated from field: optional dxos.client.services.Invitation invitation = 2;
   */
  invitation?: Invitation;

  /**
   * / Key of the space bot is invited to.
   *
   * @generated from field: optional dxos.keys.PublicKey space_key = 3;
   */
  spaceKey?: PublicKey;
};

/**
 * Describes the message dxos.bot.SpawnBotRequest.
 * Use `create(SpawnBotRequestSchema)` to create a new message.
 */
export const SpawnBotRequestSchema: GenMessage<SpawnBotRequest> = /*@__PURE__*/
  messageDesc(file_dxos_bot, 3);

/**
 * @generated from message dxos.bot.SendCommandRequest
 */
export type SendCommandRequest = Message<"dxos.bot.SendCommandRequest"> & {
  /**
   * @generated from field: optional string bot_id = 1;
   */
  botId?: string;

  /**
   * @generated from field: optional bytes command = 2;
   */
  command?: Uint8Array;
};

/**
 * Describes the message dxos.bot.SendCommandRequest.
 * Use `create(SendCommandRequestSchema)` to create a new message.
 */
export const SendCommandRequestSchema: GenMessage<SendCommandRequest> = /*@__PURE__*/
  messageDesc(file_dxos_bot, 4);

/**
 * @generated from message dxos.bot.SendCommandResponse
 */
export type SendCommandResponse = Message<"dxos.bot.SendCommandResponse"> & {
  /**
   * @generated from field: optional bytes response = 1;
   */
  response?: Uint8Array;
};

/**
 * Describes the message dxos.bot.SendCommandResponse.
 * Use `create(SendCommandResponseSchema)` to create a new message.
 */
export const SendCommandResponseSchema: GenMessage<SendCommandResponse> = /*@__PURE__*/
  messageDesc(file_dxos_bot, 5);

/**
 * @generated from message dxos.bot.GetLogsResponse
 */
export type GetLogsResponse = Message<"dxos.bot.GetLogsResponse"> & {
  /**
   * @generated from field: bytes chunk = 1;
   */
  chunk: Uint8Array;
};

/**
 * Describes the message dxos.bot.GetLogsResponse.
 * Use `create(GetLogsResponseSchema)` to create a new message.
 */
export const GetLogsResponseSchema: GenMessage<GetLogsResponse> = /*@__PURE__*/
  messageDesc(file_dxos_bot, 6);

/**
 * @generated from message dxos.bot.GetLogsRequest
 */
export type GetLogsRequest = Message<"dxos.bot.GetLogsRequest"> & {
  /**
   * @generated from field: string bot_id = 1;
   */
  botId: string;
};

/**
 * Describes the message dxos.bot.GetLogsRequest.
 * Use `create(GetLogsRequestSchema)` to create a new message.
 */
export const GetLogsRequestSchema: GenMessage<GetLogsRequest> = /*@__PURE__*/
  messageDesc(file_dxos_bot, 7);

/**
 * @generated from message dxos.bot.BotReport
 */
export type BotReport = Message<"dxos.bot.BotReport"> & {
  /**
   * / Details of the space the bot was spawned for.
   *
   * @generated from field: optional dxos.echo.timeframe.TimeframeVector processed_timeframe = 1;
   */
  processedTimeframe?: TimeframeVector;
};

/**
 * Describes the message dxos.bot.BotReport.
 * Use `create(BotReportSchema)` to create a new message.
 */
export const BotReportSchema: GenMessage<BotReport> = /*@__PURE__*/
  messageDesc(file_dxos_bot, 8);

/**
 * @generated from message dxos.bot.InitializeRequest
 */
export type InitializeRequest = Message<"dxos.bot.InitializeRequest"> & {
  /**
   * / Bot runtime configuration.
   *
   * @generated from field: optional dxos.config.Config config = 1;
   */
  config?: Config;

  /**
   * / Invitation for the bot to join the target space.
   *
   * @generated from field: optional dxos.client.services.Invitation invitation = 2;
   */
  invitation?: Invitation;

  /**
   * / ID of the bot.
   *
   * @generated from field: optional string id = 3;
   */
  id?: string;
};

/**
 * Describes the message dxos.bot.InitializeRequest.
 * Use `create(InitializeRequestSchema)` to create a new message.
 */
export const InitializeRequestSchema: GenMessage<InitializeRequest> = /*@__PURE__*/
  messageDesc(file_dxos_bot, 9);

/**
 * @generated from message dxos.bot.StartRequest
 */
export type StartRequest = Message<"dxos.bot.StartRequest"> & {
  /**
   * / Bot runtime configuration.
   *
   * @generated from field: dxos.config.Config config = 1;
   */
  config?: Config;
};

/**
 * Describes the message dxos.bot.StartRequest.
 * Use `create(StartRequestSchema)` to create a new message.
 */
export const StartRequestSchema: GenMessage<StartRequest> = /*@__PURE__*/
  messageDesc(file_dxos_bot, 10);

/**
 * / Service that is used by clients to communicate with bot factory.
 *
 * @generated from service dxos.bot.BotFactoryService
 */
export const BotFactoryService: GenService<{
  /**
   * @generated from rpc dxos.bot.BotFactoryService.GetBots
   */
  getBots: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof GetBotsResponseSchema;
  },
  /**
   * @generated from rpc dxos.bot.BotFactoryService.SpawnBot
   */
  spawnBot: {
    methodKind: "unary";
    input: typeof SpawnBotRequestSchema;
    output: typeof BotSchema;
  },
  /**
   * @generated from rpc dxos.bot.BotFactoryService.Start
   */
  start: {
    methodKind: "unary";
    input: typeof BotSchema;
    output: typeof BotSchema;
  },
  /**
   * @generated from rpc dxos.bot.BotFactoryService.Stop
   */
  stop: {
    methodKind: "unary";
    input: typeof BotSchema;
    output: typeof BotSchema;
  },
  /**
   * @generated from rpc dxos.bot.BotFactoryService.Remove
   */
  remove: {
    methodKind: "unary";
    input: typeof BotSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc dxos.bot.BotFactoryService.GetLogs
   */
  getLogs: {
    methodKind: "server_streaming";
    input: typeof GetLogsRequestSchema;
    output: typeof GetLogsResponseSchema;
  },
  /**
   * @generated from rpc dxos.bot.BotFactoryService.SendCommand
   */
  sendCommand: {
    methodKind: "unary";
    input: typeof SendCommandRequestSchema;
    output: typeof SendCommandResponseSchema;
  },
  /**
   * @generated from rpc dxos.bot.BotFactoryService.RemoveAll
   */
  removeAll: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_dxos_bot, 0);

/**
 * / Service that is used by bots communicating with bot factory.
 *
 * @generated from service dxos.bot.BotService
 */
export const BotService: GenService<{
  /**
   * / Initialize Client, create profile, and join a space.
   *
   * @generated from rpc dxos.bot.BotService.Initialize
   */
  initialize: {
    methodKind: "unary";
    input: typeof InitializeRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * / Start an initialized bot.
   *
   * @generated from rpc dxos.bot.BotService.Start
   */
  start: {
    methodKind: "unary";
    input: typeof StartRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * / Custom commands sent to the bot factory.
   *
   * @generated from rpc dxos.bot.BotService.Command
   */
  command: {
    methodKind: "unary";
    input: typeof SendCommandRequestSchema;
    output: typeof SendCommandResponseSchema;
  },
  /**
   * / Stop the bot.
   *
   * @generated from rpc dxos.bot.BotService.Stop
   */
  stop: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof EmptySchema;
  },
  /**
   * / Send periodic reports of the bot's state.
   *
   * @generated from rpc dxos.bot.BotService.StartReporting
   */
  startReporting: {
    methodKind: "server_streaming";
    input: typeof EmptySchema;
    output: typeof BotReportSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_dxos_bot, 1);

