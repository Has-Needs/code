import type * as A from '@automerge/automerge';
import { type AutomergeUrl, type DocHandle, type DocumentId } from '@automerge/automerge-repo';
import { DatabaseDirectory, SpaceDocVersion } from '@dxos/echo-protocol';
import { type DocMetrics } from './automerge-metrics';
export declare class DatabaseRoot {
    private readonly _rootHandle;
    static mapLinks(doc: DocHandle<DatabaseDirectory>, mapping: Record<DocumentId, DocumentId>): void;
    constructor(_rootHandle: DocHandle<DatabaseDirectory>);
    get documentId(): DocumentId;
    get url(): AutomergeUrl;
    get isLoaded(): boolean;
    get handle(): DocHandle<DatabaseDirectory>;
    doc(): A.Doc<DatabaseDirectory> | null;
    getVersion(): SpaceDocVersion | null;
    getSpaceKey(): string | null;
    getInlineObjectCount(): number | null;
    getLinkedObjectCount(): number | null;
    getAllLinkedDocuments(): AutomergeUrl[];
    measureMetrics(): DocMetrics | null;
}
//# sourceMappingURL=database-root.d.ts.map