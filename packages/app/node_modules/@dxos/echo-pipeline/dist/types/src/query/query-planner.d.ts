import { type QueryAST } from '@dxos/echo-protocol';
import { QueryPlan } from './plan';
export type QueryPlannerOptions = {
    defaultTextSearchKind: QueryPlan.TextSearchKind;
};
/**
 * Constructs an optimized query plan.
 */
export declare class QueryPlanner {
    private readonly _options;
    constructor(options?: Partial<QueryPlannerOptions>);
    createPlan(query: QueryAST.Query): QueryPlan.Plan;
    private _generate;
    private _generateOptionsClause;
    private _generateSelectClause;
    private _generateSelectionFromFilter;
    private _generateDeletedHandlingSteps;
    private _generateUnionClause;
    private _generateSetDifferenceClause;
    private _generateReferenceTraversalClause;
    private _generateIncomingReferencesClause;
    private _generateRelationTraversalClause;
    private _generateRelationClause;
    private _generateFilterClause;
    /**
     * Removes filter steps that have no predicates.
     */
    private _optimizeEmptyFilters;
    /**
     * Removes union steps that have only one child.
     */
    private _optimizeSoloUnions;
}
//# sourceMappingURL=query-planner.d.ts.map