import { Schema } from 'effect';
import { Type } from '@dxos/echo';
export declare const Person: Type.obj<Schema.Struct<{
    name: typeof Schema.String;
    email: Schema.optional<typeof Schema.String>;
    age: Schema.optional<typeof Schema.Number>;
}>>;
export interface Person extends Schema.Schema.Type<typeof Person> {
}
export declare const Organization: Type.obj<Schema.Struct<{
    name: typeof Schema.String;
}>>;
export interface Organization extends Schema.Schema.Type<typeof Organization> {
}
export declare const WorksFor: Type.relation<Schema.Struct<{
    since: typeof Schema.String;
}>, Type.obj<Schema.Struct<{
    name: typeof Schema.String;
    email: Schema.optional<typeof Schema.String>;
    age: Schema.optional<typeof Schema.Number>;
}>>, Type.obj<Schema.Struct<{
    name: typeof Schema.String;
}>>>;
export interface WorksFor extends Schema.Schema.Type<typeof WorksFor> {
}
export declare const Task: Type.obj<Schema.Struct<{
    title: typeof Schema.String;
    createdAt: typeof Schema.String;
    assignee: Type.ref<Type.obj<Schema.Struct<{
        name: typeof Schema.String;
        email: Schema.optional<typeof Schema.String>;
        age: Schema.optional<typeof Schema.Number>;
    }>>>;
}>>;
export interface Task extends Schema.Schema.Type<typeof Task> {
}
//# sourceMappingURL=test-schema.d.ts.map