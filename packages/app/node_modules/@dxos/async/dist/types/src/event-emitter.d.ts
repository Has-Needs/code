import { type EventEmitter } from 'node:events';
/**
 * Adds the listener and returns a function to remove it.
 * Promotes removing listeners when cleaning up objects (to prevent leaks).
 */
export declare const onEvent: (eventEmitter: EventEmitter, eventName: string, callback: (args: any) => void) => () => EventEmitter<[never]>;
/**
 * @deprecated
 */
export declare const addListener: (eventEmitter: EventEmitter, eventName: string, callback: () => void) => {
    remove: () => EventEmitter<[never]>;
};
/**
 * Waits for an event with an optional test condition.
 */
export declare const waitForEvent: (eventEmitter: EventEmitter, eventName: string, test?: (args: any) => boolean, timeout?: number, error?: Error | string) => Promise<any>;
//# sourceMappingURL=event-emitter.d.ts.map