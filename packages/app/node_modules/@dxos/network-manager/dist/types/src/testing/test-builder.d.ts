import { PublicKey } from '@dxos/keys';
import { MemorySignalManager, WebsocketSignalManager } from '@dxos/messaging';
import { type Runtime } from '@dxos/protocols/proto/dxos/config';
import { type TestTeleportExtensionFactory, TestWireProtocol } from './test-wire-protocol';
import { SwarmNetworkManager } from '../network-manager';
import { FullyConnectedTopology } from '../topology';
import { TransportKind } from '../transport';
export declare const TEST_SIGNAL_HOSTS: Runtime.Services.Signal[];
export type TestBuilderOptions = {
    signalHosts?: Runtime.Services.Signal[];
    bridge?: boolean;
    transport?: TransportKind;
};
/**
 * Builder used to construct networks and peers.
 */
export declare class TestBuilder {
    readonly options: TestBuilderOptions;
    private _signalContext;
    constructor(options?: TestBuilderOptions);
    createSignalManager(): WebsocketSignalManager | MemorySignalManager;
    createPeer(peerId?: PublicKey): TestPeer;
}
/**
 * Testing network peer.
 */
export declare class TestPeer {
    private readonly testBuilder;
    readonly peerId: PublicKey;
    readonly transport: TransportKind;
    private readonly _swarms;
    private _proxy?;
    private _service?;
    constructor(testBuilder: TestBuilder, peerId: PublicKey, transport?: TransportKind);
    createNetworkManager(transport: TransportKind): SwarmNetworkManager;
    open(): Promise<void>;
    close(): Promise<void>;
    getSwarm(topic: PublicKey): TestSwarmConnection;
    createSwarm(topic: PublicKey, extensionFactory?: TestTeleportExtensionFactory): TestSwarmConnection;
    goOffline(): Promise<void>;
    goOnline(): Promise<void>;
}
export declare class TestSwarmConnection {
    readonly peer: TestPeer;
    readonly topic: PublicKey;
    readonly extensionFactory: TestTeleportExtensionFactory;
    protocol: TestWireProtocol;
    constructor(peer: TestPeer, topic: PublicKey, extensionFactory: TestTeleportExtensionFactory);
    join(topology?: FullyConnectedTopology): Promise<this>;
    leave(): Promise<this>;
}
//# sourceMappingURL=test-builder.d.ts.map