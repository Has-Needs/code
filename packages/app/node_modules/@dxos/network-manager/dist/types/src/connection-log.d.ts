import { Event } from '@dxos/async';
import { PublicKey } from '@dxos/keys';
import { type SwarmInfo } from '@dxos/protocols/proto/dxos/devtools/swarm';
import { type Swarm } from './swarm';
export declare enum EventType {
    CONNECTION_STATE_CHANGED = "CONNECTION_STATE_CHANGED",
    PROTOCOL_ERROR = "PROTOCOL_ERROR",
    PROTOCOL_EXTENSIONS_INITIALIZED = "PROTOCOL_EXTENSIONS_INITIALIZED",
    PROTOCOL_EXTENSIONS_HANDSHAKE = "PROTOCOL_EXTENSIONS_HANDSHAKE",
    PROTOCOL_HANDSHAKE = "PROTOCOL_HANDSHAKE"
}
export declare class ConnectionLog {
    /**
     * SwarmId => info
     */
    private readonly _swarms;
    readonly update: Event<void>;
    getSwarmInfo(swarmId: PublicKey): SwarmInfo;
    get swarms(): SwarmInfo[];
    joinedSwarm(swarm: Swarm): void;
    leftSwarm(swarm: Swarm): void;
}
//# sourceMappingURL=connection-log.d.ts.map