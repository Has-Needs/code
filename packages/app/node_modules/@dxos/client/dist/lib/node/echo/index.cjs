"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var echo_exports = {};
__export(echo_exports, {
  DocAccessor: () => import_chunk_HIRCX7XT.DocAccessor,
  EchoObjectSchema: () => import_chunk_HIRCX7XT.EchoObjectSchema,
  Expando: () => import_chunk_HIRCX7XT.Expando,
  FQ_ID_LENGTH: () => import_chunk_HIRCX7XT.FQ_ID_LENGTH,
  Filter: () => import_chunk_HIRCX7XT.Filter,
  HaloSpaceMember: () => import_chunk_HIRCX7XT.SpaceMember2,
  IndexKind: () => import_chunk_HIRCX7XT.IndexKind,
  OBJECT_ID_LENGTH: () => import_chunk_HIRCX7XT.OBJECT_ID_LENGTH,
  ObjectVersion: () => import_chunk_HIRCX7XT.ObjectVersion,
  Query: () => import_chunk_HIRCX7XT.Query,
  QueryOptions: () => import_chunk_HIRCX7XT.QueryOptions,
  Queue: () => import_chunk_HIRCX7XT.Queue,
  ReactiveObjectSchema: () => import_chunk_HIRCX7XT.ReactiveObjectSchema,
  Ref: () => import_chunk_HIRCX7XT.Ref,
  RefArray: () => import_chunk_HIRCX7XT.RefArray,
  ResultFormat: () => import_chunk_HIRCX7XT.ResultFormat,
  SPACE_ID_LENGTH: () => import_chunk_HIRCX7XT.SPACE_ID_LENGTH,
  SpaceId: () => import_chunk_HIRCX7XT.SpaceId,
  SpaceMember: () => import_chunk_HIRCX7XT.SpaceMember,
  SpaceSchema: () => import_chunk_HIRCX7XT.SpaceSchema,
  SpaceState: () => import_chunk_HIRCX7XT.SpaceState,
  TextKind: () => import_chunk_HIRCX7XT.TextKind,
  compareForeignKeys: () => import_chunk_HIRCX7XT.compareForeignKeys,
  createDocAccessor: () => import_chunk_HIRCX7XT.createDocAccessor,
  createEmptyEdgeSyncState: () => import_chunk_HIRCX7XT.createEmptyEdgeSyncState,
  createObject: () => import_chunk_HIRCX7XT.createObject,
  createQueueDXN: () => import_chunk_HIRCX7XT.createQueueDXN,
  createSubscription: () => import_chunk_HIRCX7XT.createSubscription,
  defineObjectMigration: () => import_chunk_HIRCX7XT.defineObjectMigration,
  fromCursor: () => import_chunk_HIRCX7XT.fromCursor,
  fullyQualifiedId: () => import_chunk_HIRCX7XT.fullyQualifiedId,
  getMeta: () => import_chunk_HIRCX7XT.getMeta,
  getObjectCore: () => import_chunk_HIRCX7XT.getObjectCore,
  getRangeFromCursor: () => import_chunk_HIRCX7XT.getRangeFromCursor,
  getSchema: () => import_chunk_HIRCX7XT.getSchema,
  getSource: () => import_chunk_HIRCX7XT.getSource,
  getSpace: () => import_chunk_HIRCX7XT.getSpace,
  getSyncSummary: () => import_chunk_HIRCX7XT.getSyncSummary,
  getTarget: () => import_chunk_HIRCX7XT.getTarget,
  getTextInRange: () => import_chunk_HIRCX7XT.getTextInRange,
  getType: () => import_chunk_HIRCX7XT.getType,
  getTypename: () => import_chunk_HIRCX7XT.getTypename,
  getVersion: () => import_chunk_HIRCX7XT.getVersion,
  importSpace: () => import_chunk_HIRCX7XT.importSpace,
  internalDecodeReference: () => import_chunk_HIRCX7XT.decodeReference,
  isEchoObject: () => import_chunk_HIRCX7XT.isEchoObject,
  isLiveObject: () => import_chunk_HIRCX7XT.isLiveObject,
  isRelation: () => import_chunk_HIRCX7XT.isRelation,
  isSpace: () => import_chunk_HIRCX7XT.isSpace,
  live: () => import_chunk_HIRCX7XT.live,
  loadObjectReferences: () => import_chunk_HIRCX7XT.loadObjectReferences,
  makeRef: () => import_chunk_HIRCX7XT.makeRef,
  parseFullyQualifiedId: () => import_chunk_HIRCX7XT.parseFullyQualifiedId,
  parseId: () => import_chunk_HIRCX7XT.parseId,
  refFromDXN: () => import_chunk_HIRCX7XT.refFromDXN,
  toCursor: () => import_chunk_HIRCX7XT.toCursor,
  toCursorRange: () => import_chunk_HIRCX7XT.toCursorRange,
  updateText: () => import_chunk_HIRCX7XT.updateText
});
module.exports = __toCommonJS(echo_exports);
var import_chunk_HIRCX7XT = require("../chunk-HIRCX7XT.cjs");
var import_chunk_Y34HQJFZ = require("../chunk-Y34HQJFZ.cjs");
var import_chunk_MOPAUFKF = require("../chunk-MOPAUFKF.cjs");
var import_chunk_P7Y3AD6I = require("../chunk-P7Y3AD6I.cjs");
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  DocAccessor,
  EchoObjectSchema,
  Expando,
  FQ_ID_LENGTH,
  Filter,
  HaloSpaceMember,
  IndexKind,
  OBJECT_ID_LENGTH,
  ObjectVersion,
  Query,
  QueryOptions,
  Queue,
  ReactiveObjectSchema,
  Ref,
  RefArray,
  ResultFormat,
  SPACE_ID_LENGTH,
  SpaceId,
  SpaceMember,
  SpaceSchema,
  SpaceState,
  TextKind,
  compareForeignKeys,
  createDocAccessor,
  createEmptyEdgeSyncState,
  createObject,
  createQueueDXN,
  createSubscription,
  defineObjectMigration,
  fromCursor,
  fullyQualifiedId,
  getMeta,
  getObjectCore,
  getRangeFromCursor,
  getSchema,
  getSource,
  getSpace,
  getSyncSummary,
  getTarget,
  getTextInRange,
  getType,
  getTypename,
  getVersion,
  importSpace,
  internalDecodeReference,
  isEchoObject,
  isLiveObject,
  isRelation,
  isSpace,
  live,
  loadObjectReferences,
  makeRef,
  parseFullyQualifiedId,
  parseId,
  refFromDXN,
  toCursor,
  toCursorRange,
  updateText
});
//# sourceMappingURL=index.cjs.map
