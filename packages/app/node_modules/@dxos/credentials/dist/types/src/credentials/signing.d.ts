import { type Credential } from '@dxos/protocols/proto/dxos/halo/credentials';
/**
 * @returns The input message to be signed for a given credential.
 */
export declare const getCredentialProofPayload: (credential: Credential) => Uint8Array;
/**
 * Utility method to produce stable output for signing/verifying.
 */
export declare const canonicalStringify: (obj: any) => string;
/**
 * export const truncateKey = (key: any, { length = 8, start }: TruncateKeyOptions = {}) => {
const str = String(key);
if (str.length <= length) {
  return str;
}

return start
  ? `${str.slice(0, length)}...`
  : `${str.substring(0, length / 2)}...${str.substring(str.length - length / 2)}`;
};

{
"04009285": 20,
"0415004f": 0,
"0415e6d7": 9964,
"042a4fa9": 8,
"0448e62f": 3,
"04775053": 257,
"04a6b603": 97,
"04bc5c9d": 198,
"04da9930": 59,
"04df0449": 676,
"04e122ae": 5435,
"04ee588b": 1703
}

 */
//# sourceMappingURL=signing.d.ts.map