{
  "version": 3,
  "sources": ["../../../src/lock-file.ts"],
  "sourcesContent": ["//\n// Copyright 2023 DXOS.org\n//\n\nimport { flock } from 'fs-ext';\nimport { existsSync } from 'node:fs';\nimport { open, type FileHandle, constants } from 'node:fs/promises';\n\nexport class LockFile {\n  static async acquire(filename: string): Promise<FileHandle> {\n    const handle = await open(filename, constants.O_CREAT);\n    await new Promise<void>((resolve, reject) => {\n      flock(handle.fd, 'exnb', async (err) => {\n        if (err) {\n          reject(err);\n          await handle.close();\n          return;\n        }\n        resolve();\n      });\n    });\n    return handle;\n  }\n\n  static async release(handle: FileHandle): Promise<void> {\n    await new Promise<void>((resolve, reject) => {\n      flock(handle.fd, 'un', (err) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve();\n      });\n    });\n    await handle.close();\n  }\n\n  static async isLocked(filename: string): Promise<boolean> {\n    if (!existsSync(filename)) {\n      return false;\n    }\n    try {\n      const handle = await LockFile.acquire(filename);\n      await LockFile.release(handle);\n\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n"],
  "mappings": ";;;AAIA,SAASA,aAAa;AACtB,SAASC,kBAAkB;AAC3B,SAASC,MAAuBC,iBAAiB;AAE1C,IAAMC,WAAN,MAAMA,UAAAA;EACX,aAAaC,QAAQC,UAAuC;AAC1D,UAAMC,SAAS,MAAMC,KAAKF,UAAUG,UAAUC,OAAO;AACrD,UAAM,IAAIC,QAAc,CAACC,SAASC,WAAAA;AAChCC,YAAMP,OAAOQ,IAAI,QAAQ,OAAOC,QAAAA;AAC9B,YAAIA,KAAK;AACPH,iBAAOG,GAAAA;AACP,gBAAMT,OAAOU,MAAK;AAClB;QACF;AACAL,gBAAAA;MACF,CAAA;IACF,CAAA;AACA,WAAOL;EACT;EAEA,aAAaW,QAAQX,QAAmC;AACtD,UAAM,IAAII,QAAc,CAACC,SAASC,WAAAA;AAChCC,YAAMP,OAAOQ,IAAI,MAAM,CAACC,QAAAA;AACtB,YAAIA,KAAK;AACPH,iBAAOG,GAAAA;AACP;QACF;AACAJ,gBAAAA;MACF,CAAA;IACF,CAAA;AACA,UAAML,OAAOU,MAAK;EACpB;EAEA,aAAaE,SAASb,UAAoC;AACxD,QAAI,CAACc,WAAWd,QAAAA,GAAW;AACzB,aAAO;IACT;AACA,QAAI;AACF,YAAMC,SAAS,MAAMH,UAASC,QAAQC,QAAAA;AACtC,YAAMF,UAASc,QAAQX,MAAAA;AAEvB,aAAO;IACT,SAASc,GAAG;AACV,aAAO;IACT;EACF;AACF;",
  "names": ["flock", "existsSync", "open", "constants", "LockFile", "acquire", "filename", "handle", "open", "constants", "O_CREAT", "Promise", "resolve", "reject", "flock", "fd", "err", "close", "release", "isLocked", "existsSync", "e"]
}
