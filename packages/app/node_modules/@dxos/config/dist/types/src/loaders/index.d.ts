import { type Config as ConfigProto } from '@dxos/protocols/proto/dxos/config';
/**
 * Profile
 */
export declare const Profile: (profile?: string) => ConfigProto;
/**
 * Development config.
 */
export declare const Local: () => Partial<ConfigProto>;
/**
 * Provided dynamically by server.
 */
export declare const Dynamics: () => Partial<ConfigProto>;
/**
 * ENV variable (key/value) map.
 */
export declare const Envs: (basePath?: string) => Partial<ConfigProto>;
/**
 * JSON config.
 */
export declare const Defaults: (basePath?: string) => Partial<ConfigProto>;
/**
 * Load config from storage.
 */
export declare const Storage: () => Promise<Partial<ConfigProto>>;
export declare const Remote: (target: string | undefined, authenticationToken?: string) => Partial<ConfigProto>;
//# sourceMappingURL=index.d.ts.map