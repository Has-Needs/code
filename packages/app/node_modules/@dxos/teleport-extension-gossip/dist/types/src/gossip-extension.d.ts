import { type GossipMessage } from '@dxos/protocols/proto/dxos/mesh/teleport/gossip';
import { type ExtensionContext, type TeleportExtension } from '@dxos/teleport';
export type GossipCallbacks = {
    /**
     * Callback to be called when a new announce is received.
     */
    onAnnounce?: (message: GossipMessage) => Promise<void>;
    /**
     * Callback to be called when the extension is closed.
     */
    onClose?: (err?: Error) => Promise<void>;
};
/**
 * Sends announces between two peers for a single teleport session.
 */
export declare class GossipExtension implements TeleportExtension {
    private readonly _callbacks;
    private readonly _opened;
    private _closed;
    private _rpc?;
    constructor(_callbacks?: GossipCallbacks);
    onOpen(context: ExtensionContext): Promise<void>;
    onClose(err?: Error): Promise<void>;
    onAbort(err?: Error): Promise<void>;
    sendAnnounce(message: GossipMessage): Promise<void>;
}
//# sourceMappingURL=gossip-extension.d.ts.map