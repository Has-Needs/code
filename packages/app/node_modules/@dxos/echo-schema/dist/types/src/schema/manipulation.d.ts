import { Schema } from 'effect';
export declare const addFieldsToSchema: (schema: Schema.Schema.AnyNoContext, fields: Schema.Struct.Fields) => Schema.Schema.AnyNoContext;
export declare const updateFieldsInSchema: (schema: Schema.Schema.AnyNoContext, fields: Schema.Struct.Fields) => Schema.Schema.AnyNoContext;
export declare const removeFieldsFromSchema: (schema: Schema.Schema.AnyNoContext, fieldNames: string[]) => Schema.Schema.AnyNoContext;
export declare const updateFieldNameInSchema: (schema: Schema.Schema.AnyNoContext, { before, after }: {
    before: PropertyKey;
    after: PropertyKey;
}) => Schema.Schema.AnyNoContext;
export declare const setTypenameInSchema: (schema: Schema.Schema.AnyNoContext, typename: string) => Schema.Schema.AnyNoContext;
//# sourceMappingURL=manipulation.d.ts.map