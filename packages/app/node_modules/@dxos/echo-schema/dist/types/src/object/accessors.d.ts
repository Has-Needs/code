import { Schema } from 'effect';
import { DXN } from '@dxos/keys';
/**
 * Returns a DXN for an object or schema.
 * @deprecated Use `Obj.getDXN`.
 */
export declare const getObjectDXN: (object: any) => DXN | undefined;
/**
 * Returns the schema for the given object if one is defined.
 */
export declare const getSchema: (obj: unknown | undefined) => Schema.Schema.AnyNoContext | undefined;
/**
 * Internal use only.
 */
export declare const setSchema: (obj: any, schema: Schema.Schema.AnyNoContext) => void;
/**
 * @deprecated Use {@link Obj.getLabel} instead.
 * Returns the label for a given object based on {@link LabelAnnotationId}.
 */
export declare const getLabelForObject: (obj: unknown | undefined) => string | undefined;
/**
 * Returns the label for a given object based on {@link LabelAnnotationId}.
 */
export declare const getLabel: <S extends Schema.Schema.Any>(schema: S, object: Schema.Schema.Type<S>) => string | undefined;
//# sourceMappingURL=accessors.d.ts.map