import { Schema } from 'effect';
import { type JsonSchemaType } from '../json-schema';
/**
 * Create object jsonSchema.
 */
export declare const createJsonSchema: (schema?: Schema.Struct<any>) => JsonSchemaType;
export declare enum PropType {
    NONE = 0,
    STRING = 1,// TODO(burdon): vs TEXT?
    NUMBER = 2,
    BOOLEAN = 3,
    DATE = 4,
    REF = 5,
    RECORD = 6,
    ENUM = 7
}
export declare const toPropType: (type?: PropType) => string;
export type JsonSchemaOptions = {
    strict?: boolean;
};
/**
 * Convert effect schema to JSON Schema.
 * @param schema
 */
export declare const toJsonSchema: (schema: Schema.Schema.All, options?: JsonSchemaOptions) => JsonSchemaType;
/**
 * Convert JSON schema to effect schema.
 * @param root
 * @param definitions
 */
export declare const toEffectSchema: (root: JsonSchemaType, _defs?: JsonSchemaType["$defs"]) => Schema.Schema.AnyNoContext;
//# sourceMappingURL=json-schema.d.ts.map