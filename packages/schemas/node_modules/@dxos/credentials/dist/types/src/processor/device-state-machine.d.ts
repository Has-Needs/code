import { Trigger } from '@dxos/async';
import { PublicKey } from '@dxos/keys';
import { type Chain, type Credential, type DeviceProfileDocument } from '@dxos/protocols/proto/dxos/halo/credentials';
import { ComplexMap } from '@dxos/util';
import { type CredentialProcessor } from './credential-processor';
export type DeviceStateMachineParams = {
    identityKey: PublicKey;
    deviceKey: PublicKey;
    onUpdate?: () => void;
};
/**
 * Processes device invitation credentials.
 */
export declare class DeviceStateMachine implements CredentialProcessor {
    private readonly _params;
    readonly authorizedDeviceKeys: ComplexMap<PublicKey, DeviceProfileDocument>;
    readonly deviceChainReady: Trigger<void>;
    deviceCredentialChain?: Chain;
    constructor(_params: DeviceStateMachineParams);
    processCredential(credential: Credential): Promise<void>;
}
//# sourceMappingURL=device-state-machine.d.ts.map