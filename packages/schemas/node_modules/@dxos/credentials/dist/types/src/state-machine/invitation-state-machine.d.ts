import { PublicKey } from '@dxos/keys';
import { type Credential } from '@dxos/protocols/proto/dxos/halo/credentials';
import { type DelegateSpaceInvitation } from '@dxos/protocols/proto/dxos/halo/invitations';
import { type AsyncCallback, Callback } from '@dxos/util';
export interface DelegateInvitationCredential {
    credentialId: PublicKey;
    invitation: DelegateSpaceInvitation;
}
/**
 * Tracks the feed tree for a space.
 * Provides a list of admitted feeds.
 */
export declare class InvitationStateMachine {
    private readonly _invitations;
    private readonly _redeemedInvitationCredentialIds;
    private readonly _cancelledInvitationCredentialIds;
    readonly onDelegatedInvitation: Callback<AsyncCallback<DelegateInvitationCredential>>;
    readonly onDelegatedInvitationRemoved: Callback<AsyncCallback<DelegateInvitationCredential>>;
    get invitations(): ReadonlyMap<PublicKey, DelegateSpaceInvitation>;
    process(credential: Credential): Promise<void>;
}
//# sourceMappingURL=invitation-state-machine.d.ts.map