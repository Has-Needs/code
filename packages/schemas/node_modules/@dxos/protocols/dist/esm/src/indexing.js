//
// Copyright 2024 DXOS.org
//
import { Schema } from 'effect';
export const ObjectPointerEncoded = Schema.String.annotations({ title: 'ObjectPointerEncoded' });
const V1_PREFIX = '#01';
export var ObjectPointerVersion;
(function (ObjectPointerVersion) {
    /**
     * `${documentId}|${objectId}`
     */
    ObjectPointerVersion[ObjectPointerVersion["V0"] = 0] = "V0";
    /**
     * `#01|${spaceKey}|${documentId}|${objectId}`
     */
    ObjectPointerVersion[ObjectPointerVersion["V1"] = 1] = "V1";
})(ObjectPointerVersion || (ObjectPointerVersion = {}));
export const objectPointerCodec = {
    encode: ({ spaceKey, documentId, objectId }) => {
        if (spaceKey === undefined) {
            return `${documentId}|${objectId}`;
        }
        else {
            return `${V1_PREFIX}|${spaceKey}|${documentId}|${objectId}`;
        }
    },
    decode: (id) => {
        if (id.startsWith(V1_PREFIX)) {
            const [_, spaceKey, documentId, objectId] = id.split('|');
            return { spaceKey, documentId, objectId };
        }
        else {
            const [documentId, objectId] = id.split('|');
            return { spaceKey: undefined, documentId, objectId };
        }
    },
    getVersion: (id) => {
        if (id.startsWith(V1_PREFIX)) {
            return ObjectPointerVersion.V1;
        }
        else {
            return ObjectPointerVersion.V0;
        }
    },
    convertV1ToV0: (id) => {
        const { documentId, objectId } = objectPointerCodec.decode(id);
        return objectPointerCodec.encode({ documentId, objectId, spaceKey: undefined });
    },
};
//# sourceMappingURL=indexing.js.map