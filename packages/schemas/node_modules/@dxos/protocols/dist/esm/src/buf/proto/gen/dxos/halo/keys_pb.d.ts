import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { PrivateKey, PublicKey } from "../keys_pb.js";
import type { Message } from "@bufbuild/protobuf";
/**
 * Describes the file dxos/halo/keys.proto.
 */
export declare const file_dxos_halo_keys: GenFile;
/**
 * @generated from message dxos.halo.keys.KeyRecord
 */
export type KeyRecord = Message<"dxos.halo.keys.KeyRecord"> & {
    /**
     * *
     * The `KeyType` type of the key. This is often unknown for keys from other sources.
     *
     * @generated from field: dxos.halo.keys.KeyType type = 1;
     */
    type: KeyType;
    /**
     * *
     * The public key as a Buffer (required).
     *
     * @generated from field: dxos.keys.PublicKey public_key = 2;
     */
    publicKey?: PublicKey;
    /**
     * *
     * The secret key as a Buffer (this will never be visible outside the Keyring).
     *
     * @generated from field: optional dxos.keys.PrivateKey secret_key = 3;
     */
    secretKey?: PrivateKey;
    /**
     * *
     * Is this key from a Greeting "hint"?
     *
     * @generated from field: optional bool hint = 4;
     */
    hint?: boolean;
    /**
     * *
     * Determines if this is our key?
     * Usually true if `secret_key` is present; may be false for "inception keys" such as the Space key.
     *
     * TODO(burdon): Rename "local" or "private".
     *
     * @generated from field: optional bool own = 5;
     */
    own?: boolean;
    /**
     * *
     * Is this key to be trusted?
     *
     * TODO(burdon): Rename "trust". How is this determined?
     *
     * @generated from field: optional bool trusted = 6;
     */
    trusted?: boolean;
    /**
     * *
     * An RFC-3339 date/time string for when the key was added to the Keyring.
     *
     * @generated from field: optional string added = 7;
     */
    added?: string;
    /**
     * *
     * An RFC-3339 date/time string for when the key was created.
     *
     * @generated from field: optional string created = 8;
     */
    created?: string;
};
/**
 * Describes the message dxos.halo.keys.KeyRecord.
 * Use `create(KeyRecordSchema)` to create a new message.
 */
export declare const KeyRecordSchema: GenMessage<KeyRecord>;
/**
 * @generated from message dxos.halo.keys.KeyRecordList
 */
export type KeyRecordList = Message<"dxos.halo.keys.KeyRecordList"> & {
    /**
     * @generated from field: repeated dxos.halo.keys.KeyRecord keys = 1;
     */
    keys: KeyRecord[];
};
/**
 * Describes the message dxos.halo.keys.KeyRecordList.
 * Use `create(KeyRecordListSchema)` to create a new message.
 */
export declare const KeyRecordListSchema: GenMessage<KeyRecordList>;
/**
 *
 * The type/use of a public key.
 *
 *
 * @generated from enum dxos.halo.keys.KeyType
 */
export declare enum KeyType {
    /**
     * @generated from enum value: UNKNOWN = 0;
     */
    UNKNOWN = 0,
    /**
     * @generated from enum value: IDENTITY = 1;
     */
    IDENTITY = 1,
    /**
     * @generated from enum value: DEVICE = 2;
     */
    DEVICE = 2,
    /**
     * @generated from enum value: SPACE = 3;
     */
    SPACE = 3,
    /**
     * @generated from enum value: FEED = 4;
     */
    FEED = 4,
    /**
     * @generated from enum value: DXNS_ADDRESS = 5;
     */
    DXNS_ADDRESS = 5
}
/**
 * Describes the enum dxos.halo.keys.KeyType.
 */
export declare const KeyTypeSchema: GenEnum<KeyType>;
//# sourceMappingURL=keys_pb.d.ts.map