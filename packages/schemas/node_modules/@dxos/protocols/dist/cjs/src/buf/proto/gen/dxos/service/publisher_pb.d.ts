import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import type { Module, Package } from "../config_pb.js";
import type { Message } from "@bufbuild/protobuf";
/**
 * Describes the file dxos/service/publisher.proto.
 */
export declare const file_dxos_service_publisher: GenFile;
/**
 * @generated from message dxos.service.publisher.PublishRequest
 */
export type PublishRequest = Message<"dxos.service.publisher.PublishRequest"> & {
    /**
     * @generated from field: dxos.config.Package package = 1;
     */
    package?: Package;
    /**
     * @generated from field: bool skip_existing = 2;
     */
    skipExisting: boolean;
    /**
     * TODO(egorgripasov): Move to a dxrpc layer.
     *
     * @generated from field: optional string access_token = 3;
     */
    accessToken?: string;
};
/**
 * Describes the message dxos.service.publisher.PublishRequest.
 * Use `create(PublishRequestSchema)` to create a new message.
 */
export declare const PublishRequestSchema: GenMessage<PublishRequest>;
/**
 * @generated from message dxos.service.publisher.PublishResponse
 */
export type PublishResponse = Message<"dxos.service.publisher.PublishResponse"> & {
    /**
     * @generated from field: repeated dxos.service.publisher.PublishResponse.PublishedModule modules = 1;
     */
    modules: PublishResponse_PublishedModule[];
};
/**
 * Describes the message dxos.service.publisher.PublishResponse.
 * Use `create(PublishResponseSchema)` to create a new message.
 */
export declare const PublishResponseSchema: GenMessage<PublishResponse>;
/**
 * @generated from message dxos.service.publisher.PublishResponse.PublishedModule
 */
export type PublishResponse_PublishedModule = Message<"dxos.service.publisher.PublishResponse.PublishedModule"> & {
    /**
     * @generated from field: dxos.config.Module module = 1;
     */
    module?: Module;
    /**
     * @generated from field: repeated string urls = 2;
     */
    urls: string[];
};
/**
 * Describes the message dxos.service.publisher.PublishResponse.PublishedModule.
 * Use `create(PublishResponse_PublishedModuleSchema)` to create a new message.
 */
export declare const PublishResponse_PublishedModuleSchema: GenMessage<PublishResponse_PublishedModule>;
/**
 * @generated from message dxos.service.publisher.ListResponse
 */
export type ListResponse = Message<"dxos.service.publisher.ListResponse"> & {
    /**
     * @generated from field: repeated dxos.config.Module modules = 1;
     */
    modules: Module[];
};
/**
 * Describes the message dxos.service.publisher.ListResponse.
 * Use `create(ListResponseSchema)` to create a new message.
 */
export declare const ListResponseSchema: GenMessage<ListResponse>;
/**
 * @generated from message dxos.service.publisher.ResetResponse
 */
export type ResetResponse = Message<"dxos.service.publisher.ResetResponse"> & {
    /**
     * @generated from field: int32 count = 1;
     */
    count: number;
};
/**
 * Describes the message dxos.service.publisher.ResetResponse.
 * Use `create(ResetResponseSchema)` to create a new message.
 */
export declare const ResetResponseSchema: GenMessage<ResetResponse>;
/**
 * @generated from service dxos.service.publisher.Publisher
 */
export declare const Publisher: GenService<{
    /**
     * @generated from rpc dxos.service.publisher.Publisher.Publish
     */
    publish: {
        methodKind: "unary";
        input: typeof PublishRequestSchema;
        output: typeof PublishResponseSchema;
    };
    /**
     * @generated from rpc dxos.service.publisher.Publisher.List
     */
    list: {
        methodKind: "unary";
        input: typeof EmptySchema;
        output: typeof ListResponseSchema;
    };
    /**
     * @generated from rpc dxos.service.publisher.Publisher.Reset
     */
    reset: {
        methodKind: "unary";
        input: typeof EmptySchema;
        output: typeof ResetResponseSchema;
    };
}>;
//# sourceMappingURL=publisher_pb.d.ts.map