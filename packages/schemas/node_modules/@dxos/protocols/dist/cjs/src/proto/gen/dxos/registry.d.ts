import substitutions from "../../substitutions.js";
/**
 * Defined in:
 *   {@link file://./../../dxos/registry.proto}
 */
export interface Record {
    /**
     * Record creation timetstamp.
     *
     * Options:
     *   - proto3_optional = true
     */
    created?: ReturnType<(typeof substitutions)["google.protobuf.Timestamp"]["decode"]>;
    /**
     * Human-readable name of record.
     *
     * Options:
     *   - proto3_optional = true
     */
    displayName?: string;
    /**
     * Record description.
     *
     * Options:
     *   - proto3_optional = true
     */
    description?: string;
    /**
     * Optional record tags.
     */
    tags?: string[];
    /**
     * Type record variant.
     */
    type?: Record.Type;
    /**
     * Data record variant.
     */
    payload?: Record.Extension;
}
export declare namespace Record {
    /**
     * Types are system records that define protocol-buffer schema of other records.
     *
     * Defined in:
     *   {@link file://./../../dxos/registry.proto}
     */
    interface Type {
        /**
         * FQ protobuf message name.
         */
        messageName: string;
        /**
         * Set of protobuf messages encoded.
         */
        protobufDefs: ReturnType<(typeof substitutions)["google.protobuf.Struct"]["decode"]>;
        /**
         * CID of protobuf source file.
         *
         * Options:
         *   - proto3_optional = true
         */
        protobufIpfsCid?: string;
    }
    /**
     * Data with a reference to a type record that defines the encoding.
     *
     * Defined in:
     *   {@link file://./../../dxos/registry.proto}
     */
    interface Extension {
        /**
         * CID of type record.
         */
        typeRecord: Uint8Array;
        /**
         * Serialized payload data.
         */
        data: Uint8Array;
    }
}
//# sourceMappingURL=registry.d.ts.map