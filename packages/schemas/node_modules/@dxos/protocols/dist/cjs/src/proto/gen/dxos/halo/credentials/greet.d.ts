import substitutions from "../../../../substitutions.js";
import * as dxos_halo_keys from "../keys.js";
/**
 * A Greeter command.
 *
 * Defined in:
 *   {@link file://./../../../../dxos/halo/credentials/greet.proto}
 */
export interface Command {
    command: Command.Type;
    /**
     * Options:
     *   - proto3_optional = true
     */
    secret?: Uint8Array;
    params?: ReturnType<(typeof substitutions)["google.protobuf.Any"]["decode"]>[];
}
export declare namespace Command {
    /**
     * Defined in:
     *   {@link file://./../../../../dxos/halo/credentials/greet.proto}
     */
    enum Type {
        BEGIN = 0,
        HANDSHAKE = 1,
        NOTARIZE = 2,
        FINISH = 3,
        CLAIM = 10
    }
}
/**
 * Defined in:
 *   {@link file://./../../../../dxos/halo/credentials/greet.proto}
 */
export interface BeginResponse {
    info?: Partial<Record<string, ReturnType<(typeof substitutions)["google.protobuf.Any"]["decode"]>>>;
}
/**
 * Defined in:
 *   {@link file://./../../../../dxos/halo/credentials/greet.proto}
 */
export interface HandshakeResponse {
    nonce: Uint8Array;
    spaceKey: ReturnType<(typeof substitutions)["dxos.keys.PublicKey"]["decode"]>;
}
/**
 * Defined in:
 *   {@link file://./../../../../dxos/halo/credentials/greet.proto}
 */
export interface NotarizeResponse {
    copies?: ReturnType<(typeof substitutions)["google.protobuf.Any"]["decode"]>[];
    genesisFeed: ReturnType<(typeof substitutions)["dxos.keys.PublicKey"]["decode"]>;
}
/**
 * Defined in:
 *   {@link file://./../../../../dxos/halo/credentials/greet.proto}
 */
export interface KeyHint {
    publicKey: ReturnType<(typeof substitutions)["dxos.keys.PublicKey"]["decode"]>;
    type: dxos_halo_keys.KeyType;
}
/**
 * Defined in:
 *   {@link file://./../../../../dxos/halo/credentials/greet.proto}
 */
export interface ClaimResponse {
    id: Uint8Array;
    rendezvousKey: Uint8Array;
}
//# sourceMappingURL=greet.d.ts.map