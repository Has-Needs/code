"use strict";
//
// Copyright 2022 DXOS.org
//
Object.defineProperty(exports, "__esModule", { value: true });
exports.BlobSyncService = exports.BlobChunkSchema = exports.WantList_EntrySchema = exports.WantListSchema = exports.file_dxos_mesh_teleport_blobsync = void 0;
const codegenv1_1 = require("@bufbuild/protobuf/codegenv1");
const wkt_1 = require("@bufbuild/protobuf/wkt");
/**
 * Describes the file dxos/mesh/teleport/blobsync.proto.
 */
exports.file_dxos_mesh_teleport_blobsync = (0, codegenv1_1.fileDesc)("CiFkeG9zL21lc2gvdGVsZXBvcnQvYmxvYnN5bmMucHJvdG8SG2R4b3MubWVzaC50ZWxlcG9ydC5ibG9ic3luYyKnAQoIV2FudExpc3QSOgoFYmxvYnMYASADKAsyKy5keG9zLm1lc2gudGVsZXBvcnQuYmxvYnN5bmMuV2FudExpc3QuRW50cnkaXwoFRW50cnkSCgoCaWQYASABKAwSFwoKY2h1bmtfc2l6ZRgCIAEoBUgAiAEBEhUKCGJpdGZpZWxkGAMgASgMSAGIAQFCDQoLX2NodW5rX3NpemVCCwoJX2JpdGZpZWxkIqgBCglCbG9iQ2h1bmsSCgoCaWQYASABKAwSFwoKY2h1bmtfc2l6ZRgCIAEoBUgAiAEBEhkKDGNodW5rX29mZnNldBgDIAEoBUgBiAEBEhkKDHRvdGFsX2xlbmd0aBgEIAEoBUgCiAEBEg8KB3BheWxvYWQYZCABKAxCDQoLX2NodW5rX3NpemVCDwoNX2NodW5rX29mZnNldEIPCg1fdG90YWxfbGVuZ3RoMqABCg9CbG9iU3luY1NlcnZpY2USRQoEV2FudBIlLmR4b3MubWVzaC50ZWxlcG9ydC5ibG9ic3luYy5XYW50TGlzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRJGCgRQdXNoEiYuZHhvcy5tZXNoLnRlbGVwb3J0LmJsb2JzeW5jLkJsb2JDaHVuaxoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eWIGcHJvdG8z", [wkt_1.file_google_protobuf_empty, wkt_1.file_google_protobuf_any]);
/**
 * Describes the message dxos.mesh.teleport.blobsync.WantList.
 * Use `create(WantListSchema)` to create a new message.
 */
exports.WantListSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_mesh_teleport_blobsync, 0);
/**
 * Describes the message dxos.mesh.teleport.blobsync.WantList.Entry.
 * Use `create(WantList_EntrySchema)` to create a new message.
 */
exports.WantList_EntrySchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_mesh_teleport_blobsync, 0, 0);
/**
 * Describes the message dxos.mesh.teleport.blobsync.BlobChunk.
 * Use `create(BlobChunkSchema)` to create a new message.
 */
exports.BlobChunkSchema = (0, codegenv1_1.messageDesc)(exports.file_dxos_mesh_teleport_blobsync, 1);
/**
 * *
 * Allows synchronization of opaque data objects between two peers.
 * Loosely based on Bittorrent protocol.
 *
 * @generated from service dxos.mesh.teleport.blobsync.BlobSyncService
 */
exports.BlobSyncService = (0, codegenv1_1.serviceDesc)(exports.file_dxos_mesh_teleport_blobsync, 0);
//# sourceMappingURL=blobsync_pb.js.map