import substitutions from "../../../substitutions.js";
/**
 * Defined in:
 *   {@link file://./../../../dxos/halo/keys.proto}
 */
export declare enum KeyType {
    UNKNOWN = 0,
    IDENTITY = 1,
    DEVICE = 2,
    SPACE = 3,
    FEED = 4,
    DXNS_ADDRESS = 5
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/halo/keys.proto}
 */
export interface KeyRecord {
    /**
     * The `KeyType` type of the key. This is often unknown for keys from other sources.
     */
    type: KeyType;
    /**
     * The public key as a Buffer (required).
     */
    publicKey: ReturnType<(typeof substitutions)["dxos.keys.PublicKey"]["decode"]>;
    /**
     * The secret key as a Buffer (this will never be visible outside the Keyring).
     *
     * Options:
     *   - proto3_optional = true
     */
    secretKey?: ReturnType<(typeof substitutions)["dxos.keys.PrivateKey"]["decode"]>;
    /**
     * Is this key from a Greeting "hint"?
     *
     * Options:
     *   - proto3_optional = true
     */
    hint?: boolean;
    /**
     * Determines if this is our key?
     * Usually true if `secret_key` is present; may be false for "inception keys" such as the Space key.
     *
     * Options:
     *   - proto3_optional = true
     */
    own?: boolean;
    /**
     * Is this key to be trusted?
     *
     * Options:
     *   - proto3_optional = true
     */
    trusted?: boolean;
    /**
     * An RFC-3339 date/time string for when the key was added to the Keyring.
     *
     * Options:
     *   - proto3_optional = true
     */
    added?: string;
    /**
     * An RFC-3339 date/time string for when the key was created.
     *
     * Options:
     *   - proto3_optional = true
     */
    created?: string;
}
/**
 * Defined in:
 *   {@link file://./../../../dxos/halo/keys.proto}
 */
export interface KeyRecordList {
    keys?: KeyRecord[];
}
//# sourceMappingURL=keys.d.ts.map