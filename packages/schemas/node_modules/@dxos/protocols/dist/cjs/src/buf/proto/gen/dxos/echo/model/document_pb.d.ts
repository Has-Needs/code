import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
/**
 * Describes the file dxos/echo/model/document.proto.
 */
export declare const file_dxos_echo_model_document: GenFile;
/**
 * *
 * Generic value.
 *
 * @generated from message dxos.echo.model.document.Value
 */
export type Value = Message<"dxos.echo.model.document.Value"> & {
    /**
     * @generated from oneof dxos.echo.model.document.Value.Type
     */
    Type: {
        /**
         * Explicit null vs undefined.
         *
         * @generated from field: bool null = 1;
         */
        value: boolean;
        case: "null";
    } | {
        /**
         * @generated from field: bool bool = 2;
         */
        value: boolean;
        case: "bool";
    } | {
        /**
         * @generated from field: int64 int = 3;
         */
        value: bigint;
        case: "int";
    } | {
        /**
         * @generated from field: float float = 4;
         */
        value: number;
        case: "float";
    } | {
        /**
         * @generated from field: string string = 5;
         */
        value: string;
        case: "string";
    } | {
        /**
         * https://en.wikipedia.org/wiki/Unix_time
         *
         * @generated from field: string timestamp = 10;
         */
        value: string;
        case: "timestamp";
    } | {
        /**
         * https://en.wikipedia.org/wiki/ISO_8601 (e.g., "2019-10-25T18:48:16Z")
         *
         * @generated from field: string datetime = 11;
         */
        value: string;
        case: "datetime";
    } | {
        /**
         * @generated from field: bytes bytes = 12;
         */
        value: Uint8Array;
        case: "bytes";
    } | {
        /**
         * @generated from field: dxos.echo.model.document.KeyValueObject object = 20;
         */
        value: KeyValueObject;
        case: "object";
    } | {
        /**
         * @generated from field: dxos.echo.model.document.Array array = 21;
         */
        value: Array;
        case: "array";
    } | {
        /**
         * @generated from field: dxos.echo.model.document.Reference reference = 30;
         */
        value: Reference;
        case: "reference";
    } | {
        case: undefined;
        value?: undefined;
    };
};
/**
 * Describes the message dxos.echo.model.document.Value.
 * Use `create(ValueSchema)` to create a new message.
 */
export declare const ValueSchema: GenMessage<Value>;
/**
 * *
 * Ordered collection of values.
 *
 * @generated from message dxos.echo.model.document.Array
 */
export type Array = Message<"dxos.echo.model.document.Array"> & {
    /**
     * @generated from field: repeated dxos.echo.model.document.Value values = 1;
     */
    values: Value[];
};
/**
 * Describes the message dxos.echo.model.document.Array.
 * Use `create(ArraySchema)` to create a new message.
 */
export declare const ArraySchema: GenMessage<Array>;
/**
 * *
 * Key x Value tuple.
 *
 * @generated from message dxos.echo.model.document.KeyValue
 */
export type KeyValue = Message<"dxos.echo.model.document.KeyValue"> & {
    /**
     * @generated from field: string key = 1;
     */
    key: string;
    /**
     * @generated from field: dxos.echo.model.document.Value value = 2;
     */
    value?: Value;
};
/**
 * Describes the message dxos.echo.model.document.KeyValue.
 * Use `create(KeyValueSchema)` to create a new message.
 */
export declare const KeyValueSchema: GenMessage<KeyValue>;
/**
 * *
 * Object data definition.
 *
 * @generated from message dxos.echo.model.document.KeyValueObject
 */
export type KeyValueObject = Message<"dxos.echo.model.document.KeyValueObject"> & {
    /**
     * @generated from field: repeated dxos.echo.model.document.KeyValue properties = 1;
     */
    properties: KeyValue[];
};
/**
 * Describes the message dxos.echo.model.document.KeyValueObject.
 * Use `create(KeyValueObjectSchema)` to create a new message.
 */
export declare const KeyValueObjectSchema: GenMessage<KeyValueObject>;
/**
 * *
 * Reference to an Item.
 *
 * @generated from message dxos.echo.model.document.Reference
 */
export type Reference = Message<"dxos.echo.model.document.Reference"> & {
    /**
     * @generated from field: string object_id = 1;
     */
    objectId: string;
    /**
     * / "space", or "protobuf"
     *
     * @generated from field: optional string protocol = 2;
     */
    protocol?: string;
    /**
     * / space key, FQN of the schema
     *
     * @generated from field: optional string host = 3;
     */
    host?: string;
};
/**
 * Describes the message dxos.echo.model.document.Reference.
 * Use `create(ReferenceSchema)` to create a new message.
 */
export declare const ReferenceSchema: GenMessage<Reference>;
/**
 * *
 * Query predicate.
 *
 * @generated from message dxos.echo.model.document.Predicate
 */
export type Predicate = Message<"dxos.echo.model.document.Predicate"> & {
    /**
     * @generated from field: dxos.echo.model.document.Predicate.Operation op = 1;
     */
    op: Predicate_Operation;
    /**
     * @generated from field: optional string key = 2;
     */
    key?: string;
    /**
     * @generated from field: optional dxos.echo.model.document.Value value = 3;
     */
    value?: Value;
    /**
     * @generated from field: repeated dxos.echo.model.document.Predicate predicates = 4;
     */
    predicates: Predicate[];
};
/**
 * Describes the message dxos.echo.model.document.Predicate.
 * Use `create(PredicateSchema)` to create a new message.
 */
export declare const PredicateSchema: GenMessage<Predicate>;
/**
 * @generated from enum dxos.echo.model.document.Predicate.Operation
 */
export declare enum Predicate_Operation {
    /**
     * @generated from enum value: OR = 0;
     */
    OR = 0,
    /**
     * @generated from enum value: AND = 1;
     */
    AND = 1,
    /**
     * === NOT AND (NAND)
     *
     * @generated from enum value: NOT = 2;
     */
    NOT = 2,
    /**
     * @generated from enum value: IN = 10;
     */
    IN = 10,
    /**
     * Exact
     *
     * @generated from enum value: EQUALS = 11;
     */
    EQUALS = 11,
    /**
     * @generated from enum value: GTE = 12;
     */
    GTE = 12,
    /**
     * @generated from enum value: GT = 13;
     */
    GT = 13,
    /**
     * @generated from enum value: LTE = 14;
     */
    LTE = 14,
    /**
     * @generated from enum value: LT = 15;
     */
    LT = 15,
    /**
     * String prefix (case insensitive).
     *
     * @generated from enum value: PREFIX_MATCH = 20;
     */
    PREFIX_MATCH = 20,
    /**
     * Simple prefix word match.
     *
     * @generated from enum value: TEXT_MATCH = 21;
     */
    TEXT_MATCH = 21
}
/**
 * Describes the enum dxos.echo.model.document.Predicate.Operation.
 */
export declare const Predicate_OperationSchema: GenEnum<Predicate_Operation>;
/**
 * *
 * Query.
 *
 * @generated from message dxos.echo.model.document.Query
 */
export type Query = Message<"dxos.echo.model.document.Query"> & {
    /**
     * @generated from field: dxos.echo.model.document.Predicate root = 1;
     */
    root?: Predicate;
};
/**
 * Describes the message dxos.echo.model.document.Query.
 * Use `create(QuerySchema)` to create a new message.
 */
export declare const QuerySchema: GenMessage<Query>;
/**
 * *
 * State snapshot.
 *
 * @generated from message dxos.echo.model.document.ObjectSnapshot
 */
export type ObjectSnapshot = Message<"dxos.echo.model.document.ObjectSnapshot"> & {
    /**
     * @generated from field: optional string type = 1;
     */
    type?: string;
    /**
     * @generated from field: optional dxos.echo.model.document.Reference type_ref = 4;
     */
    typeRef?: Reference;
    /**
     * @generated from field: dxos.echo.model.document.Value root = 2;
     */
    root?: Value;
    /**
     * @generated from field: optional dxos.echo.model.document.Value meta = 3;
     */
    meta?: Value;
};
/**
 * Describes the message dxos.echo.model.document.ObjectSnapshot.
 * Use `create(ObjectSnapshotSchema)` to create a new message.
 */
export declare const ObjectSnapshotSchema: GenMessage<ObjectSnapshot>;
/**
 * *
 * Atomic mutation.
 *
 * @generated from message dxos.echo.model.document.ObjectMutation
 */
export type ObjectMutation = Message<"dxos.echo.model.document.ObjectMutation"> & {
    /**
     * @generated from field: dxos.echo.model.document.ObjectMutation.Operation operation = 1;
     */
    operation: ObjectMutation_Operation;
    /**
     * @generated from field: string key = 2;
     */
    key: string;
    /**
     * @generated from field: optional dxos.echo.model.document.Value value = 3;
     */
    value?: Value;
    /**
     * @generated from field: optional dxos.echo.model.document.YJS mutation = 4;
     */
    mutation?: YJS;
};
/**
 * Describes the message dxos.echo.model.document.ObjectMutation.
 * Use `create(ObjectMutationSchema)` to create a new message.
 */
export declare const ObjectMutationSchema: GenMessage<ObjectMutation>;
/**
 * @generated from enum dxos.echo.model.document.ObjectMutation.Operation
 */
export declare enum ObjectMutation_Operation {
    /**
     * Default.
     *
     * @generated from enum value: SET = 0;
     */
    SET = 0,
    /**
     * @generated from enum value: DELETE = 1;
     */
    DELETE = 1,
    /**
     * TODO(burdon): Is it possible to delete an array value (which one?)
     *
     * @generated from enum value: ARRAY_PUSH = 2;
     */
    ARRAY_PUSH = 2,
    /**
     *  ARRAY_DELETE                      = 3;    // TODO(burdon): Identify by value.
     *
     * TODO(burdon): Identify by value.
     *
     * @generated from enum value: SET_ADD = 4;
     */
    SET_ADD = 4,
    /**
     * @generated from enum value: SET_DELETE = 5;
     */
    SET_DELETE = 5,
    /**
     * @generated from enum value: YJS = 6;
     */
    YJS = 6
}
/**
 * Describes the enum dxos.echo.model.document.ObjectMutation.Operation.
 */
export declare const ObjectMutation_OperationSchema: GenEnum<ObjectMutation_Operation>;
/**
 * @generated from message dxos.echo.model.document.YJS
 */
export type YJS = Message<"dxos.echo.model.document.YJS"> & {
    /**
     * @generated from field: bytes id = 1;
     */
    id: Uint8Array;
    /**
     * @generated from field: bytes payload = 2;
     */
    payload: Uint8Array;
};
/**
 * Describes the message dxos.echo.model.document.YJS.
 * Use `create(YJSSchema)` to create a new message.
 */
export declare const YJSSchema: GenMessage<YJS>;
/**
 * *
 * Set of mutations.
 *
 * @generated from message dxos.echo.model.document.ObjectMutationSet
 */
export type ObjectMutationSet = Message<"dxos.echo.model.document.ObjectMutationSet"> & {
    /**
     * deprecated
     *
     * @generated from field: optional string type = 1;
     */
    type?: string;
    /**
     * @generated from field: optional dxos.echo.model.document.Reference type_ref = 4;
     */
    typeRef?: Reference;
    /**
     * @generated from field: repeated dxos.echo.model.document.ObjectMutation mutations = 2;
     */
    mutations: ObjectMutation[];
    /**
     * Mutations for the `meta` keyspace.
     *
     * @generated from field: repeated dxos.echo.model.document.ObjectMutation meta_mutations = 3;
     */
    metaMutations: ObjectMutation[];
};
/**
 * Describes the message dxos.echo.model.document.ObjectMutationSet.
 * Use `create(ObjectMutationSetSchema)` to create a new message.
 */
export declare const ObjectMutationSetSchema: GenMessage<ObjectMutationSet>;
//# sourceMappingURL=document_pb.d.ts.map