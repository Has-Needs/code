//
// Copyright 2020 DXOS.org
//

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts,import_extension=js"
// @generated from file dxos/echo/snapshot.proto (package dxos.echo.snapshot, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { TimeframeVector } from "./timeframe_pb.js";
import { file_dxos_echo_timeframe } from "./timeframe_pb.js";
import type { EchoObject } from "./object_pb.js";
import { file_dxos_echo_object } from "./object_pb.js";
import { file_dxos_halo_signed } from "../halo/signed_pb.js";
import { file_dxos_keys } from "../keys_pb.js";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file dxos/echo/snapshot.proto.
 */
export const file_dxos_echo_snapshot: GenFile = /*@__PURE__*/
  fileDesc("ChhkeG9zL2VjaG8vc25hcHNob3QucHJvdG8SEmR4b3MuZWNoby5zbmFwc2hvdCLIAQoNU3BhY2VTbmFwc2hvdBIRCglzcGFjZV9rZXkYASABKAwSPAoJdGltZWZyYW1lGAIgASgLMiQuZHhvcy5lY2hvLnRpbWVmcmFtZS5UaW1lZnJhbWVWZWN0b3JIAIgBARIWCgl0aW1lc3RhbXAYAyABKAVIAYgBARIyCghkYXRhYmFzZRgLIAEoCzIgLmR4b3MuZWNoby5zbmFwc2hvdC5FY2hvU25hcHNob3RCDAoKX3RpbWVmcmFtZUIMCgpfdGltZXN0YW1wIjsKDEVjaG9TbmFwc2hvdBIrCgVpdGVtcxgBIAMoCzIcLmR4b3MuZWNoby5vYmplY3QuRWNob09iamVjdGIGcHJvdG8z", [file_dxos_echo_timeframe, file_dxos_echo_object, file_dxos_halo_signed, file_dxos_keys]);

/**
 * *
 * Snapshots define full space state at a given point in time.
 * They must have enough information to be able to recover the space state without reading the feed messages.
 *
 * Each snapshot is identified by a space key and a timeframe.
 * The timeframe defines the set of feed messages that have already been processed.
 * When loading from the snapshot, application would skip all of the feed messages up to (and including) the provided timeframe.
 *
 * @generated from message dxos.echo.snapshot.SpaceSnapshot
 */
export type SpaceSnapshot = Message<"dxos.echo.snapshot.SpaceSnapshot"> & {
  /**
   * @generated from field: bytes space_key = 1;
   */
  spaceKey: Uint8Array;

  /**
   * @generated from field: optional dxos.echo.timeframe.TimeframeVector timeframe = 2;
   */
  timeframe?: TimeframeVector;

  /**
   * Unix timestamp of the snapshot creation time. For information purposes only.
   * TODO(dmaretskyi): Convert to google.protobuf.Timestamp.
   *
   * @generated from field: optional int32 timestamp = 3;
   */
  timestamp?: number;

  /**
   * @generated from field: dxos.echo.snapshot.EchoSnapshot database = 11;
   */
  database?: EchoSnapshot;
};

/**
 * Describes the message dxos.echo.snapshot.SpaceSnapshot.
 * Use `create(SpaceSnapshotSchema)` to create a new message.
 */
export const SpaceSnapshotSchema: GenMessage<SpaceSnapshot> = /*@__PURE__*/
  messageDesc(file_dxos_echo_snapshot, 0);

/**
 * *
 * Database Snapshot
 *
 * @generated from message dxos.echo.snapshot.EchoSnapshot
 */
export type EchoSnapshot = Message<"dxos.echo.snapshot.EchoSnapshot"> & {
  /**
   * @generated from field: repeated dxos.echo.object.EchoObject items = 1;
   */
  items: EchoObject[];
};

/**
 * Describes the message dxos.echo.snapshot.EchoSnapshot.
 * Use `create(EchoSnapshotSchema)` to create a new message.
 */
export const EchoSnapshotSchema: GenMessage<EchoSnapshot> = /*@__PURE__*/
  messageDesc(file_dxos_echo_snapshot, 1);

