//
// Copyright 2021 DXOS.org
//

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts,import_extension=js"
// @generated from file dxos/echo/metadata.proto (package dxos.echo.metadata, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Invitation, SpaceState } from "../client/invitation_pb.js";
import { file_dxos_client_invitation } from "../client/invitation_pb.js";
import type { ObjectSnapshot } from "./model/document_pb.js";
import { file_dxos_echo_model_document } from "./model/document_pb.js";
import type { TimeframeVector } from "./timeframe_pb.js";
import { file_dxos_echo_timeframe } from "./timeframe_pb.js";
import type { Credential, ProfileDocument } from "../halo/credentials_pb.js";
import { file_dxos_halo_credentials } from "../halo/credentials_pb.js";
import type { PublicKey } from "../keys_pb.js";
import { file_dxos_keys } from "../keys_pb.js";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file dxos/echo/metadata.proto.
 */
export const file_dxos_echo_metadata: GenFile = /*@__PURE__*/
  fileDesc("ChhkeG9zL2VjaG8vbWV0YWRhdGEucHJvdG8SEmR4b3MuZWNoby5tZXRhZGF0YSKrAgoMRWNob01ldGFkYXRhEg8KB3ZlcnNpb24YASABKAUSKwoHY3JlYXRlZBgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASKwoHdXBkYXRlZBgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASOQoIaWRlbnRpdHkYCiABKAsyIi5keG9zLmVjaG8ubWV0YWRhdGEuSWRlbnRpdHlSZWNvcmRIAIgBARIxCgZzcGFjZXMYCyADKAsyIS5keG9zLmVjaG8ubWV0YWRhdGEuU3BhY2VNZXRhZGF0YRI1CgtpbnZpdGF0aW9ucxgMIAMoCzIgLmR4b3MuY2xpZW50LnNlcnZpY2VzLkludml0YXRpb25CCwoJX2lkZW50aXR5IhQKElNtYWxsU3BhY2VNZXRhZGF0YSKHAQoSTGFyZ2VTcGFjZU1ldGFkYXRhElMKGWNvbnRyb2xfcGlwZWxpbmVfc25hcHNob3QYASABKAsyKy5keG9zLmVjaG8ubWV0YWRhdGEuQ29udHJvbFBpcGVsaW5lU25hcHNob3RIAIgBAUIcChpfY29udHJvbF9waXBlbGluZV9zbmFwc2hvdCJeCgpTcGFjZUNhY2hlEkEKCnByb3BlcnRpZXMYASABKAsyKC5keG9zLmVjaG8ubW9kZWwuZG9jdW1lbnQuT2JqZWN0U25hcHNob3RIAIgBAUINCgtfcHJvcGVydGllcyLDBQoNU3BhY2VNZXRhZGF0YRIhCgNrZXkYASABKAsyFC5keG9zLmtleXMuUHVibGljS2V5EjQKBXN0YXRlGAogASgOMiAuZHhvcy5jbGllbnQuc2VydmljZXMuU3BhY2VTdGF0ZUgAiAEBEjMKEGdlbmVzaXNfZmVlZF9rZXkYBiABKAsyFC5keG9zLmtleXMuUHVibGljS2V5SAGIAQESMwoQY29udHJvbF9mZWVkX2tleRgEIAEoCzIULmR4b3Mua2V5cy5QdWJsaWNLZXlIAogBARInCglmZWVkX2tleXMYAiADKAsyFC5keG9zLmtleXMuUHVibGljS2V5EjAKDWRhdGFfZmVlZF9rZXkYAyABKAsyFC5keG9zLmtleXMuUHVibGljS2V5SAOIAQESRAoRY29udHJvbF90aW1lZnJhbWUYCCABKAsyJC5keG9zLmVjaG8udGltZWZyYW1lLlRpbWVmcmFtZVZlY3RvckgEiAEBEkEKDmRhdGFfdGltZWZyYW1lGAUgASgLMiQuZHhvcy5lY2hvLnRpbWVmcmFtZS5UaW1lZnJhbWVWZWN0b3JIBYgBARIyCgVjYWNoZRgJIAEoCzIeLmR4b3MuZWNoby5tZXRhZGF0YS5TcGFjZUNhY2hlSAaIAQESSQoQZWRnZV9yZXBsaWNhdGlvbhgLIAEoDjIqLmR4b3MuZWNoby5tZXRhZGF0YS5FZGdlUmVwbGljYXRpb25TZXR0aW5nSAeIAQFCCAoGX3N0YXRlQhMKEV9nZW5lc2lzX2ZlZWRfa2V5QhMKEV9jb250cm9sX2ZlZWRfa2V5QhAKDl9kYXRhX2ZlZWRfa2V5QhQKEl9jb250cm9sX3RpbWVmcmFtZUIRCg9fZGF0YV90aW1lZnJhbWVCCAoGX2NhY2hlQhMKEV9lZGdlX3JlcGxpY2F0aW9uIpECChdDb250cm9sUGlwZWxpbmVTbmFwc2hvdBI3Cgl0aW1lZnJhbWUYASABKAsyJC5keG9zLmVjaG8udGltZWZyYW1lLlRpbWVmcmFtZVZlY3RvchJMCghtZXNzYWdlcxgCIAMoCzI6LmR4b3MuZWNoby5tZXRhZGF0YS5Db250cm9sUGlwZWxpbmVTbmFwc2hvdC5Db250cm9sTWVzc2FnZRpvCg5Db250cm9sTWVzc2FnZRImCghmZWVkX2tleRgBIAEoCzIULmR4b3Mua2V5cy5QdWJsaWNLZXkSNQoKY3JlZGVudGlhbBgCIAEoCzIhLmR4b3MuaGFsby5jcmVkZW50aWFscy5DcmVkZW50aWFsIrgCCg5JZGVudGl0eVJlY29yZBIqCgxpZGVudGl0eV9rZXkYASABKAsyFC5keG9zLmtleXMuUHVibGljS2V5EigKCmRldmljZV9rZXkYAiABKAsyFC5keG9zLmtleXMuUHVibGljS2V5EjUKCmhhbG9fc3BhY2UYAyABKAsyIS5keG9zLmVjaG8ubWV0YWRhdGEuU3BhY2VNZXRhZGF0YRI9Cg1wcm9maWxlX3NwYWNlGAQgASgLMiEuZHhvcy5lY2hvLm1ldGFkYXRhLlNwYWNlTWV0YWRhdGFIAIgBARI8Cgdwcm9maWxlGAUgASgLMiYuZHhvcy5oYWxvLmNyZWRlbnRpYWxzLlByb2ZpbGVEb2N1bWVudEgBiAEBQhAKDl9wcm9maWxlX3NwYWNlQgoKCF9wcm9maWxlKjMKFkVkZ2VSZXBsaWNhdGlvblNldHRpbmcSDAoIRElTQUJMRUQQABILCgdFTkFCTEVEEAFiBnByb3RvMw", [file_google_protobuf_timestamp, file_dxos_client_invitation, file_dxos_echo_model_document, file_dxos_echo_timeframe, file_dxos_halo_credentials, file_dxos_keys]);

/**
 * / Main metadata record.
 *
 * @generated from message dxos.echo.metadata.EchoMetadata
 */
export type EchoMetadata = Message<"dxos.echo.metadata.EchoMetadata"> & {
  /**
   * *
   * Version number that is incremented every time there's a breaking change to the storage schema.
   * This is used to detect if the storage schema has changed since the last time the client was run.
   * Loading data from a different version will might result in an error.
   *
   * @generated from field: int32 version = 1;
   */
  version: number;

  /**
   * @generated from field: google.protobuf.Timestamp created = 2;
   */
  created?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated = 3;
   */
  updated?: Timestamp;

  /**
   * TODO(dmaretskyi): Store the device key associated with the identity.
   *
   * @generated from field: optional dxos.echo.metadata.IdentityRecord identity = 10;
   */
  identity?: IdentityRecord;

  /**
   * / List of the data spaces.
   *
   * @generated from field: repeated dxos.echo.metadata.SpaceMetadata spaces = 11;
   */
  spaces: SpaceMetadata[];

  /**
   * TODO(burdon): Circular dep.
   *
   * @generated from field: repeated dxos.client.services.Invitation invitations = 12;
   */
  invitations: Invitation[];
};

/**
 * Describes the message dxos.echo.metadata.EchoMetadata.
 * Use `create(EchoMetadataSchema)` to create a new message.
 */
export const EchoMetadataSchema: GenMessage<EchoMetadata> = /*@__PURE__*/
  messageDesc(file_dxos_echo_metadata, 0);

/**
 * / Per-space metadata. Frequent updates. Keep small.
 *
 * @generated from message dxos.echo.metadata.SmallSpaceMetadata
 */
export type SmallSpaceMetadata = Message<"dxos.echo.metadata.SmallSpaceMetadata"> & {
};

/**
 * Describes the message dxos.echo.metadata.SmallSpaceMetadata.
 * Use `create(SmallSpaceMetadataSchema)` to create a new message.
 */
export const SmallSpaceMetadataSchema: GenMessage<SmallSpaceMetadata> = /*@__PURE__*/
  messageDesc(file_dxos_echo_metadata, 1);

/**
 * / Per-space metadata. Infrequent updates.
 *
 * @generated from message dxos.echo.metadata.LargeSpaceMetadata
 */
export type LargeSpaceMetadata = Message<"dxos.echo.metadata.LargeSpaceMetadata"> & {
  /**
   * @generated from field: optional dxos.echo.metadata.ControlPipelineSnapshot control_pipeline_snapshot = 1;
   */
  controlPipelineSnapshot?: ControlPipelineSnapshot;
};

/**
 * Describes the message dxos.echo.metadata.LargeSpaceMetadata.
 * Use `create(LargeSpaceMetadataSchema)` to create a new message.
 */
export const LargeSpaceMetadataSchema: GenMessage<LargeSpaceMetadata> = /*@__PURE__*/
  messageDesc(file_dxos_echo_metadata, 2);

/**
 * @generated from message dxos.echo.metadata.SpaceCache
 */
export type SpaceCache = Message<"dxos.echo.metadata.SpaceCache"> & {
  /**
   * / Properties snapshot.
   *
   * @generated from field: optional dxos.echo.model.document.ObjectSnapshot properties = 1;
   */
  properties?: ObjectSnapshot;
};

/**
 * Describes the message dxos.echo.metadata.SpaceCache.
 * Use `create(SpaceCacheSchema)` to create a new message.
 */
export const SpaceCacheSchema: GenMessage<SpaceCache> = /*@__PURE__*/
  messageDesc(file_dxos_echo_metadata, 3);

/**
 * TODO(dmaretskyi): Cleanup numbering.
 *
 * @generated from message dxos.echo.metadata.SpaceMetadata
 */
export type SpaceMetadata = Message<"dxos.echo.metadata.SpaceMetadata"> & {
  /**
   * / Space key.
   *
   * @generated from field: dxos.keys.PublicKey key = 1;
   */
  key?: PublicKey;

  /**
   * / ACTIVE, INACTIVE, etc.
   *
   * @generated from field: optional dxos.client.services.SpaceState state = 10;
   */
  state?: SpaceState;

  /**
   * @generated from field: optional dxos.keys.PublicKey genesis_feed_key = 6;
   */
  genesisFeedKey?: PublicKey;

  /**
   * / Key of the writable control feed.
   *
   * @generated from field: optional dxos.keys.PublicKey control_feed_key = 4;
   */
  controlFeedKey?: PublicKey;

  /**
   * / List of all feed associated with the space.
   *
   * @generated from field: repeated dxos.keys.PublicKey feed_keys = 2;
   */
  feedKeys: PublicKey[];

  /**
   * / Key of the writable data feed.
   *
   * @generated from field: optional dxos.keys.PublicKey data_feed_key = 3;
   */
  dataFeedKey?: PublicKey;

  /**
   * Latest control timeframe reached while processing space messages.
   *
   * @generated from field: optional dxos.echo.timeframe.TimeframeVector control_timeframe = 8;
   */
  controlTimeframe?: TimeframeVector;

  /**
   * Latest data timeframe reached while processing space messages.
   *
   * @generated from field: optional dxos.echo.timeframe.TimeframeVector data_timeframe = 5;
   */
  dataTimeframe?: TimeframeVector;

  /**
   * @generated from field: optional dxos.echo.metadata.SpaceCache cache = 9;
   */
  cache?: SpaceCache;

  /**
   * @generated from field: optional dxos.echo.metadata.EdgeReplicationSetting edge_replication = 11;
   */
  edgeReplication?: EdgeReplicationSetting;
};

/**
 * Describes the message dxos.echo.metadata.SpaceMetadata.
 * Use `create(SpaceMetadataSchema)` to create a new message.
 */
export const SpaceMetadataSchema: GenMessage<SpaceMetadata> = /*@__PURE__*/
  messageDesc(file_dxos_echo_metadata, 4);

/**
 * @generated from message dxos.echo.metadata.ControlPipelineSnapshot
 */
export type ControlPipelineSnapshot = Message<"dxos.echo.metadata.ControlPipelineSnapshot"> & {
  /**
   * / Timeframe of the last message included in the snapshot.
   *
   * @generated from field: dxos.echo.timeframe.TimeframeVector timeframe = 1;
   */
  timeframe?: TimeframeVector;

  /**
   * @generated from field: repeated dxos.echo.metadata.ControlPipelineSnapshot.ControlMessage messages = 2;
   */
  messages: ControlPipelineSnapshot_ControlMessage[];
};

/**
 * Describes the message dxos.echo.metadata.ControlPipelineSnapshot.
 * Use `create(ControlPipelineSnapshotSchema)` to create a new message.
 */
export const ControlPipelineSnapshotSchema: GenMessage<ControlPipelineSnapshot> = /*@__PURE__*/
  messageDesc(file_dxos_echo_metadata, 5);

/**
 * @generated from message dxos.echo.metadata.ControlPipelineSnapshot.ControlMessage
 */
export type ControlPipelineSnapshot_ControlMessage = Message<"dxos.echo.metadata.ControlPipelineSnapshot.ControlMessage"> & {
  /**
   * @generated from field: dxos.keys.PublicKey feed_key = 1;
   */
  feedKey?: PublicKey;

  /**
   * @generated from field: dxos.halo.credentials.Credential credential = 2;
   */
  credential?: Credential;
};

/**
 * Describes the message dxos.echo.metadata.ControlPipelineSnapshot.ControlMessage.
 * Use `create(ControlPipelineSnapshot_ControlMessageSchema)` to create a new message.
 */
export const ControlPipelineSnapshot_ControlMessageSchema: GenMessage<ControlPipelineSnapshot_ControlMessage> = /*@__PURE__*/
  messageDesc(file_dxos_echo_metadata, 5, 0);

/**
 * / Information needed to bootstrap an Identity.
 *
 * @generated from message dxos.echo.metadata.IdentityRecord
 */
export type IdentityRecord = Message<"dxos.echo.metadata.IdentityRecord"> & {
  /**
   * @generated from field: dxos.keys.PublicKey identity_key = 1;
   */
  identityKey?: PublicKey;

  /**
   * @generated from field: dxos.keys.PublicKey device_key = 2;
   */
  deviceKey?: PublicKey;

  /**
   * @generated from field: dxos.echo.metadata.SpaceMetadata halo_space = 3;
   */
  haloSpace?: SpaceMetadata;

  /**
   * / Public profile information.
   * / TODO(burdon): Not yet implemented. Must be null.
   *
   * @generated from field: optional dxos.echo.metadata.SpaceMetadata profile_space = 4;
   */
  profileSpace?: SpaceMetadata;

  /**
   * / Cached profile.
   *
   * @generated from field: optional dxos.halo.credentials.ProfileDocument profile = 5;
   */
  profile?: ProfileDocument;
};

/**
 * Describes the message dxos.echo.metadata.IdentityRecord.
 * Use `create(IdentityRecordSchema)` to create a new message.
 */
export const IdentityRecordSchema: GenMessage<IdentityRecord> = /*@__PURE__*/
  messageDesc(file_dxos_echo_metadata, 6);

/**
 * @generated from enum dxos.echo.metadata.EdgeReplicationSetting
 */
export enum EdgeReplicationSetting {
  /**
   * @generated from enum value: DISABLED = 0;
   */
  DISABLED = 0,

  /**
   * @generated from enum value: ENABLED = 1;
   */
  ENABLED = 1,
}

/**
 * Describes the enum dxos.echo.metadata.EdgeReplicationSetting.
 */
export const EdgeReplicationSettingSchema: GenEnum<EdgeReplicationSetting> = /*@__PURE__*/
  enumDesc(file_dxos_echo_metadata, 0);

