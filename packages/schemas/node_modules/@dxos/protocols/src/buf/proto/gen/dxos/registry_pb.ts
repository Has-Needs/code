//
// Copyright 2021 DXOS.org
//

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts,import_extension=js"
// @generated from file dxos/registry.proto (package dxos.registry, syntax proto3)
/* eslint-disable */

// TODO(burdon): Rename `dxos.registry.record`.

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_struct, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file dxos/registry.proto.
 */
export const file_dxos_registry: GenFile = /*@__PURE__*/
  fileDesc("ChNkeG9zL3JlZ2lzdHJ5LnByb3RvEg1keG9zLnJlZ2lzdHJ5IscDCgZSZWNvcmQSMAoHY3JlYXRlZBgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBIAYgBARIZCgxkaXNwbGF5X25hbWUYAiABKAlIAogBARIYCgtkZXNjcmlwdGlvbhgDIAEoCUgDiAEBEgwKBHRhZ3MYBCADKAkSKgoEdHlwZRhkIAEoCzIaLmR4b3MucmVnaXN0cnkuUmVjb3JkLlR5cGVIABIyCgdwYXlsb2FkGGUgASgLMh8uZHhvcy5yZWdpc3RyeS5SZWNvcmQuRXh0ZW5zaW9uSAAaggEKBFR5cGUSFAoMbWVzc2FnZV9uYW1lGAEgASgJEi4KDXByb3RvYnVmX2RlZnMYAiABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0Eh4KEXByb3RvYnVmX2lwZnNfY2lkGAMgASgJSACIAQFCFAoSX3Byb3RvYnVmX2lwZnNfY2lkGi4KCUV4dGVuc2lvbhITCgt0eXBlX3JlY29yZBgBIAEoDBIMCgRkYXRhGAIgASgMQgYKBGtpbmRCCgoIX2NyZWF0ZWRCDwoNX2Rpc3BsYXlfbmFtZUIOCgxfZGVzY3JpcHRpb25iBnByb3RvMw", [file_google_protobuf_timestamp, file_google_protobuf_struct]);

/**
 * @generated from message dxos.registry.Record
 */
export type Record = Message<"dxos.registry.Record"> & {
  /**
   * / Record creation timetstamp.
   *
   * @generated from field: optional google.protobuf.Timestamp created = 1;
   */
  created?: Timestamp;

  /**
   * / Human-readable name of record.
   *
   * @generated from field: optional string display_name = 2;
   */
  displayName?: string;

  /**
   * / Record description.
   *
   * @generated from field: optional string description = 3;
   */
  description?: string;

  /**
   * / Optional record tags.
   *
   * @generated from field: repeated string tags = 4;
   */
  tags: string[];

  /**
   * @generated from oneof dxos.registry.Record.kind
   */
  kind: {
    /**
     * / Type record variant.
     *
     * @generated from field: dxos.registry.Record.Type type = 100;
     */
    value: Record_Type;
    case: "type";
  } | {
    /**
     * / Data record variant.
     *
     * @generated from field: dxos.registry.Record.Extension payload = 101;
     */
    value: Record_Extension;
    case: "payload";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message dxos.registry.Record.
 * Use `create(RecordSchema)` to create a new message.
 */
export const RecordSchema: GenMessage<Record> = /*@__PURE__*/
  messageDesc(file_dxos_registry, 0);

/**
 * *
 * Types are system records that define protocol-buffer schema of other records.
 *
 * @generated from message dxos.registry.Record.Type
 */
export type Record_Type = Message<"dxos.registry.Record.Type"> & {
  /**
   * / FQ protobuf message name.
   *
   * @generated from field: string message_name = 1;
   */
  messageName: string;

  /**
   * / Set of protobuf messages encoded.
   *
   * @generated from field: google.protobuf.Struct protobuf_defs = 2;
   */
  protobufDefs?: JsonObject;

  /**
   * / CID of protobuf source file.
   *
   * @generated from field: optional string protobuf_ipfs_cid = 3;
   */
  protobufIpfsCid?: string;
};

/**
 * Describes the message dxos.registry.Record.Type.
 * Use `create(Record_TypeSchema)` to create a new message.
 */
export const Record_TypeSchema: GenMessage<Record_Type> = /*@__PURE__*/
  messageDesc(file_dxos_registry, 0, 0);

/**
 * *
 * Data with a reference to a type record that defines the encoding.
 *
 * @generated from message dxos.registry.Record.Extension
 */
export type Record_Extension = Message<"dxos.registry.Record.Extension"> & {
  /**
   * / CID of type record.
   *
   * @generated from field: bytes type_record = 1;
   */
  typeRecord: Uint8Array;

  /**
   * / Serialized payload data.
   *
   * @generated from field: bytes data = 2;
   */
  data: Uint8Array;
};

/**
 * Describes the message dxos.registry.Record.Extension.
 * Use `create(Record_ExtensionSchema)` to create a new message.
 */
export const Record_ExtensionSchema: GenMessage<Record_Extension> = /*@__PURE__*/
  messageDesc(file_dxos_registry, 0, 1);

