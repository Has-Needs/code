export declare const mapValues: <T, U>(obj: Record<string, T>, fn: (value: T, key: string) => U) => Record<string, U>;
/**
 * Recursively maps values traversing arrays and objects.
 * @param fn Function to apply to each value. Second argument is a function to recurse into the value.
 */
export declare const deepMapValues: (value: any, fn: (value: any, recurse: (value: any) => any, key: string | number | undefined) => any) => any;
/**
 * Recursively maps values traversing arrays and objects.
 * @param fn Function to apply to each value. Second argument is a function to recurse into the value.
 * Async version.
 */
export declare const deepMapValuesAsync: (value: any, fn: (value: any, recurse: (value: any) => Promise<any>, key: string | number | undefined) => Promise<any>) => Promise<any>;
/**
 * Visits all values on an object or every item in an array.
 * No-op if the value is not an object or array.
 */
export declare const visitValues: (object: unknown, visitor: (value: unknown, key: string | number) => void) => void;
//# sourceMappingURL=map-values.d.ts.map