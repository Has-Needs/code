"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var node_exports = {};
__export(node_exports, {
  registerSignalsRuntime: () => registerSignalsRuntime2
});
module.exports = __toCommonJS(node_exports);
var import_chunk_HHLQYG75 = require("./chunk-HHLQYG75.cjs");
var import_signals = require("@preact/signals");
var registered = false;
var registerSignalsRuntime2 = () => {
  if (registered) {
    return false;
  }
  (0, import_chunk_HHLQYG75.registerSignalsRuntime)({
    createSignal: (debugInfo) => {
      const thisSignal = (0, import_signals.signal)({});
      thisSignal.__debugInfo = debugInfo;
      return {
        notifyRead: () => {
          const _ = thisSignal.value;
        },
        notifyWrite: () => {
          thisSignal.value = {};
        }
      };
    },
    batch: import_signals.batch,
    untracked: import_signals.untracked
  });
  registered = true;
  return true;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  registerSignalsRuntime
});
//# sourceMappingURL=index.cjs.map
