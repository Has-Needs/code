"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var edge_exports = {};
__export(edge_exports, {
  createEdgeIdentity: () => createEdgeIdentity
});
module.exports = __toCommonJS(edge_exports);
var createEdgeIdentity = (client) => {
  const identity = client.halo.identity.get();
  const device = client.halo.device;
  if (!identity || !device) {
    throw new Error("Identity not available");
  }
  return {
    identityKey: identity.identityKey.toHex(),
    peerKey: device.deviceKey.toHex(),
    presentCredentials: async ({ challenge }) => {
      const identityService = client.services.services.IdentityService;
      const authCredential = await identityService.createAuthCredential();
      return identityService.signPresentation({
        presentation: {
          credentials: [
            authCredential
          ]
        },
        nonce: challenge
      });
    }
  };
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  createEdgeIdentity
});
//# sourceMappingURL=index.cjs.map
