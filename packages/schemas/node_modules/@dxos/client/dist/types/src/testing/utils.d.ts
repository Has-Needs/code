import { type Space } from '@dxos/client-protocol';
import type { Config } from '@dxos/config';
import { type Context } from '@dxos/context';
import { type PublicKey } from '@dxos/keys';
import { Client } from '../client';
type Options = {
    timeout?: number;
    ready?: boolean;
};
export declare const waitForSpace: (client: Client, spaceKey: PublicKey, { timeout, ready }?: Options) => Promise<Space>;
export type CreateInitializedClientsOptions = {
    config?: Config;
    storage?: boolean;
    serviceConfig?: {
        fastPeerPresenceUpdate?: boolean;
    };
};
export declare const createInitializedClientsWithContext: (ctx: Context, count: number, options?: CreateInitializedClientsOptions) => Promise<Client[]>;
export {};
//# sourceMappingURL=utils.d.ts.map