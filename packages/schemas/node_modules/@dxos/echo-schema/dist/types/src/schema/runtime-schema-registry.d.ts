import { type Schema } from 'effect';
import { type DXN } from '@dxos/keys';
/**
 * Runtime registry of static schema objects (i.e., not Dynamic .
 */
export declare class RuntimeSchemaRegistry {
    private readonly _registry;
    constructor();
    get schemas(): Schema.Schema.AnyNoContext[];
    hasSchema<S extends Schema.Schema.AnyNoContext>(schema: S): boolean;
    getSchemaByDXN(dxn: DXN): Schema.Schema.AnyNoContext | undefined;
    /**
     * @deprecated Use getSchemaByDXN.
     */
    getSchema(typename: string): Schema.Schema.AnyNoContext | undefined;
    addSchema(types: Schema.Schema.AnyNoContext[]): void;
}
//# sourceMappingURL=runtime-schema-registry.d.ts.map