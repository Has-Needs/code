import { type EdgeConnection } from '@dxos/edge-client';
import type { SpaceId } from '@dxos/keys';
import { type EchoReplicator, type EchoReplicatorContext } from '../automerge';
export type EchoEdgeReplicatorParams = {
    edgeConnection: EdgeConnection;
    disableSharePolicy?: boolean;
};
export declare class EchoEdgeReplicator implements EchoReplicator {
    private readonly _edgeConnection;
    private readonly _mutex;
    private _ctx?;
    private _context;
    private _connectedSpaces;
    private _connections;
    private _sharePolicyEnabled;
    constructor({ edgeConnection, disableSharePolicy }: EchoEdgeReplicatorParams);
    connect(context: EchoReplicatorContext): Promise<void>;
    private _handleReconnect;
    disconnect(): Promise<void>;
    connectToSpace(spaceId: SpaceId): Promise<void>;
    disconnectFromSpace(spaceId: SpaceId): Promise<void>;
    private _openConnection;
}
//# sourceMappingURL=echo-edge-replicator.d.ts.map