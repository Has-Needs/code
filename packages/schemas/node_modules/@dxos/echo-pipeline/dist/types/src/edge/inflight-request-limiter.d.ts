import { Resource } from '@dxos/context';
import { type AutomergeProtocolMessage } from '@dxos/protocols';
type InflightRequestLimiterConfig = {
    maxInflightRequests: number;
    resetBalanceTimeoutMs: number;
};
export declare class InflightRequestLimiter extends Resource {
    private readonly _config;
    /**
     * Decrement when we receive a sync message, increment when we send one.
     * Can't exceed _config.maxInflightRequests.
     * Resets after timeout to avoid replicator being stuck.
     */
    private _inflightRequestBalance;
    private _requestBarrier;
    private _resetBalanceTimeout;
    constructor(_config: InflightRequestLimiterConfig);
    protected _open(): Promise<void>;
    protected _close(): Promise<void>;
    rateLimit(message: AutomergeProtocolMessage): Promise<void>;
    handleResponse(message: AutomergeProtocolMessage): void;
}
export {};
//# sourceMappingURL=inflight-request-limiter.d.ts.map