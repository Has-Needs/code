import { type SpaceState, type MemberInfo, type FeedInfo, type DelegateInvitationCredential } from '@dxos/credentials';
import { type FeedWrapper } from '@dxos/feed-store';
import { PublicKey } from '@dxos/keys';
import type { FeedMessage } from '@dxos/protocols/proto/dxos/echo/feed';
import { type Credential } from '@dxos/protocols/proto/dxos/halo/credentials';
import { type AsyncCallback, Callback } from '@dxos/util';
import { type MetadataStore } from '../metadata';
import { type PipelineAccessor } from '../pipeline';
export type ControlPipelineParams = {
    spaceKey: PublicKey;
    genesisFeed: FeedWrapper<FeedMessage>;
    feedProvider: (feedKey: PublicKey) => Promise<FeedWrapper<FeedMessage>>;
    metadataStore: MetadataStore;
};
/**
 * Processes HALO credentials, which include genesis and invitations.
 */
export declare class ControlPipeline {
    private readonly _ctx;
    private readonly _pipeline;
    private readonly _spaceStateMachine;
    private readonly _spaceKey;
    private readonly _metadata;
    private _targetTimeframe?;
    private _lastTimeframeSaveTime;
    readonly onFeedAdmitted: Callback<AsyncCallback<FeedInfo>>;
    readonly onMemberRoleChanged: Callback<AsyncCallback<MemberInfo[]>>;
    readonly onCredentialProcessed: Callback<AsyncCallback<Credential>>;
    readonly onDelegatedInvitation: Callback<AsyncCallback<DelegateInvitationCredential>>;
    readonly onDelegatedInvitationRemoved: Callback<AsyncCallback<DelegateInvitationCredential>>;
    private _usage;
    private _mutations;
    private _snapshotTask;
    constructor({ spaceKey, genesisFeed, feedProvider, metadataStore }: ControlPipelineParams);
    get spaceState(): SpaceState;
    get pipeline(): PipelineAccessor;
    setWriteFeed(feed: FeedWrapper<FeedMessage>): Promise<void>;
    start(): Promise<void>;
    private _processSnapshot;
    private _saveSnapshot;
    private _consumePipeline;
    private _processMessage;
    private _noteTargetStateIfNeeded;
    stop(): Promise<void>;
    private _saveTargetTimeframe;
}
//# sourceMappingURL=control-pipeline.d.ts.map