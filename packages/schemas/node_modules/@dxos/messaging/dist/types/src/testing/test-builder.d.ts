import { TestPeer } from './test-peer';
import { type SignalManager } from '../signal-manager';
import { type Message } from '../signal-methods';
export type TestBuilderOptions = {
    signalManagerFactory?: (peer: TestPeer) => Promise<SignalManager>;
    messageDisruption?: (msg: Message) => Message[];
};
export declare class TestBuilder {
    options: TestBuilderOptions;
    private _signalContext;
    private readonly _peers;
    constructor(options: TestBuilderOptions);
    createSignalManager(peer: TestPeer): Promise<SignalManager>;
    createPeer(): Promise<TestPeer>;
    createPeers(count: number): Promise<TestPeer[]>;
    close(): Promise<void>;
}
//# sourceMappingURL=test-builder.d.ts.map