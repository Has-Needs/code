import type { AbstractValueEncoding } from 'hypercore';
import { type Codec } from '@dxos/codec-protobuf';
import { type FeedWriter } from '../feed-writer';
export type TestItem = {
    id: string;
    index: number;
    value: string;
};
export declare const defaultCodec: Codec<any>;
export declare const defaultValueEncoding: AbstractValueEncoding<any>;
export type TestBlockGenerator<T> = (i: number) => T;
export declare const defaultTestBlockGenerator: TestBlockGenerator<TestItem>;
/**
 * Writes data to feeds.
 */
export declare class TestGenerator<T extends {}> {
    private readonly _generate;
    _count: number;
    constructor(_generate: TestBlockGenerator<T>);
    writeBlocks(writer: FeedWriter<T>, { count, delay, }?: {
        count?: number;
        delay?: {
            min: number;
            max: number;
        };
    }): Promise<import("..").WriteReceipt[]>;
}
export declare const defaultTestGenerator: TestGenerator<TestItem>;
//# sourceMappingURL=test-generator.d.ts.map