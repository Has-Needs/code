import { Resource } from '@dxos/context';
import { type EdgeConnection } from '@dxos/edge-client';
import { type FeedWrapper } from '@dxos/feed-store';
import { type SpaceId } from '@dxos/keys';
export type EdgeFeedReplicatorParams = {
    messenger: EdgeConnection;
    spaceId: SpaceId;
};
export declare class EdgeFeedReplicator extends Resource {
    private readonly _messenger;
    private readonly _spaceId;
    private readonly _feeds;
    private _connectionCtx?;
    private _connected;
    /**
     * Feed length at service.
     */
    private _remoteLength;
    /**
     * Protects against concurrent pushes so that remote length is updated consistently.
     */
    private _pushMutex;
    constructor({ messenger, spaceId }: EdgeFeedReplicatorParams);
    protected _open(): Promise<void>;
    private _handleReconnect;
    protected _close(): Promise<void>;
    private _startReplication;
    private _resetConnection;
    addFeed(feed: FeedWrapper<any>): Promise<void>;
    private _getPushMutex;
    private _replicateFeed;
    private _sendMessage;
    private _onMessage;
    private _pushBlocks;
    private _integrateBlocks;
    private _pushBlocksIfNeeded;
    private _createConnectionContext;
}
//# sourceMappingURL=edge-feed-replicator.d.ts.map