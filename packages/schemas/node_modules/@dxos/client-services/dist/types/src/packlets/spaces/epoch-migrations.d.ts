import { type Context } from '@dxos/context';
import { type EchoHost } from '@dxos/echo-pipeline';
import type { PublicKey, SpaceId } from '@dxos/keys';
import { CreateEpochRequest } from '@dxos/protocols/proto/dxos/client/services';
export type MigrationContext = {
    echoHost: EchoHost;
    spaceId: SpaceId;
    /**
     * @deprecated Remove.
     */
    spaceKey: PublicKey;
    migration: CreateEpochRequest.Migration;
    currentRoot: string | null;
    /**
     * For set automerge root migration type.
     */
    newAutomergeRoot?: string;
};
export type MigrationResult = {
    newRoot?: string;
};
export declare const runEpochMigration: (ctx: Context, context: MigrationContext) => Promise<MigrationResult>;
//# sourceMappingURL=epoch-migrations.d.ts.map