import { type PublicKey } from '@dxos/keys';
import { type Provider } from '@dxos/util';
import { type TestPeer, type TestSwarmConnection } from '../testing';
import { type Topology } from '../topology';
/**
 * Open peers and close after tests complete.
 */
export declare const openAndCloseAfterTest: (peers: TestPeer[]) => Promise<void>;
/**
 * Join and cleanly leave swarm.
 */
export declare const joinSwarm: (peers: TestPeer[], topic: PublicKey, topology?: Provider<Topology>) => Promise<TestSwarmConnection[]>;
/**
 * Cleanly leave swarm.
 */
export declare const leaveSwarm: (peers: TestPeer[], topic: PublicKey) => Promise<TestSwarmConnection[]>;
/**
 * Exchange messages between peers.
 */
export declare const exchangeMessages: (swarm1: TestSwarmConnection, swarm2: TestSwarmConnection, message?: string) => Promise<void>;
//# sourceMappingURL=utils.d.ts.map