import { createRequire } from 'node:module';const require = createRequire(import.meta.url);

// packages/common/lock-file/src/lock-file.ts
import { flock } from "fs-ext";
import { existsSync } from "node:fs";
import { open, constants } from "node:fs/promises";
var LockFile = class _LockFile {
  static async acquire(filename) {
    const handle = await open(filename, constants.O_CREAT);
    await new Promise((resolve, reject) => {
      flock(handle.fd, "exnb", async (err) => {
        if (err) {
          reject(err);
          await handle.close();
          return;
        }
        resolve();
      });
    });
    return handle;
  }
  static async release(handle) {
    await new Promise((resolve, reject) => {
      flock(handle.fd, "un", (err) => {
        if (err) {
          reject(err);
          return;
        }
        resolve();
      });
    });
    await handle.close();
  }
  static async isLocked(filename) {
    if (!existsSync(filename)) {
      return false;
    }
    try {
      const handle = await _LockFile.acquire(filename);
      await _LockFile.release(handle);
      return false;
    } catch (e) {
      return true;
    }
  }
};
export {
  LockFile
};
//# sourceMappingURL=index.mjs.map
