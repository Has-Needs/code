"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var node_exports = {};
__export(node_exports, {
  LockFile: () => LockFile
});
module.exports = __toCommonJS(node_exports);
var import_fs_ext = require("fs-ext");
var import_node_fs = require("node:fs");
var import_promises = require("node:fs/promises");
var LockFile = class _LockFile {
  static async acquire(filename) {
    const handle = await (0, import_promises.open)(filename, import_promises.constants.O_CREAT);
    await new Promise((resolve, reject) => {
      (0, import_fs_ext.flock)(handle.fd, "exnb", async (err) => {
        if (err) {
          reject(err);
          await handle.close();
          return;
        }
        resolve();
      });
    });
    return handle;
  }
  static async release(handle) {
    await new Promise((resolve, reject) => {
      (0, import_fs_ext.flock)(handle.fd, "un", (err) => {
        if (err) {
          reject(err);
          return;
        }
        resolve();
      });
    });
    await handle.close();
  }
  static async isLocked(filename) {
    if (!(0, import_node_fs.existsSync)(filename)) {
      return false;
    }
    try {
      const handle = await _LockFile.acquire(filename);
      await _LockFile.release(handle);
      return false;
    } catch (e) {
      return true;
    }
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  LockFile
});
//# sourceMappingURL=index.cjs.map
